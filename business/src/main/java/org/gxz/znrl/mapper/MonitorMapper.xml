<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.gxz.znrl.mapper.MonitorMapper">

    <sql id="paging_top_sql">
        select * from (
    </sql>

    <sql id="paging_bottom_sql">
        ) t where t.rownumber between #{beginRowIndex,jdbcType=INTEGER} and #{endRowIndex,jdbcType=INTEGER}
    </sql>


    <select id="qryWeightListCnt" parameterType="org.gxz.znrl.entity.WeightEntity" resultType="java.lang.Integer" >
        select count(1)
        from RLRECORDMSTQY a, RLCARCZMST b
        where a.record_no = b.record_no
        and a.record_dtm between trunc(sysdate) and trunc(sysdate)+1-0.00001
    </select>


    <resultMap id="weightMonitorResultMap" type="org.gxz.znrl.entity.WeightEntity">
        <id column="record_no" jdbcType="INTEGER" property="recordNo" />
        <result column="card_id" jdbcType="VARCHAR" property="cardId" />
        <result column="car_id" jdbcType="VARCHAR" property="carId" />
        <result column="colry_nam" jdbcType="VARCHAR" property="colryName" />
        <result column="coal_nam" jdbcType="VARCHAR" property="coalName" />
        <result column="carrier_nam" jdbcType="VARCHAR" property="carrierName" />
        <result column="mz_qty" jdbcType="VARCHAR" property="mzQty" />
        <result column="cz_time" jdbcType="VARCHAR" property="czTime" />
        <result column="pz_qty" jdbcType="VARCHAR" property="pzQty" />
        <result column="jq_time" jdbcType="VARCHAR" property="jqTime" />
        <result column="net_qty" jdbcType="VARCHAR" property="netQty" />
    </resultMap>

    <select id="qryWeightList" parameterType="org.gxz.znrl.entity.WeightEntity" resultMap="weightMonitorResultMap" >
        <include refid="paging_top_sql" />
        select a.record_no,
        a.card_id,
        a.car_id,
        (select cm.mine_name from COAL_MINE cm where cm.mine_no = a.colry_no) colry_nam,
        (select ct.coal_name from COAL_TYPE ct where ct.coal_no = to_char(a.coal_no)) coal_nam,
        (select ci.carrier_name from CARRIER_INFO ci where ci.carrier_no = a.carrier_no) carrier_nam,
        to_char(b.mz_qty) mz_qty,
        to_char(b.cz_dtm, 'yyyy-mm-dd hh24:mi:ss') cz_time,
        to_char(b.pz_qty) pz_qty,
        to_char(b.jq_dtm, 'yyyy-mm-dd hh24:mi:ss') jq_time,
        to_char(b.net_qty) net_qty,
        rownum rownumber
        from RLRECORDMSTQY a, RLCARCZMST b
        where a.record_no = b.record_no
        and a.record_dtm between trunc(sysdate) and trunc(sysdate)+1-0.00001
        order by a.record_dtm desc

        <include refid="paging_bottom_sql" />
    </select>


    <select id="qrySampleListCnt" resultType="java.lang.Integer" >
        select count(1)
        from RLRECORDMSTQY a, TAKE_SAMPLE_REC b
        where a.record_no = b.record_no
        and a.record_dtm between trunc(sysdate) and trunc(sysdate + 1) - 0.00001
    </select>


    <resultMap id="SampleMonitorResultMap" type="org.gxz.znrl.entity.WeightRptEntity">
        <id column="record_no" jdbcType="INTEGER" property="recordNo" />
        <result column="car_id" jdbcType="VARCHAR" property="carId" />
        <result column="coal_nam" jdbcType="VARCHAR" property="coalNam" />
        <result column="car_type_name" jdbcType="VARCHAR" property="carTypeName" />
        <result column="machine_code" jdbcType="VARCHAR" property="machineCode" />
        <result column="smpl_start_time" jdbcType="VARCHAR" property="smplStartTime" />
        <result column="smpl_end_time" jdbcType="VARCHAR" property="smplEndTime" />
        <result column="sample_user_name" jdbcType="VARCHAR" property="sampleUserName" />
    </resultMap>

    <select id="qrySampleList"  resultMap="SampleMonitorResultMap" >
        <include refid="paging_top_sql" />
        select a.record_no,
        a.car_id,
        (select car_type_name from RLCARMST c where c.car_id = to_char(a.car_id)) car_type_name,
        b.machine_code,
        (select ct.coal_name from COAL_TYPE ct where ct.coal_no = a.coal_no) coal_nam,
        to_char(b.start_time, 'yyyy-mm-dd hh24:mi:ss') smpl_start_time,
        to_char(b.end_time, 'yyyy-mm-dd hh24:mi:ss') smpl_end_time,
        b.user_name sample_user_name,
        rownum rownumber
        from RLRECORDMSTQY a, TAKE_SAMPLE_REC b
        where a.record_no = b.record_no
        and a.record_dtm between trunc(sysdate) and trunc(sysdate + 1) - 0.00001
        order by a.record_dtm desc
        <include refid="paging_bottom_sql" />
    </select>

    <!--全厂总览：查询今日来煤情况-->
    <resultMap id="TodayArrivedCoalResultMap" type="org.gxz.znrl.entity.WeightRptEntity">
        <result column="ven_nam" jdbcType="VARCHAR" property="venNam" />
        <result column="coal_nam" jdbcType="VARCHAR" property="coalNam" />
        <result column="total_mz" jdbcType="VARCHAR" property="totalMzQty" />
        <result column="total_net" jdbcType="VARCHAR" property="totalNetQty" />
        <result column="total_cnt" jdbcType="VARCHAR" property="totalEntryCnt" />
    </resultMap>

    <select id="qryTodayArrivedCoal"  resultMap="TodayArrivedCoalResultMap" >
        select ven_nam, coal_nam, to_char(nvl(sum(mz_qty), 0)) total_mz, to_char(nvl(sum(net_qty), 0)) total_net, to_char(count(*)) total_cnt
        from (select (select vi.ven_name
        from VENDOR_INFO vi
        where vi.ven_no = a.ven_no) ven_nam,
        (select ct.coal_name
        from COAL_TYPE ct
        where ct.coal_no = a.coal_no) coal_nam,
        to_char(b.mz_qty) mz_qty,
        to_char(b.net_qty) net_qty
        from RLRECORDMSTQY a, RLCARCZMST b
        where a.record_no = b.record_no
        and a.record_dtm between trunc(sysdate) and trunc(sysdate) + 1 - 0.00001)
        group by ven_nam, coal_nam

    </select>



    <!--查询人工操作日志-->
    <resultMap id="lopRecInfoResultMap" type="org.gxz.znrl.entity.LogOpRecEntity">
        <result column="LOG_ID" jdbcType="VARCHAR" property="logId" />
        <result column="LOG_OP_CODE" jdbcType="VARCHAR" property="logOpCode" />
        <result column="LOG_OP_NAME" jdbcType="VARCHAR" property="logOpName" />
        <result column="LOG_TYPE" jdbcType="VARCHAR" property="logType" />
        <result column="LOG_TYPE_DEC" jdbcType="VARCHAR" property="logTypeDec" />
        <result column="MOD_DESC" jdbcType="VARCHAR" property="modDec" />
        <result column="LOG_DT" jdbcType="VARCHAR" property="logTime" />
        <result column="host_ip" jdbcType="VARCHAR" property="hostIp" />
        <result column="oper_menu" jdbcType="VARCHAR" property="operMenu" />
        <result column="oper_button" jdbcType="VARCHAR" property="operButton" />
        <result column="request_params" jdbcType="VARCHAR" property="requestParams" />
    </resultMap>

    <select id="qryOpLogInfoCnt" resultType="java.lang.Integer" parameterType="org.gxz.znrl.entity.LogOpRecEntity">
        select count(1)
        from log_mod_info a
        left join log_type_desc ld on a.log_type = ld.log_type
        left join security_user su on to_char(a.LOG_OP_CODE) = to_char(su.ID)
        where 1=1
        <if test="opStartTime != null" >
            AND a.LOG_DT <![CDATA[ >= ]]> to_date(#{opStartTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>
        <if test="opEndTime != null" >
            AND a.LOG_DT <![CDATA[ <= ]]> to_date(#{opEndTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>
        <if test="logOpCode != null" >
            AND a.LOG_OP_CODE = #{logOpCode,jdbcType=VARCHAR}
        </if>
        <if test="logOpName != null" >
            AND su.REALNAME = #{logOpName,jdbcType=VARCHAR}
        </if>
        <if test="logType != null" >
            AND ld.log_type_id = #{logType,jdbcType=VARCHAR}
        </if>
        <if test='sysLogType == "0"' >
            AND a.SYS_LOG_TYPE is null
        </if>
        <if test='sysLogType == "1"' >
            AND a.SYS_LOG_TYPE = '1'
        </if>
    </select>

    <select id="qryOpLogInfo" resultMap="lopRecInfoResultMap" parameterType="org.gxz.znrl.entity.LogOpRecEntity">
        <include refid="paging_top_sql" />
        select t.LOG_ID ,
        t.LOG_OP_CODE,
        t.LOG_TYPE_DEC,
        t.LOG_OP_NAME,
        t.MOD_DESC,
        t.LOG_DT,
        t.host_ip,
        t.oper_menu,
        t.oper_button,
        t.request_params,
        rownum rownumber
        from  (select a.LOG_ID ,
        a.LOG_OP_CODE,
        ld.description LOG_TYPE_DEC,
        su.realname LOG_OP_NAME,
        a.MOD_DESC,
        a.LOG_DT,
        a.host_ip,
        a.oper_menu,
        a.oper_button,
        a.request_params
        from log_mod_info a
        left join log_type_desc ld on a.log_type = ld.log_type
        left join security_user su on to_char(a.LOG_OP_CODE) = to_char(su.ID)
        where 1=1
        <if test="opStartTime != null" >
            AND a.LOG_DT <![CDATA[ >= ]]> to_date(#{opStartTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>
        <if test="opEndTime != null" >
            AND a.LOG_DT <![CDATA[ <= ]]> to_date(#{opEndTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>
        <if test="logOpCode != null" >
            AND a.LOG_OP_CODE = #{logOpCode,jdbcType=VARCHAR}
        </if>
        <if test="logOpName != null" >
            AND su.REALNAME = #{logOpName,jdbcType=VARCHAR}
        </if>
        <if test="logType != null" >
            AND ld.log_type_id = #{logType,jdbcType=VARCHAR}
        </if>
        <if test='sysLogType == "0"' >
            AND a.SYS_LOG_TYPE is null
        </if>
        <if test='sysLogType == "1"' >
            AND a.SYS_LOG_TYPE = '1'
        </if>
        order by A.LOG_DT desc) t
        <include refid="paging_bottom_sql" />
    </select>


    <!--全厂总览：查询汽车动态信息-->
    <resultMap id="carDynamicResultMap" type="org.gxz.znrl.entity.WeightRptEntity">
        <result column="car_id" jdbcType="VARCHAR" property="carId" />
        <result column="carrier_nam" jdbcType="VARCHAR" property="carrierNam" />
        <result column="coal_nam" jdbcType="VARCHAR" property="coalNam" />
        <result column="record_dtm" jdbcType="VARCHAR" property="recordDtm" />
        <result column="cur_pos" jdbcType="VARCHAR" property="curPos" />
        <result column="next_pos" jdbcType="VARCHAR" property="nextPos" />
    </resultMap>

    <select id="qryCarDynamic"  resultMap="carDynamicResultMap" >
        select a.car_id,
        (select ci.carrier_name
        from CARRIER_INFO ci
        where ci.carrier_no = a.carrier_no) carrier_nam,
        (select ct.coal_name from COAL_TYPE ct where ct.coal_no = a.coal_no) coal_nam,
        to_char(a.record_dtm, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
        getCarFlowInfo(a.record_no,'CUR') cur_pos,
        getCarFlowInfo(a.record_no,'NEXT') next_pos
        from RLRECORDMSTQY a
        where a.record_dtm between trunc(sysdate) and trunc(sysdate) + 1 - 0.00001
        order by a.record_dtm desc
    </select>

    <!--制样动态信息查询-->
    <resultMap id="samplingResultMap" type="org.gxz.znrl.entity.MakeSampleEntity">
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="sampling_code" jdbcType="VARCHAR" property="samplingCode" />
        <result column="pack_code" jdbcType="VARCHAR" property="packCode" />
        <result column="zy_weight" jdbcType="VARCHAR" property="zyWeight" />
        <result column="zy_type" jdbcType="VARCHAR" property="zyType" />
        <result column="sample_type" jdbcType="VARCHAR" property="sampleType" />
        <result column="start_time" jdbcType="VARCHAR" property="startTime" />
        <result column="end_time" jdbcType="VARCHAR" property="endTime" />
        <result column="sample_weight" jdbcType="VARCHAR" property="sampleWeight" />
        <result column="user_name" jdbcType="VARCHAR" property="sampleUserName" />
    </resultMap>

    <select id="qrySampling"  resultMap="samplingResultMap" >
        select (select bni.batch_no
        from BATCH_NO_INFO bni
        where bni.sample_code = b.sample_code) batch_no,
        b.sampling_code,
        b.pack_code,
        b.zy_weight,
        decode(b.zy_type, '0', '在线制样', '1', '离线制样') zy_type,
        (select decode(ts.sample_typ, '0', '在线采样', '1','离线采样', '2', '半自动')
        from TAKE_SAMPLE_REC ts
        where ts.sample_code = b.sample_code
        and rownum = 1) sample_type,
        b.start_time,
        b.end_time,
        b.sample_weight,
        b.user_name
        from prepar_sampling_rec b,RLRECORDMSTQY c
        where b.SAMPLE_CODE = c.sample_code
        and b.insert_time between trunc(sysdate) and trunc(sysdate) + 1 - 0.00001
        order by b.insert_time desc
    </select>


    <!--设备动态信息查询-->
    <resultMap id="deviceBroadResultMap" type="org.gxz.znrl.entity.DeviceBroadEntity">
        <id column="broad_rec_id" jdbcType="INTEGER" property="broadRecId" />
        <result column="broad_time" jdbcType="VARCHAR" property="broadTime" />
        <result column="broad_dec" jdbcType="VARCHAR" property="broadDec" />
        <result column="machin_code" jdbcType="VARCHAR" property="broadMachinCode" />
        <result column="flow_id" jdbcType="VARCHAR" property="broadFlowId" />
    </resultMap>

    <select id="qryDeviceBroad"  resultMap="deviceBroadResultMap" parameterType="org.gxz.znrl.entity.DeviceBroadEntity">
        select t.broad_rec_id, t.broad_time, t.broad_dec
        from (select a.broad_rec_id,
        a.broad_time,
        a.broad_dec,
        a.machin_code,
        a.flow_id,
        row_number() over(order by a.broad_rec_id desc) broadordr
        from DEVICE_BROAD_INFO a
        where a.device_broad_pri = #{deviceBroadPri,jdbcType=VARCHAR}) t
        where t.broadordr  <![CDATA[     <=     ]]>  25
    </select>

    <select id="qryDeviceBroadViewCnt" resultType="java.lang.Integer" parameterType="org.gxz.znrl.entity.DeviceBroadEntity">
        select count(1)
        from DEVICE_BROAD_INFO a
        where a.device_broad_pri = #{deviceBroadPri,jdbcType=VARCHAR}
        <if test="beginTime != null" >
            AND A.BROAD_TIME <![CDATA[ >= ]]> to_date(#{beginTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>
        <if test="endTime != null" >
            AND A.BROAD_TIME <![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>
        <if test="machineCode != null" >
            AND A.MACHIN_CODE = #{machineCode,jdbcType=VARCHAR}
        </if>
    </select>


    <!--设备动态信息查询-->
    <resultMap id="deviceBroadViewResultMap" type="org.gxz.znrl.entity.DeviceBroadEntity">
        <id column="broad_rec_id" jdbcType="INTEGER" property="broadRecId" />
        <result column="broad_time" jdbcType="VARCHAR" property="broadTime" />
        <result column="broad_dec" jdbcType="VARCHAR" property="broadDec" />
        <result column="MACHIN_CODE" jdbcType="VARCHAR" property="machineCode" />
        <result column="MACHIN_NAME" jdbcType="VARCHAR" property="machinName" />
        <result column="FLOW_ID" jdbcType="VARCHAR" property="flowId" />
        <result column="FLOW_NAME" jdbcType="VARCHAR" property="flowName" />
    </resultMap>

    <select id="qryDeviceBroadView"  resultMap="deviceBroadViewResultMap" parameterType="org.gxz.znrl.entity.DeviceBroadEntity">
        <include refid="paging_top_sql" />
        select t.broad_rec_id,
        t.broad_time,
        t.broad_dec,
        t.MACHIN_CODE,
        t.MACHIN_NAME,
        t.FLOW_ID,
        t.FLOW_NAME,
        rownum rownumber
        from (select A.broad_rec_id,
        A.broad_time,
        A.broad_dec,
        A.MACHIN_CODE,
        GET_TABLE_COLUMN_BY_COLUMN('MACHINE_NAME','DEVICE_INFO', 'MACHINE_CODE', NVL(A.MACHIN_CODE,'NULL'), '=', '1', 1) MACHIN_NAME,
        A.FLOW_ID,
        DECODE(A.FLOW_ID,'RC1','入厂1','RC2','入厂2','CY1','采样1','CY2','采样2','CZ1','称重1','CZ2','称重2','ZY1','制样1','ZY2','制样2','XM1','卸煤1','CQ1','回皮1','CQ2','回皮2','CC','出厂','PC2','皮采') FLOW_NAME
        from DEVICE_BROAD_INFO a
        where a.device_broad_pri = #{deviceBroadPri,jdbcType=VARCHAR}
        <if test="beginTime != null" >
            AND A.BROAD_TIME <![CDATA[ >= ]]> to_date(#{beginTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>
        <if test="endTime != null" >
            AND A.BROAD_TIME <![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>
        <if test="machineCode != null" >
            AND A.MACHIN_CODE = #{machineCode,jdbcType=VARCHAR}
        </if>
        order by a.broad_time desc
        ) t
        <include refid="paging_bottom_sql" />
    </select>

    <!--设备故障报警信息查询-->
    <resultMap id="deviceErrResultMap" type="org.gxz.znrl.entity.DeviceBroadEntity">
        <id column="error_rec_id" jdbcType="INTEGER" property="errorRecId" />
        <result column="error_time" jdbcType="VARCHAR" property="errorTime" />
        <result column="error_dec" jdbcType="VARCHAR" property="errorDec" />
        <result column="device_ip" jdbcType="VARCHAR" property="deviceIp" />
        <result column="machin_code" jdbcType="VARCHAR" property="machineCode" />
        <result column="flow_id" jdbcType="VARCHAR" property="flowId" />
    </resultMap>

    <select id="qryDeviceErr"  resultMap="deviceErrResultMap" >
        select a.error_rec_id, a.error_time, a.error_dec,a.device_ip,a.MACHIN_CODE,a.FLOW_ID
        from DEVICE_ERROR_INFO a
        where a.error_confirm = '0'
        and a.error_time <![CDATA[     >=     ]]> trunc(sysdate-2)
        order by a.error_time desc
    </select>


    <select id="qryDeviceErrViewCnt" resultType="java.lang.Integer" parameterType="org.gxz.znrl.entity.DeviceErrEntity">
        select count(1)
        from DEVICE_ERROR_INFO a
        where 1 = 1
        <if test="beginTime != null" >
            AND A.ERROR_TIME <![CDATA[ >= ]]> to_date(#{beginTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>
        <if test="endTime != null" >
            AND A.ERROR_TIME <![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>
        <if test="machineCode != null" >
            AND A.MACHIN_CODE = #{machineCode,jdbcType=VARCHAR}
        </if>
        <if test="errorConfirm != null" >
            AND A.ERROR_CONFIRM = #{errorConfirm,jdbcType=VARCHAR}
        </if>
    </select>

    <!--设备故障报警信息查询-->
    <resultMap id="deviceErrViewResultMap" type="org.gxz.znrl.entity.DeviceErrEntity">
        <id column="error_rec_id" jdbcType="INTEGER" property="errorRecId" />
        <result column="error_time" jdbcType="VARCHAR" property="errorTime" />
        <result column="error_dec" jdbcType="VARCHAR" property="errorDec" />
        <result column="device_ip" jdbcType="VARCHAR" property="deviceIp" />
        <result column="machin_code" jdbcType="VARCHAR" property="machineCode" />
        <result column="machin_name" jdbcType="VARCHAR" property="machineName" />
        <result column="confirm_op" jdbcType="VARCHAR" property="confirmOp" />
        <result column="error_confirm" jdbcType="VARCHAR" property="errorConfirm" />
        <result column="flow_id" jdbcType="VARCHAR" property="flowId" />
        <result column="bak" jdbcType="VARCHAR" property="bak" />
        <result column="flow_name" jdbcType="VARCHAR" property="flowName" />
    </resultMap>

    <select id="qryDeviceErrView"  resultMap="deviceErrViewResultMap" parameterType="org.gxz.znrl.entity.DeviceErrEntity">
        <include refid="paging_top_sql" />
        select t.ERROR_REC_ID,
        t.ERROR_TIME,
        t.ERROR_DEC,
        t.DEVICE_IP,
        t.MACHIN_CODE,
        t.MACHIN_NAME,
        t.FLOW_ID,
        t.CONFIRM_OP,
        t.ERROR_CONFIRM,
        t.BAK,
        t.FLOW_NAME,
        ROWNUM rownumber
        from (SELECT A.ERROR_REC_ID,
        A.ERROR_TIME,
        A.ERROR_DEC,
        A.DEVICE_IP,
        A.MACHIN_CODE,
        (select c.machine_name from device_info c where c.machine_code = A.MACHIN_CODE) MACHIN_NAME,
        A.FLOW_ID,
        (select a.realname from security_user a where a.ID = A.CONFIRM_OP) CONFIRM_OP,
        decode(A.ERROR_CONFIRM,'0','未处理'，'1','已处理') ERROR_CONFIRM,
        A.BAK,
        (select d.remark from rlflowmst d where d.flow_id = A.Flow_Id) FLOW_NAME
        FROM DEVICE_ERROR_INFO A
        WHERE 1 = 1
        <if test="beginTime != null" >
            AND A.ERROR_TIME <![CDATA[ >= ]]> to_date(#{beginTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>
        <if test="endTime != null" >
            AND A.ERROR_TIME <![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>
        <if test="machineCode != null" >
            AND A.MACHIN_CODE = #{machineCode,jdbcType=VARCHAR}
        </if>
        <if test="errorConfirm != null" >
            AND A.ERROR_CONFIRM = #{errorConfirm,jdbcType=VARCHAR}
        </if>
        ORDER BY A.ERROR_TIME DESC
        ) t
        <include refid="paging_bottom_sql" />
    </select>


    <!--设备故障报警信息详情查询-->
    <resultMap id="deviceErrDetailResultMap" type="org.gxz.znrl.entity.DeviceBroadEntity">
        <id column="error_rec_id" jdbcType="INTEGER" property="errorRecId" />
        <result column="machin_code" jdbcType="VARCHAR" property="machineCode" />
        <result column="flow_name" jdbcType="VARCHAR" property="flowName" />
        <result column="error_time" jdbcType="VARCHAR" property="errorTime" />
        <result column="error_dec" jdbcType="VARCHAR" property="errorDec" />
        <result column="data_status" jdbcType="VARCHAR" property="dataStatus" />
        <result column="error_confirm" jdbcType="VARCHAR" property="errorConfirmStatus" />
        <result column="confirm_op" jdbcType="VARCHAR" property="errorConfirmOp" />
        <result column="confirm_time" jdbcType="VARCHAR" property="errorConfirmTime" />
        <result column="error_pri" jdbcType="VARCHAR" property="errorPri" />
        <result column="create_op" jdbcType="VARCHAR" property="createOp" />
        <result column="bak" jdbcType="VARCHAR" property="bak" />
        <result column="flow_id" jdbcType="VARCHAR" property="flowId" />
    </resultMap>

    <select id="qryDeviceErrDetail" parameterType="java.lang.String"  resultMap="deviceErrDetailResultMap" >
        select a.error_rec_id,
        a.machin_code,
        (select c.remark from rlflowmst c where c.flow_id = a.flow_id) flow_name,
        a.flow_id,
        a.error_time,
        a.error_dec,
        decode(a.data_status, '0','未读取','1','已读取') data_status,
        decode(a.error_confirm, '0','未确认','1','确认') error_confirm,
        (select realname from security_user su where su.id = a.confirm_op) confirm_op,
        a.confirm_time,
        a.bak,
        a.error_pri
        from device_error_info a
        where a.error_rec_id = to_number(#{recId,jdbcType=VARCHAR})
    </select>


    <!--提交控制设备指令-->
    <update id="deviceErrDeal" parameterType="org.gxz.znrl.entity.DeviceBroadEntity" >
        update device_error_info a
        set a.error_confirm = '1',
        a.confirm_op = #{opCode,jdbcType=VARCHAR},
        a.bak = #{bak,jdbcType=VARCHAR},
        a.confirm_time = sysdate
        where a.error_rec_id = to_number(#{errorRecId,jdbcType=VARCHAR})
    </update>


    <update id="forceUpdateBatch" parameterType="org.gxz.znrl.entity.ShipEntity" >
        update batch_no_info a
        set a.is_valid  = #{status,jdbcType=VARCHAR},
        a.update_time = sysdate,
        a.remark      = to_char(sysdate, 'yyyymmddhh24miss') || '强制完成批次，操作工号：'||#{opCode,jdbcType=VARCHAR}
        where a.sample_code = #{sampleCode,jdbcType=VARCHAR}
    </update>

    <resultMap id="SampleBoxesInfoResultMap" type="org.gxz.znrl.entity.SampleBoxEntity">
        <id column="cntrno" jdbcType="INTEGER" property="boxNo" />
        <result column="bsam" jdbcType="VARCHAR" property="siStored" />
        <result column="samnum" jdbcType="VARCHAR" property="samNum" />
        <result column="cntrsta" jdbcType="VARCHAR" property="boxStatus" />
        <result column="ssamtime" jdbcType="VARCHAR" property="samTime" />
        <result column="bused" jdbcType="VARCHAR" property="isUsed" />
        <result column="is_exceed" jdbcType="VARCHAR" property="isExceed" />
    </resultMap>
    <select id="qrySampleBoxesInfo" resultMap="SampleBoxesInfoResultMap" >
        select a.cntrno,
        a.bsam,
        a.samnum,
        a.cntrsta,
        to_char(trunc(a.ssamtime), 'yyyy-mm-dd') ssamtime,
        a.bused,
        case
        when sysdate - a.ssamtime  <![CDATA[ >= ]]>  getSampleBoxExpDays()  and a.bused = 1 then
        'Y'
        else
        'N'
        end is_exceed
        from STCNTR a
    </select>


    <resultMap id="SampleBagInfoResultMap" type="org.gxz.znrl.entity.SampleBoxEntity">
        <id column="samidsc" jdbcType="INTEGER" property="bagId" />
        <result column="grain" jdbcType="VARCHAR" property="grain" />
        <result column="cntrno" jdbcType="VARCHAR" property="boxNo" />
        <result column="ssamsta" jdbcType="VARCHAR" property="bagStatus" />
        <result column="ssamtime" jdbcType="VARCHAR" property="samTime" />
        <result column="keeper" jdbcType="VARCHAR" property="keeper" />
        <result column="tsamsta" jdbcType="VARCHAR" property="takeSampleStatus" />
        <result column="tsamtime" jdbcType="VARCHAR" property="takeSampleTime" />
        <result column="taker" jdbcType="VARCHAR" property="taker" />
        <result column="retsam" jdbcType="VARCHAR" property="reCheckTake" />
        <result column="csamsta" jdbcType="VARCHAR" property="cleanSampleStatus" />
        <result column="csamtime" jdbcType="VARCHAR" property="cleanSampleTime" />
        <result column="cleaner" jdbcType="VARCHAR" property="cleaner" />
        <result column="recsam" jdbcType="VARCHAR" property="reCheckClean" />
    </resultMap>

    <select id="qrySampleBagInfo" parameterType="java.lang.String" resultMap="SampleBagInfoResultMap" >
        select samidsc,
        grain,
        cntrno,
        ssamsta,
        ssamtime,
        keeper,
        tsamsta,
        tsamtime,
        taker,
        retsam,
        csamsta,
        csamtime,
        cleaner,
        recsam
        from STBAG
        where cntrno = #{boxNo,jdbcType=VARCHAR}
    </select>

    <select id="qrySampleBag4Get" parameterType="org.gxz.znrl.entity.SampleBoxEntity" resultMap="SampleBagInfoResultMap" >
        select samidsc,
        grain,
        cntrno,
        ssamsta,
        ssamtime,
        keeper,
        tsamsta,
        tsamtime,
        taker,
        retsam,
        csamsta,
        csamtime,
        cleaner,
        recsam
        from STBAG
        where 1=1
        <if test="beginSamTime != null" >
            and ssamtime <![CDATA[ >= ]]> to_date(#{beginSamTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endSamTime != null" >
            and ssamtime <![CDATA[ <= ]]> to_date(#{endSamTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>

        <if test="bagId != null" >
            and samidsc = #{bagId,jdbcType=VARCHAR}
        </if>

        <if test="tsamsta != null" >
            and TSAMSTA ${tsamsta}
        </if>

        <if test="csamsta != null" >
            and CSAMSTA ${csamsta}
        </if>

        <if test="samidsc != null" >
            and samidsc not in (select b.param4 From APPR_REQ_DATA_BUFFER b where b.appr_res in (${samidsc}))
        </if>

        <if test="apprEventId != null" >
            and samidsc in (select rb.param4 from appr_req_data_buffer rb where rb.param1 = #{apprEventId,jdbcType=VARCHAR})
        </if>
    </select>


    <select id="trainRegister" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.RegisterEntity">
        {call pk_register.p_train_register(#{insertString,mode=IN,jdbcType=VARCHAR},
        #{updateString,mode=IN,jdbcType=VARCHAR},
        #{deleteString,mode=IN,jdbcType=VARCHAR},
        #{publicString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--批量录大票-->
    <select id="batchTrainDPRecord" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.RegisterEntity">
        {call pk_register.batch_record_dp(#{updateString,mode=IN,jdbcType=VARCHAR},
        #{publicString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--批量删除多余的火车车厢 by yangff 2016.3.22-->
    <select id="deleteMassTrainBody" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.RegisterEntity">
        {call pk_register.delete_trainBody(#{updateString,mode=IN,jdbcType=VARCHAR},
        #{publicString,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>


    <select id="operateTrains" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.RegisterEntity">
        {call pk_register.operate_trains(#{updateString,mode=IN,jdbcType=VARCHAR},
        #{publicString,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--批量录大票并同时分批-->
    <select id="batchTrainDPRecordAndBatch" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.RegisterEntity">
        {call pk_register.batch_record_dp_and_batch(#{updateString,mode=IN,jdbcType=VARCHAR},
        #{publicString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--新增火车，可以在原来车次上新增，也可以新增测试-->
    <select id="addNewTrain" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.RegisterEntity">
        {call pk_register.add_new_train(#{updateString,mode=IN,jdbcType=VARCHAR},
        #{publicString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--合并火车车次-->
    <select id="mergeTrain" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.RegisterEntity">
        {call pk_register.merge_train(#{updateString,mode=IN,jdbcType=VARCHAR},
        #{publicString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--合并汽车批次-->
    <select id="mergeCarBatchNo" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.RegisterEntity">
        {call pk_register.merge_car_batch_no(#{updateString,mode=IN,jdbcType=VARCHAR},
        #{publicString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--拆分出新车次-->
    <select id="splitTrain" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.RegisterEntity">
        {call pk_register.split_train(#{updateString,mode=IN,jdbcType=VARCHAR},
        #{publicString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--调整火车顺序-->
    <select id="adjustTrainOrder" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.RegisterEntity">
        {call pk_register.adjustTrainOrder(#{updateString,mode=IN,jdbcType=VARCHAR},
        #{publicString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>


    <select id="dealTrainBatchInfo" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.RegisterEntity">
        {call pk_register.dealTrainBatchInfo(#{trainNo,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>


    <select id="deleteOneTrain" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.RegisterEntity">
        {call pk_register.delete_One_Train_Info(#{recordNo,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="confirmSampleRecv" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.SampleTraceEntity">
        {call pk_sample_trace.confirm_Sample_Recv(#{packCode,mode=IN,jdbcType=VARCHAR},
        #{operName,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <resultMap id="TrainDetailListResultMap" type="org.gxz.znrl.entity.RegisterEntity">
        <id column="record_no" jdbcType="INTEGER" property="recordNo" />
        <result column="old_CarId" jdbcType="VARCHAR" property="oldCarId" />
        <result column="train_no" jdbcType="VARCHAR" property="trainNo" />
        <result column="sample_code" jdbcType="VARCHAR" property="sampleCode" />
        <result column="man_check_sample" jdbcType="VARCHAR" property="manCheckSample" />
        <result column="car_id" jdbcType="VARCHAR" property="carId" />
        <result column="xh_num" jdbcType="VARCHAR" property="xhNum" />
        <result column="sample_typ" jdbcType="VARCHAR" property="sampleTyp" />
        <result column="empty_flg" jdbcType="VARCHAR" property="emptyFlg" />
        <result column="sample_typ_name" jdbcType="VARCHAR" property="sampleTypName" />
        <result column="empty_flg_name" jdbcType="VARCHAR" property="emptyFlgName" />
        <result column="contract_no" jdbcType="VARCHAR" property="contractNo" />
        <result column="contract_name" jdbcType="VARCHAR" property="contractName" />
        <result column="colry_no" jdbcType="VARCHAR" property="colryNo" />
        <result column="coal_no" jdbcType="VARCHAR" property="coalNo" />
        <result column="ven_no" jdbcType="VARCHAR" property="venNo" />
        <result column="leave_dtm" jdbcType="VARCHAR" property="leaveDtm" />
        <result column="record_dtm" jdbcType="VARCHAR" property="recordDtm" />
        <result column="cz_dtm" jdbcType="VARCHAR" property="czDtm" />
        <result column="tick_qty" jdbcType="VARCHAR" property="tickQty" />
        <result column="mz_qty" jdbcType="VARCHAR" property="mzQty" />
        <result column="pz_qty" jdbcType="VARCHAR" property="pzQty" />
        <result column="net_qty" jdbcType="VARCHAR" property="netQty" />
        <result column="yd_qty" jdbcType="VARCHAR" property="ydQty" />
        <result column="kud_qty" jdbcType="VARCHAR" property="kudQty" />
        <result column="bz_qty" jdbcType="VARCHAR" property="bzQty" />
        <result column="loss_qty" jdbcType="VARCHAR" property="lossQty" />
        <result column="xm_dtm" jdbcType="VARCHAR" property="fcTime" />
        <result column="train_batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="attach_batch_no" jdbcType="VARCHAR" property="attachBatchNo" />
        <result column="track_no" jdbcType="VARCHAR" property="trackNo" />
        <result column="car_typ" jdbcType="VARCHAR" property="carTyp" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="mine_name" jdbcType="VARCHAR" property="mineName" />
        <result column="coal_name" jdbcType="VARCHAR" property="coalName" />
        <result column="ven_name" jdbcType="VARCHAR" property="venName" />
        <result column="start_place" jdbcType="VARCHAR" property="startPlace" />
        <result column="final_place" jdbcType="VARCHAR" property="finalPlace" />
        <result column="start_place_name" jdbcType="VARCHAR" property="startPlaceName" />
        <result column="final_place_name" jdbcType="VARCHAR" property="finalPlaceName" />
        <result column="speed" jdbcType="VARCHAR" property="speed" />
        <result column="aim_time" jdbcType="VARCHAR" property="aimTime" />
        <result column="aim_time" jdbcType="VARCHAR" property="aimTime" />
        <result column="balance_no" jdbcType="VARCHAR" property="balanceNo" />
        <result column="purchase_type" jdbcType="VARCHAR" property="purchaseType" />
        <result column="contract_type" jdbcType="VARCHAR" property="contractType" />
        <result column="province_no" jdbcType="VARCHAR" property="provinceNo" />
        <result column="update_code" jdbcType="VARCHAR" property="updateCode" />
        <result column="update_name" jdbcType="VARCHAR" property="updateName" />
        <result column="upload_status" jdbcType="VARCHAR" property="uploadStatus" />
        <result column="cfm_flg" jdbcType="VARCHAR" property="cfmFlg" />
        <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
        <result column="ykd" jdbcType="VARCHAR" property="ykd" />
        <result column="goods_receiver" jdbcType="VARCHAR" property="goodsReceiver" />
    </resultMap>

    <select id="qryTrainDetailListfc" parameterType="org.gxz.znrl.entity.RegisterEntity" resultMap="TrainDetailListResultMap" >
        select a.record_no,
        '' old_CarId,
        a.train_no,
        a.car_id,
        a.xh_num,
        a.sample_typ,
        a.sample_code,
        (select bb.sample_code from batch_no_info bb where bb.batch_no = a.attach_batch_no) man_check_sample,
        decode(a.sample_typ, '0','皮带采样','1','皮带大水分旁路','2','人工采样','3','车厢采样','4','车厢大水分旁路') sample_typ_name,
        a.empty_flg,
        decode(a.empty_flg, '0','是','1','否') empty_flg_name,
        a.colry_no,
        (select mine_name from COAL_MINE where mine_no = a.colry_no) mine_name,
        a.coal_no,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
        a.ven_no,
        (select for_short from VENDOR_INFO where ven_no = a.ven_no) ven_name,
        to_char(trunc(a.leave_dtm), 'yyyy-mm-dd')  leave_dtm,
        to_char(a.record_dtm, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.cz_dtm, 'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        a.tick_qty/1000  tick_qty,
        a.mz_qty/1000  mz_qty,
        a.pz_qty/1000  pz_qty,
        a.net_qty/1000  net_qty,
        a.yd_qty/1000  yd_qty,
        a.loss_qty/1000  loss_qty,
        decode(substr(a.car_typ, 3,2),'70','70','64','61','62','60') bz_qty,
        to_char(a.xm_dtm, 'yyyy-mm-dd hh24:mi:ss') xm_dtm,
        a.train_batch_no,
        a.attach_batch_no,
        a.track_no,
        a.car_typ,
        a.car_spd speed,
        a.start_place,
        a.final_place,
        (select dt.name from dictionary_table dt where dt.type = 'START_RAIL_STATION' and dt.id = a.start_place) start_place_name,
        (select dt.name from dictionary_table dt where dt.type = 'FINAL_RAIL_STATION' and dt.id = a.final_place) final_place_name,
        to_char(a.aim_time, 'yyyy-mm-dd hh24:mi:ss') aim_time,
        a.remark,
        (select dt.name from dictionary_table dt where dt.type = 'PURCHASE_TYPE' and dt.id = a.purchase_type_no) purchase_type,
        (select dt.name from dictionary_table dt where dt.type = 'CONTRACT_TYPE' and dt.id = a.contract_type_no) contract_type,
        (select dt.name from dictionary_table dt where dt.type = 'PROVINCE_DEF' and dt.id = a.province_no) province_no,
        a.balance_no
        from RLRECORDMSTHY a
        where 1 = 1
        <if test="trainNo != null" >
            and a.train_no = #{trainNo,jdbcType=VARCHAR}
        </if>

        <if test="attachBatchNo != null" >
            and a.attach_batch_no is not null
        </if>

        <if test="batchNo != null" >
            and a.train_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>
        order by a.track_no, a.xh_num
    </select>

    <select id="qryOneTrainDetailfc" parameterType="java.lang.String" resultMap="TrainDetailListResultMap" >
        select a.record_no,
        '' old_CarId,
        a.train_no,
        a.car_id,
        a.xh_num,
        a.sample_typ,
        decode(a.sample_typ, '0','在线采样','1','离线采样') sample_typ_name,
        a.empty_flg,
        decode(a.empty_flg, '0','是','1','否') empty_flg_name,
        a.colry_no,
        (select mine_name from COAL_MINE where mine_no = a.colry_no) mine_name,
        a.coal_no,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
        a.ven_no,
        (select ven_name from VENDOR_INFO where ven_no = a.ven_no) ven_name,
        to_char(trunc(a.leave_dtm), 'yyyy-mm-dd')  leave_dtm,
        to_char(a.record_dtm, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.cz_dtm, 'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        a.tick_qty/1000  tick_qty,
        a.mz_qty/1000  mz_qty,
        a.pz_qty/1000  pz_qty,
        a.net_qty/1000  net_qty,
        a.yd_qty/1000  yd_qty,
        a.loss_qty/1000  loss_qty,
        to_char(a.xm_dtm, 'yyyy-mm-dd hh24:mi:ss') xm_dtm,
        a.train_batch_no,
        a.track_no,
        a.car_typ,
        a.car_spd speed,
        a.start_place,
        a.final_place,
        (select dt.name from dictionary_table dt where dt.type = 'START_RAIL_STATION' and dt.id = a.start_place) start_place_name,
        (select dt.name from dictionary_table dt where dt.type = 'RAIL_STATION' and dt.id = a.final_place) final_place_name,
        to_char(a.aim_time, 'yyyy-mm-dd hh24:mi:ss') aim_time,
        (a.purchase_type_no) purchase_type,
        (a.contract_type_no) contract_type,
        (a.province_no) province_no,
        a.remark
        from RLRECORDMSTHY a
        where a.record_no = #{recordNo,jdbcType=VARCHAR}
    </select>

    <select id="qryTrainDetailList" parameterType="org.gxz.znrl.entity.RegisterEntity" resultMap="TrainDetailListResultMap" >
        select a.record_no,
        '' old_CarId,
        a.train_no,
        a.car_id,
        a.xh_num,
        a.sample_typ,
        a.sample_code,
        (select bb.sample_code from batch_no_info bb where bb.batch_no = a.attach_batch_no) man_check_sample,
        decode(a.sample_typ, '0','皮带采样','1','皮带大水分旁路','2','人工采样','3','车厢采样','4','车厢大水分旁路') sample_typ_name,
        a.empty_flg,
        decode(a.empty_flg, '0','是','1','否') empty_flg_name,
        a.contract_no,
        (select contract_name from contract_info where contract_no = a.contract_no) contract_name,
        a.colry_no,
        (select mine_name from COAL_MINE where mine_no = a.colry_no) mine_name,
        a.coal_no,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
        a.ven_no,
        (select for_short from VENDOR_INFO where ven_no = a.ven_no) ven_name,
        to_char(trunc(a.leave_dtm), 'yyyy-mm-dd')  leave_dtm,
        to_char(a.record_dtm, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.cz_dtm, 'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        a.tick_qty/1000  tick_qty,
        a.mz_qty/1000  mz_qty,
        a.pz_qty/1000  pz_qty,
        a.net_qty/1000  net_qty,
        a.yd_qty/1000  yd_qty,
        a.kud_qty/1000  kud_qty,
        a.loss_qty/1000  loss_qty,
        decode(substr(a.car_typ, 3,2),'70','70','64','61','62','60') bz_qty,
        to_char(a.xm_dtm, 'yyyy-mm-dd hh24:mi:ss') xm_dtm,
        a.train_batch_no,
        a.attach_batch_no,
        a.track_no,
        a.car_typ,
        a.cfm_flg,
        a.car_spd speed,
        a.start_place,
        a.final_place,
        (select dt.name from dictionary_table dt where dt.type = 'START_RAIL_STATION' and dt.id = a.start_place) start_place_name,
        (select dt.name from dictionary_table dt where dt.type = 'FINAL_RAIL_STATION' and dt.id = a.final_place) final_place_name,
        to_char(a.aim_time, 'yyyy-mm-dd hh24:mi:ss') aim_time,
        a.remark,
        <if test="uploadStatus != null" >
            get_batch2Mis_status(a.train_batch_no) upload_status,
        </if>
        a.balance_no
        from RLRECORDMSTHY a
        where 1 = 1
        <if test="trainNo != null" >
            and a.train_no = #{trainNo,jdbcType=VARCHAR}
        </if>

        <if test="attachBatchNo != null" >
            and a.attach_batch_no is not null
        </if>
        <if test="xhNum != null" >
            and a.xh_num  in (${xhNum})
        </if>
        <if test="batchNo != null" >
            and a.train_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>
        order by a.track_no, a.xh_num
    </select>

    <select id="qryTrainDetailListHf" parameterType="org.gxz.znrl.entity.RegisterEntity" resultMap="TrainDetailListResultMap" >
        select a.record_no,
        '' old_CarId,
        a.train_no,
        a.car_id,
        a.xh_num,
        a.sample_typ,
        a.sample_code,
        (select bb.sample_code from batch_no_info bb where bb.batch_no = a.attach_batch_no) man_check_sample,
        decode(a.sample_typ, '0','皮带采样','1','皮带大水分旁路','2','人工采样','3','车厢采样','4','车厢大水分旁路') sample_typ_name,
        a.empty_flg,
        decode(a.empty_flg, '0','是','1','否') empty_flg_name,
        a.contract_no,
        (select contract_name from contract_info where contract_no = a.contract_no) contract_name,
        a.colry_no,
        (select mine_name from COAL_MINE where mine_no = a.colry_no) mine_name,
        a.coal_no,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
        a.ven_no,
        (select for_short from VENDOR_INFO where ven_no = a.ven_no) ven_name,
        to_char(trunc(a.leave_dtm), 'yyyy-mm-dd')  leave_dtm,
        to_char(a.record_dtm, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.cz_dtm, 'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        (select dt.name from dictionary_table dt where dt.type = 'GOODS_RECEIVER' and dt.id = a.goods_receiver) goods_receiver,
        nvl(a.tick_qty,0)/1000  tick_qty,
        nvl(a.mz_qty,0)/1000  mz_qty,
        nvl(a.pz_qty,0)/1000  pz_qty,
        nvl(a.net_qty,0)/1000  net_qty,
        nvl(a.yd_qty,0)/1000  yd_qty,
        nvl(a.kud_qty,0)/1000  kud_qty,
        nvl(a.loss_qty,0)/1000  loss_qty,
        (a.net_qty-nvl(a.tick_qty,a.net_qty))/1000 ykd,
        decode(substr(a.car_typ, 2,2),'70','70','64','61','62','60','') bz_qty,
        to_char(a.xm_dtm, 'yyyy-mm-dd hh24:mi:ss') xm_dtm,
        a.train_batch_no,
        a.attach_batch_no,
        a.track_no,
        a.car_typ,
        a.cfm_flg,
        a.car_spd speed,
        a.start_place,
        a.final_place,
        (select dt.name from dictionary_table dt where dt.type = 'START_RAIL_STATION' and dt.id = a.start_place) start_place_name,
        (select dt.name from dictionary_table dt where dt.type = 'FINAL_RAIL_STATION' and dt.id = a.final_place) final_place_name,
        to_char(a.aim_time, 'yyyy-mm-dd hh24:mi:ss') aim_time,
        a.remark,
        <if test="uploadStatus != null" >
            get_batch2Mis_status(a.train_batch_no) upload_status,
        </if>
        a.balance_no
        from RLRECORDMSTHY a
        where 1 = 1
        <if test="trainNo != null" >
            and a.train_no = #{trainNo,jdbcType=VARCHAR}
        </if>

        <if test="attachBatchNo != null" >
            and a.attach_batch_no is not null
        </if>
        <if test="xhNum != null" >
            and a.xh_num  in (${xhNum})
        </if>
        <if test="batchNo != null" >
            and a.train_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>
        order by a.track_no, a.xh_num
    </select>

    <select id="qryTrainDetailListSummary" parameterType="org.gxz.znrl.entity.RegisterEntity" resultMap="TrainDetailListResultMap" >
        select
        sum(nvl(a.tick_qty,0)/1000)  tick_qty,
        sum(nvl(a.mz_qty,0)/1000)  mz_qty,
        sum(nvl(a.pz_qty,0)/1000)  pz_qty,
        sum(nvl(a.net_qty,0)/1000)  net_qty,
        sum(nvl(a.yd_qty,0)/1000)  yd_qty,
        sum(nvl(a.kud_qty,0)/1000)  kud_qty,
        sum(nvl(a.loss_qty,0)/1000)  loss_qty,
        sum((a.net_qty-nvl(a.tick_qty,a.net_qty)))/1000 ykd,
        count(1) xh_num
        from RLRECORDMSTHY a
        where 1 = 1
        <if test="trainNo != null" >
            and a.train_no = #{trainNo,jdbcType=VARCHAR}
        </if>

        <if test="attachBatchNo != null" >
            and a.attach_batch_no is not null
        </if>
        <if test="xhNum != null" >
            and a.xh_num  in (${xhNum})
        </if>

        <if test="batchNo != null" >
            and a.train_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="qryTrainDetailListDk" parameterType="org.gxz.znrl.entity.RegisterEntity" resultMap="TrainDetailListResultMap" >
        select a.record_no,
        '' old_CarId,
        a.train_no,
        a.car_id,
        a.xh_num,
        a.sample_typ,
        a.sample_code,
        (select bb.sample_code from batch_no_info bb where bb.batch_no = a.attach_batch_no) man_check_sample,
        decode(a.sample_typ, '0','皮带采样','1','皮带大水分旁路','2','人工采样','3','车厢采样','4','车厢大水分旁路') sample_typ_name,
        a.empty_flg,
        decode(a.empty_flg, '0','是','1','否') empty_flg_name,
        a.colry_no,
        (select mine_name from COAL_MINE where mine_no = a.colry_no) mine_name,
        a.coal_no,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
        a.ven_no,
        (select ven_name from VENDOR_INFO where ven_no = a.ven_no) ven_name,
        to_char(a.leave_dtm, 'yyyy-mm-dd hh24:mi:ss')  leave_dtm,
        to_char(a.record_dtm, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.cz_dtm, 'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        a.tick_qty/1000  tick_qty,
        a.mz_qty/1000  mz_qty,
        a.pz_qty/1000  pz_qty,
        a.net_qty/1000  net_qty,
        a.yd_qty/1000  yd_qty,
        a.kud_qty/1000  kud_qty,
        a.loss_qty/1000  loss_qty,
        decode(substr(a.car_typ, 3,2),'70','70','64','61','62','60') bz_qty,
        to_char(a.xm_dtm, 'yyyy-mm-dd hh24:mi:ss') xm_dtm,
        a.train_batch_no,
        a.attach_batch_no,
        a.track_no,
        a.car_typ,
        a.car_spd speed,
        a.start_place,
        a.final_place,
        (select dt.name from dictionary_table dt where dt.type = 'START_RAIL_STATION' and dt.id = a.start_place) start_place_name,
        (select dt.name from dictionary_table dt where dt.type = 'FINAL_RAIL_STATION' and dt.id = a.final_place) final_place_name,
        to_char(a.aim_time, 'yyyy-mm-dd hh24:mi:ss') aim_time,
        a.remark,
        a.balance_no,
        a.update_code,
        (select nvl(max(realname),'') from security_user s where s.id = update_code) update_name
        from RLRECORDMSTHY a
        where 1 = 1
        <if test="trainNo != null" >
            and a.train_no = #{trainNo,jdbcType=VARCHAR}
        </if>

        <if test="attachBatchNo != null" >
            and a.attach_batch_no is not null
        </if>

        <if test="batchNo != null" >
            and a.train_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>
        order by a.track_no, a.xh_num
    </select>

    <select id="qryOneTrainDetail" parameterType="java.lang.String" resultMap="TrainDetailListResultMap" >
        select a.record_no,
        '' old_CarId,
        a.train_no,
        a.car_id,
        a.xh_num,
        a.sample_typ,
        decode(a.sample_typ, '0','在线采样','1','离线采样') sample_typ_name,
        a.empty_flg,
        decode(a.empty_flg, '0','是','1','否') empty_flg_name,
        a.contract_no,
        (select contract_name from contract_info where contract_no = a.contract_no) contract_name,
        a.colry_no,
        (select mine_name from COAL_MINE where mine_no = a.colry_no) mine_name,
        a.coal_no,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
        a.ven_no,
        (select ven_name from VENDOR_INFO where ven_no = a.ven_no) ven_name,
        to_char(trunc(a.leave_dtm), 'yyyy-mm-dd')  leave_dtm,
        to_char(a.record_dtm, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.cz_dtm, 'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        a.tick_qty/1000  tick_qty,
        a.mz_qty/1000  mz_qty,
        a.pz_qty/1000  pz_qty,
        a.net_qty/1000  net_qty,
        a.yd_qty/1000  yd_qty,
        a.kud_qty/1000  kud_qty,
        a.loss_qty/1000  loss_qty,
        to_char(a.xm_dtm, 'yyyy-mm-dd hh24:mi:ss') xm_dtm,
        a.train_batch_no,
        a.track_no,
        a.car_typ,
        a.car_spd speed,
        a.start_place,
        a.final_place,
        (select dt.name from dictionary_table dt where dt.type = 'START_RAIL_STATION' and dt.id = a.start_place) start_place_name,
        (select dt.name from dictionary_table dt where dt.type = 'RAIL_STATION' and dt.id = a.final_place) final_place_name,
        to_char(a.aim_time, 'yyyy-mm-dd hh24:mi:ss') aim_time,
        a.remark
        from RLRECORDMSTHY a
        where a.record_no = #{recordNo,jdbcType=VARCHAR}
    </select>

    <resultMap id="TrainBasicListResultMap" type="org.gxz.znrl.entity.RegisterEntity">
        <result column="train_no" jdbcType="VARCHAR" property="trainNo" />
        <result column="train_no_alias" jdbcType="VARCHAR" property="trainNoAlias" />
        <result column="record_dtm" jdbcType="VARCHAR" property="recordDtm" />
        <result column="leave_dtm" jdbcType="VARCHAR" property="leaveDtm" />
        <result column="car_cnt" jdbcType="VARCHAR" property="carCnt" />
        <result column="total_net_qty" jdbcType="VARCHAR" property="totalNetQty" />
        <result column="total_mz_qty" jdbcType="VARCHAR" property="totalMzQty" />
        <result column="total_tick_qty" jdbcType="VARCHAR" property="totalTickQty" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="total_kud_qty" jdbcType="VARCHAR" property="totalKudQty" />
        <result column="total_yd_qty" jdbcType="VARCHAR" property="totalYdQty" />
        <result column="total_loss_qty" jdbcType="VARCHAR" property="totalLossQty" />
    </resultMap>

    <select id="qryTrainBasicList" parameterType="org.gxz.znrl.entity.RegisterEntity" resultMap="TrainBasicListResultMap" >
        select t.train_no,
        t.train_no train_no_alias,
        t.car_cnt,
        t.total_net_qty,
        t.total_mz_qty,
        t.total_tick_qty,
        t.total_kud_qty,
        t.total_yd_qty,
        t.total_loss_qty,
        (select to_char(b.record_dtm, 'yyyy-mm-dd hh24:mi:ss') from RLRECORDMSTHY b  where b.train_no = t.train_no and rownum = 1) record_dtm,
        t.leave_dtm,
        (select c.remark from RLRECORDMSTHY c where c.train_no = t.train_no and rownum = 1) remark
        from (select a.train_no,
        (select to_char(b.record_dtm, 'yyyy-mm-dd hh24:mi:ss') from RLRECORDMSTHY b where b.train_no = a.train_no and rownum = 1) record_dtm,
        (select to_char(b.leave_dtm, 'yyyy-mm-dd hh24:mi:ss') from RLRECORDMSTHY b where b.train_no = a.train_no and rownum = 1) leave_dtm,
        count(1) car_cnt,
        nvl(sum(a.net_qty), 0)/1000 total_net_qty,
        nvl(sum(a.mz_qty), 0)/1000 total_mz_qty,
        nvl(sum(a.tick_qty), 0)/1000 total_tick_qty,
        nvl(sum(a.kud_qty), 0)/1000 total_kud_qty,
        nvl(sum(a.yd_qty), 0)/1000 total_yd_qty,
        nvl(sum(a.loss_qty), 0)/1000 total_loss_qty
        from RLRECORDMSTHY a
        where 1 = 1

        <if test="trainNo != null" >
            and a.train_no = #{trainNo,jdbcType=VARCHAR}
        </if>

        <if test="beginTime != null" >
            <![CDATA[
                and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
                ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
                and a.record_dtm < to_date(#{endTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
                ]]>
        </if>
        group by a.train_no) t
        order by t.record_dtm desc
    </select>


    <delete id="deleteTrainInfo" parameterType="java.lang.String" >
        delete from RLRECORDMSTHY a
        where a.train_no = #{trainNo, jdbcType=VARCHAR}
    </delete>


    <!--新增汽车信息-->
    <insert id="addCarInfo" parameterType="org.gxz.znrl.entity.CarInfoEntity" >
        insert into RLCARMST
        (REC_ID,
        ORG_NO,
        VALID_STA,
        CAR_ID,
        BACKCAR_ID,
        CAR_TYP,
        CAR_TYPE_NAME,
        TRANS_TYP,
        CARD_ID,
        CARD_TYP,
        REG_DTM,
        END_DTM,
        STD_QTY,
        FLOAT_QTY,
        BLKLST_FLG,
        CAR1_LENGTH,
        CAR2_LENGTH,
        CARTO1_LENGTH,
        CAR1TO2_LENGTH,
        CAR1_WIDTH,
        CAR1TOF_LENGTH,
        CAR1TON_LENGTH,
        CAR1NTF_LENGTH,
        CAR1L1TW_LENGTH,
        CAR1L2TL1_LENGTH,
        CAR1L3TL2_LENGTH,
        CAR1L4TL3_LENGTH,
        CAR1L5TL4_LENGTH,
        CAR1L6TL5_LENGTH,
        CAR1G1TW_LENGTH,
        CAR1G2TG1_LENGTH,
        CAR1G3TG2_LENGTH,
        CAR1G4TG3_LENGTH,
        CAR1G5TG4_LENGTH,
        CAR1G6TG5_LENGTH,
        CAR2_WIDTH,
        CAR2TOF_LENGTH,
        CAR2TON_LENGTH,
        CAR2NTF_LENGTH,
        CAR2L1TW_LENGTH,
        CAR2L2TL1_LENGTH,
        CAR2L3TL2_LENGTH,
        CAR2L4TL3_LENGTH,
        CAR2L5TL4_LENGTH,
        CAR2L6TL5_LENGTH,
        CAR2G1TW_LENGTH,
        CAR2G2TG1_LENGTH,
        CAR2G3TG2_LENGTH,
        CAR2G4TG3_LENGTH,
        CAR2G5TG4_LENGTH,
        CAR2G6TG5_LENGTH,
        FSTUSR_ID,
        FSTUSR_DTM,
        LSTUSR_ID,
        LSTUSR_DTM,
        RMT_NOT,
        PROTOCOL_STA)
        values (SEQ_RLCARMST.Nextval,
        #{orgNo,jdbcType=VARCHAR},
        '1',
        #{carId,jdbcType=VARCHAR},
        #{backCarId,jdbcType=VARCHAR},
        #{carTyp,jdbcType=VARCHAR},
        null,
        #{transTyp,jdbcType=VARCHAR},
        #{cardId,jdbcType=VARCHAR},
        #{cardTyp,jdbcType=VARCHAR},
        sysdate,
        to_date(#{endDtm,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001,
        #{stdQty,jdbcType=VARCHAR},
        #{floatQty,jdbcType=VARCHAR},
        #{blkLstFlg,jdbcType=VARCHAR},
        #{car1Length,jdbcType=VARCHAR},
        #{car2Length,jdbcType=VARCHAR},
        #{carTo1Length,jdbcType=VARCHAR},
        #{car1To2Length,jdbcType=VARCHAR},
        #{car1Width,jdbcType=VARCHAR},
        #{car1ToFLength,jdbcType=VARCHAR},
        #{car1ToFLength,jdbcType=VARCHAR},
        #{car1ToFLength,jdbcType=VARCHAR},
        #{car1L1TWLenght,jdbcType=VARCHAR},
        #{car1L2TL1Length,jdbcType=VARCHAR},
        #{car1L3TL2Length,jdbcType=VARCHAR},
        #{car1L4TL3Length,jdbcType=VARCHAR},
        #{car1L5TL4Length,jdbcType=VARCHAR},
        #{car1L6TL5Length,jdbcType=VARCHAR},
        #{car1G1TWLength,jdbcType=VARCHAR},
        #{car1G2TG1Length,jdbcType=VARCHAR},
        #{car1G3TG2Length,jdbcType=VARCHAR},
        #{car1G4TG3Length,jdbcType=VARCHAR},
        #{car1G5TG4Length,jdbcType=VARCHAR},
        #{car1G6TG5Length,jdbcType=VARCHAR},
        #{car2Width,jdbcType=VARCHAR},
        #{car2ToFLength,jdbcType=VARCHAR},
        #{car2ToFLength,jdbcType=VARCHAR},
        #{car2ToFLength,jdbcType=VARCHAR},
        #{car2L1TWLenght,jdbcType=VARCHAR},
        #{car2L2TL1Length,jdbcType=VARCHAR},
        #{car2L3TL2Length,jdbcType=VARCHAR},
        #{car2L4TL3Length,jdbcType=VARCHAR},
        #{car2L5TL4Length,jdbcType=VARCHAR},
        #{car2L6TL5Length,jdbcType=VARCHAR},
        #{car2G1TWLength,jdbcType=VARCHAR},
        #{car2G2TG1Length,jdbcType=VARCHAR},
        #{car2G3TG2Length,jdbcType=VARCHAR},
        #{car2G4TG3Length,jdbcType=VARCHAR},
        #{car2G5TG4Length,jdbcType=VARCHAR},
        #{car2G6TG5Length,jdbcType=VARCHAR},
        #{fstUsrId,jdbcType=VARCHAR},
        sysdate,
        null,
        null,
        #{rmtNot,jdbcType=VARCHAR},
        #{protocolSta,jdbcType=VARCHAR})
    </insert>

    <!--新增汽车信息-->
    <insert id="addMineCardInfo" parameterType="org.gxz.znrl.entity.MineCardDetailEntity" >
        insert into MINE_CARD_INFO
        (card_rec_id,
        mine_card_id,
        view_card_id,
        ven_no,
        carrier_no,
        mine_no,
        coal_no,
        eff_time,
        exp_time,
        valid_sta,
        insert_time,
        update_time,
        op_code,
        update_code,
        remark,
        mine_card_type,
        ship_id)
        values (SEQ_MINE_CARD_INO.Nextval,
        #{mineCardId,jdbcType=VARCHAR},
        #{viewCardId,jdbcType=VARCHAR},
        #{venNo,jdbcType=VARCHAR},
        #{carrierNo,jdbcType=VARCHAR},
        #{mineNo,jdbcType=VARCHAR},
        #{coalNo,jdbcType=VARCHAR},
        to_date(#{effTime,jdbcType=VARCHAR}, 'yyyy-mm-dd'),
        to_date(#{expTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001,
        #{validSta,jdbcType=VARCHAR},
        sysdate,
        null,
        #{opCode,jdbcType=VARCHAR},
        null,
        #{remark,jdbcType=VARCHAR},
        #{mineCardType,jdbcType=VARCHAR},
        #{shipId,jdbcType=VARCHAR})
    </insert>

    <!--修改车辆信息-->
    <update id="modifyMineCardInfo" parameterType="org.gxz.znrl.entity.MineCardDetailEntity" >
        update MINE_CARD_INFO
        set card_rec_id = #{cardRecId,jdbcType=VARCHAR},
        mine_card_id = #{mineCardId,jdbcType=VARCHAR},
        view_card_id = #{viewCardId,jdbcType=VARCHAR},
        ven_no = #{venNo,jdbcType=VARCHAR},
        carrier_no=#{carrierNo,jdbcType=VARCHAR},
        mine_no=#{mineNo,jdbcType=VARCHAR},
        coal_no= #{coalNo,jdbcType=VARCHAR},
        eff_time=to_date(#{effTime,jdbcType=VARCHAR}, 'yyyy-mm-dd'),
        exp_time=to_date(#{expTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001,
        valid_sta= #{validSta,jdbcType=VARCHAR},
        update_time= sysdate,
        update_code= #{updateCode,jdbcType=VARCHAR},
        remark= #{remark,jdbcType=VARCHAR},
        mine_card_type= #{mineCardType,jdbcType=VARCHAR},
        ship_id=#{shipId,jdbcType=VARCHAR}
        where card_rec_id = #{cardRecId,jdbcType=VARCHAR}
    </update>

    <resultMap id="RegisteredCarResultMap" type="org.gxz.znrl.entity.CarInfoEntity">
        <id column="rec_id" jdbcType="VARCHAR" property="recId" />
        <result column="card_id" jdbcType="VARCHAR" property="cardId" />
        <result column="card_typ" jdbcType="VARCHAR" property="cardTyp" />
        <result column="card_type_name" jdbcType="VARCHAR" property="cardTypeName" />
        <result column="car_id" jdbcType="VARCHAR" property="carId" />
        <result column="backcar_id" jdbcType="VARCHAR" property="backCarId" />
        <result column="trans_type_name" jdbcType="VARCHAR" property="transTypeName" />
        <result column="org_no" jdbcType="VARCHAR" property="orgNo" />
        <result column="carrier_name" jdbcType="VARCHAR" property="orgName" />
        <result column="car_typ" jdbcType="VARCHAR" property="carTyp" />
        <result column="valid_sta" jdbcType="VARCHAR" property="validSta" />
        <result column="status_name" jdbcType="VARCHAR" property="statusName" />
        <result column="protocol_sta" jdbcType="VARCHAR" property="protocolSta" />

        <result column="car1_length" jdbcType="VARCHAR" property="car1Length" />
        <result column="car1_width" jdbcType="VARCHAR" property="car1Width" />
        <result column="car1tof_length" jdbcType="VARCHAR" property="car1ToFLength" />

        <result column="car_type_name" jdbcType="VARCHAR" property="carTypeName" />
        <result column="std_qty" jdbcType="VARCHAR" property="stdQty" />
        <result column="reg_dtm" jdbcType="VARCHAR" property="regDtm" />
        <result column="end_dtm" jdbcType="VARCHAR" property="endDtm" />
        <result column="op_code" jdbcType="VARCHAR" property="fstUsrId" />
        <result column="update_code" jdbcType="VARCHAR" property="lstUsrId" />
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="trade_type" jdbcType="VARCHAR" property="tradeType" />
        <result column="trade_name" jdbcType="VARCHAR" property="tradeName" />

    </resultMap>




    <resultMap id="TransmstResultMap" type="org.gxz.znrl.entity.TransmstEntity">
        <id column="rec_id" jdbcType="VARCHAR" property="recId" />
        <result column="card_id" jdbcType="VARCHAR" property="cardId" />
        <result column="card_typ" jdbcType="VARCHAR" property="cardTyp" />
        <result column="card_type_name" jdbcType="VARCHAR" property="cardTypeName" />
        <result column="car_id" jdbcType="VARCHAR" property="carId" />
        <result column="car_typ" jdbcType="VARCHAR" property="carTyp" />
        <result column="car_type_name" jdbcType="VARCHAR" property="carTypeName" />
        <result column="org_no" jdbcType="VARCHAR" property="orgNo" />
        <result column="carrier_name" jdbcType="VARCHAR" property="orgName" />
        <result column="reg_dtm" jdbcType="VARCHAR" property="regDtm" />
        <result column="end_dtm" jdbcType="VARCHAR" property="endDtm" />
        <result column="op_code" jdbcType="VARCHAR" property="fstUsrId" />
        <result column="update_code" jdbcType="VARCHAR" property="lstUsrId" />
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="trade_type" jdbcType="VARCHAR" property="tradeType" />
        <result column="trade_name" jdbcType="VARCHAR" property="tradeName" />
        <result column="ship_name" jdbcType="VARCHAR" property="shipName" />
        <result column="fix_ship_no" jdbcType="VARCHAR" property="fixShipNo" />
        <result column="bill_no" jdbcType="VARCHAR" property="billNo" />
        <result column="area_code" jdbcType="VARCHAR" property="areaCode" />

    </resultMap>

    <select id="qryRegisteredCarList" parameterType="org.gxz.znrl.entity.CarInfoEntity" resultMap="RegisteredCarResultMap" >
        <include refid="paging_top_sql" />

        select m.*, rownum rownumber
        from(
        SELECT to_char(a.rec_id) rec_id,
        a.card_id,
        a.card_typ,
        decode(a.card_typ, '1', '普通卡', '2', '临时卡') card_type_name,
        a.car_id,
        backcar_id,
        decode(a.trans_typ, '0', '集装箱车', '1', '普通货车', '2', '行政车', '5', '其他') trans_type_name,
        a.org_no,
        (select ci.carrier_name
        from CARRIER_INFO ci
        where ci.CARRIER_NO = to_char(a.org_no)) carrier_name,
        decode(a.car_typ, '0', '半挂', '1', '外挂') car_type_name,
        a.car_typ,
        a.valid_sta,
        decode(a.valid_sta, '0','无效','1','有效') status_name,
        a.protocol_sta,
        a.car1_length,
        a.car1_width,
        a.car1tof_length,
        to_char(a.std_qty) std_qty,
        to_char(a.reg_dtm, 'yyyy-mm-dd') reg_dtm,
        to_char(a.end_dtm, 'yyyy-mm-dd') end_dtm,
        (select aa.realname
        from security_user aa
        where aa.id = a.fstusr_id) op_code,
        (select aa.realname
        from security_user aa
        where aa.id = a.lstusr_id) update_code
        FROM RLCARMST a
        where 1=1
        <if test="validSta != null" >
            and a.valid_sta = #{validSta,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like  #{carId,jdbcType=VARCHAR}

        </if>

        <if test="cardId != null" >
            and a.card_id = #{cardId,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.reg_dtm <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and a.reg_dtm <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>

        <if test="protocolSta != null" >
            and a.protocol_sta = #{protocolSta,jdbcType=VARCHAR}
        </if>
        order by a.reg_dtm desc) m

        <include refid="paging_bottom_sql" />
    </select>



    <select id="qryTransRegisteredList" parameterType="org.gxz.znrl.entity.TransmstEntity" resultMap="TransmstResultMap" >
        <include refid="paging_top_sql" />

        select m.*, rownum rownumber
        from(
        SELECT to_char(a.rec_id) rec_id,
        a.card_id,
        a.card_typ,
        decode(a.card_typ, '1', '普通卡', '2', '临时卡') card_type_name,
        a.car_id,
        a.org_no,
        (select ci.carrier_name
        from CARRIER_INFO ci
        where ci.CARRIER_NO = to_char(a.org_no)) carrier_name,
        a.BATCH_NO,
        decode(a.car_typ, '0', '货车', '1', '集装箱') car_type_name,
        a.car_typ,
        to_char(a.reg_dtm, 'yyyy-mm-dd hh24:mi:ss') reg_dtm,
        a.trade_type,
        decode(a.trade_type, '0','外贸进口','1','外贸出口','2','内贸进口','3','内贸出口','4','其它') trade_name，
        a.ship_name,
        a.bill_no,
        a.fix_ship_no,
        a.area_code
        FROM TRANSMST a
        where 1=1
        <if test="batchNo != null" >
            and a.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like  #{carId,jdbcType=VARCHAR}

        </if>

        <if test="cardId != null" >
            and a.card_id = #{cardId,jdbcType=VARCHAR}
        </if>
        <if test="shipName != null" >
            and a.ship_name = #{shipName,jdbcType=VARCHAR}
        </if>
        <if test="billNo != null" >
            and a.bill_no = #{billNo,jdbcType=VARCHAR}
        </if>
        <if test="tradeType != null" >
            and a.trade_type = #{tradeType,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.reg_dtm <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        order by a.reg_dtm desc) m

        <include refid="paging_bottom_sql" />
    </select>

    <resultMap id="mineCardDetailResultMap" type="org.gxz.znrl.entity.MineCardDetailEntity">
        <id column="card_rec_id" jdbcType="VARCHAR" property="cardRecId" />
        <result column="mine_card_id" jdbcType="VARCHAR" property="mineCardId" />
        <result column="view_card_id" jdbcType="VARCHAR" property="viewCardId" />
        <result column="ven_no" jdbcType="VARCHAR" property="venNo" />
        <result column="carrier_no" jdbcType="VARCHAR" property="carrierNo" />
        <result column="mine_no" jdbcType="VARCHAR" property="mineNo" />
        <result column="coal_no" jdbcType="VARCHAR" property="coalNo" />
        <result column="eff_time" jdbcType="VARCHAR" property="effTime" />
        <result column="exp_time" jdbcType="VARCHAR" property="expTime" />
        <result column="valid_sta" jdbcType="VARCHAR" property="validSta" />
        <result column="insert_time" jdbcType="VARCHAR" property="insertTime" />
        <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
        <result column="op_code" jdbcType="VARCHAR" property="opCode" />
        <result column="update_code" jdbcType="VARCHAR" property="updateCode" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="mine_card_type" jdbcType="VARCHAR" property="mineCardType" />
        <result column="ship_id" jdbcType="VARCHAR" property="shipId" />
    </resultMap>

    <select id="qryMineCardDetail" parameterType="java.lang.String"  resultMap="mineCardDetailResultMap" >
        select card_rec_id,
        mine_card_id,
        view_card_id,
        ven_no,
        carrier_no,
        mine_no,
        coal_no,
        eff_time,
        exp_time,
        valid_sta,
        insert_time,
        update_time,
        op_code,
        update_code,
        remark,
        mine_card_type,
        ship_id
        from MINE_CARD_INFO
        where card_rec_id = to_number(#{cardRecId, jdbcType=VARCHAR})
    </select>


    <resultMap id="RegisterMineResultMap" type="org.gxz.znrl.entity.MineCardInfoEntity">
        <id column="card_rec_id" jdbcType="VARCHAR" property="cardRecId" />
        <result column="mine_card_id" jdbcType="VARCHAR" property="mineCardId" />
        <result column="view_card_id" jdbcType="VARCHAR" property="viewCardId" />
        <result column="ven_name" jdbcType="VARCHAR" property="venNo" />
        <result column="carrier_name" jdbcType="VARCHAR" property="carrierNo" />
        <result column="mine_name" jdbcType="VARCHAR" property="mineNo" />
        <result column="coal_name" jdbcType="VARCHAR" property="coalNo" />
        <result column="eff_time" jdbcType="VARCHAR" property="effTime" />
        <result column="exp_time" jdbcType="VARCHAR" property="expTime" />
        <result column="valid_sta" jdbcType="VARCHAR" property="validSta" />
        <result column="insert_time" jdbcType="VARCHAR" property="insertTime" />
        <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
        <result column="op_code" jdbcType="VARCHAR" property="opCode" />
        <result column="update_code" jdbcType="VARCHAR" property="updateCode" />
        <result column="op_name" jdbcType="VARCHAR" property="opName" />
        <result column="update_name" jdbcType="VARCHAR" property="updateName" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="mine_card_type" jdbcType="VARCHAR" property="mineCardType" />
        <result column="ship_id" jdbcType="VARCHAR" property="shipId" />
        <result column="ship_name" jdbcType="VARCHAR" property="shipName" />
    </resultMap>

    <select id="qryRegisterMineList" parameterType="org.gxz.znrl.entity.MineCardInfoEntity" resultMap="RegisterMineResultMap" >
        <include refid="paging_top_sql" />
        select m.*,rownum rownumber
        from (
        SELECT to_char(a.card_rec_id) card_rec_id,
        a.mine_card_id,
        a.view_card_id,
        (select ai.ven_name
        from VENDOR_INFO ai
        where ai.VEN_NO = to_char(a.ven_no)) ven_name,
        (select bi.carrier_name
        from CARRIER_INFO bi
        where bi.CARRIER_NO = to_char(a.carrier_no)) carrier_name,
        (select ci.mine_name
        from COAL_MINE ci
        where ci.MINE_NO = to_char(a.mine_no)) mine_name,
        (select di.coal_name
        from COAL_TYPE di
        where di.COAL_NO = to_char(a.coal_no)) coal_name,
        to_char(a.eff_time, 'yyyy-mm-dd') eff_time,
        to_char(a.exp_time, 'yyyy-mm-dd') exp_time,
        decode(a.valid_sta, '0', '无效', '1', '有效') valid_sta,
        to_char(a.insert_time, 'yyyy-mm-dd') insert_time,
        to_char(a.update_time, 'yyyy-mm-dd') update_time,
        a.op_code,
        a.update_code,
        (select s.realname from security_user s where s.id=a.op_code) op_name,
        (select t.realname from security_user t where t.id=a.update_code) update_name,
        a.remark,
        a.mine_card_type,
        a.ship_id,
        (select z.ship_name from ship_info z where z.ship_id = a.ship_id) ship_name
        FROM MINE_CARD_INFO a
        where 1 = 1
        <if test="mineCardId != null" >
            and a.mine_card_id = #{mineCardId,jdbcType=VARCHAR}
        </if>

        <if test="viewCardId != null" >
            and a.view_card_id = #{viewCardId,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.insert_time <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and a.insert_time <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>

        <if test="mineCardType != null" >
            and a.mine_card_type = #{mineCardType,jdbcType=VARCHAR}
        </if>

        <if test="validSta != null" >
            and a.valid_sta = #{validSta,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null" >
            and a.mine_no = #{mineNo,jdbcType=VARCHAR}
        </if>
        order by a.insert_time desc) m

        <include refid="paging_bottom_sql" />
    </select>

    <select id="qryRegisterMineCnt" parameterType="org.gxz.znrl.entity.MineCardInfoEntity" resultType="java.lang.Integer" >
        SELECT count(1)
        FROM MINE_CARD_INFO a
        where 1 = 1
        <if test="mineCardId != null" >
            and a.mine_card_id = #{mineCardId,jdbcType=VARCHAR}
        </if>

        <if test="viewCardId != null" >
            and a.view_card_id = #{viewCardId,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.insert_time <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and a.insert_time <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>

        <if test="mineCardType != null" >
            and a.mine_card_type = #{mineCardType,jdbcType=VARCHAR}
        </if>

        <if test="validSta != null" >
            and a.valid_sta = #{validSta,jdbcType=VARCHAR}
        </if>
    </select>
    <!--定位单个车辆-->
    <select id="focusCar" parameterType="org.gxz.znrl.entity.CarInfoEntity" resultMap="RegisteredCarResultMap" >
        SELECT to_char(a.rec_id) rec_id,
        a.card_id,
        a.card_typ,
        decode(a.card_typ, '1', '普通卡', '2', '临时卡') card_type_name,
        a.car_id,
        backcar_id,
        decode(a.trans_typ, '0', '集装箱', '1', '货车', '2', '其它') trans_type_name,
        a.org_no,
        (select ci.carrier_name
        from CARRIER_INFO ci
        where ci.CARRIER_NO = to_char(a.org_no)) carrier_name,
        decode(a.car_typ, '0', '半挂', '1', '外挂') car_type_name,
        to_char(a.std_qty) std_qty,
        to_char(a.reg_dtm, 'yyyy-mm-dd') reg_dtm,
        to_char(a.end_dtm, 'yyyy-mm-dd') end_dtm,
        rownum rownumber
        FROM RLCARMST a
        where valid_sta = '1'
        <if test="carId != null" >
            and a.car_id = #{carId,jdbcType=VARCHAR}
        </if>

        <if test="cardId != null" >
            and a.card_id = #{cardId,jdbcType=VARCHAR}
        </if>
        order by a.reg_dtm desc
    </select>

    <select id="qryRegisteredCarCnt" parameterType="org.gxz.znrl.entity.CarInfoEntity" resultType="java.lang.Integer" >
        SELECT count(1)
        FROM RLCARMST a
        where 1 = 1
        <if test="validSta != null" >
            and a.valid_sta = #{validSta,jdbcType=VARCHAR}
        </if>

        <if test="protocolSta != null" >
            and a.protocol_sta = #{protocolSta,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id = #{carId,jdbcType=VARCHAR}
        </if>

        <if test="cardId != null" >
            and a.card_id = #{cardId,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.reg_dtm <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and a.reg_dtm <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>
    </select>


    <select id="qryTransRegisteredCnt" parameterType="org.gxz.znrl.entity.TransmstEntity" resultType="java.lang.Integer" >
        SELECT count(1)
        FROM TRANSMST a
        where 1 = 1

        <if test="batchNo != null" >
            and a.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like  #{carId,jdbcType=VARCHAR}

        </if>

        <if test="cardId != null" >
            and a.card_id = #{cardId,jdbcType=VARCHAR}
        </if>
        <if test="shipName != null" >
            and a.ship_name = #{shipName,jdbcType=VARCHAR}
        </if>
        <if test="billNo != null" >
            and a.bill_no = #{billNo,jdbcType=VARCHAR}
        </if>
        <if test="tradeType != null" >
            and a.trade_type = #{tradeType,jdbcType=VARCHAR}
        </if>
        <if test="beginDate != null" >
            and a.reg_dtm <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

    </select>

    <update id="deleteCarRegInfo" parameterType="java.lang.String" >
        update  RLCARMST a
        set a.valid_sta = '0', a.end_dtm = sysdate
        where a.rec_id = to_number(#{recId, jdbcType=VARCHAR})
    </update>

    <update id="deleteMineRegInfo" parameterType="java.lang.String" >
        update  MINE_CARD_INFO a
        set a.valid_sta = '0', a.exp_time = sysdate
        where a.card_rec_id = to_number(#{cardRecId, jdbcType=VARCHAR})
    </update>

    <resultMap id="carDetailResultMap" type="org.gxz.znrl.entity.CarInfoEntity">
        <id column="rec_id" jdbcType="INTEGER" property="recId" />
        <result column="org_no" jdbcType="VARCHAR" property="orgNo" />
        <result column="valid_sta" jdbcType="VARCHAR" property="validSta" />
        <result column="car_id" jdbcType="VARCHAR" property="carId" />
        <result column="backcar_id" jdbcType="VARCHAR" property="backCarId" />
        <result column="car_typ" jdbcType="VARCHAR" property="carTyp" />
        <result column="car_type_name" jdbcType="VARCHAR" property="carTypeName" />
        <result column="trans_typ" jdbcType="VARCHAR" property="transTyp" />
        <result column="card_id" jdbcType="VARCHAR" property="cardId" />
        <result column="card_typ" jdbcType="VARCHAR" property="cardTyp" />
        <result column="reg_dtm" jdbcType="VARCHAR" property="regDtm" />
        <result column="end_dtm" jdbcType="VARCHAR" property="endDtm" />
        <result column="std_qty" jdbcType="VARCHAR" property="stdQty" />
        <result column="float_qty" jdbcType="VARCHAR" property="floatQty" />
        <result column="blklst_flg" jdbcType="VARCHAR" property="blkLstFlg" />
        <result column="cartow_length" jdbcType="VARCHAR" property="carToWLength" />
        <result column="car1_length" jdbcType="VARCHAR" property="car1Length" />
        <result column="car2_length" jdbcType="VARCHAR" property="car2Length" />
        <result column="carto1_length" jdbcType="VARCHAR" property="carTo1Length" />
        <result column="car1to2_length" jdbcType="VARCHAR" property="car1To2Length" />
        <result column="car1_width" jdbcType="VARCHAR" property="car1Width" />
        <result column="car1tof_length" jdbcType="VARCHAR" property="car1ToFLength" />
        <result column="car1ton_length" jdbcType="VARCHAR" property="car1ToNLength" />
        <result column="car1ntf_length" jdbcType="VARCHAR" property="car1NTFLength" />
        <result column="car1l1tw_length" jdbcType="VARCHAR" property="car1L1TWLenght" />
        <result column="car1l2tl1_length" jdbcType="VARCHAR" property="car1L2TL1Length" />
        <result column="car1l3tl2_length" jdbcType="VARCHAR" property="car1L3TL2Length" />
        <result column="car1l4tl3_length" jdbcType="VARCHAR" property="car1L4TL3Length" />
        <result column="car1l5tl4_length" jdbcType="VARCHAR" property="car1L5TL4Length" />
        <result column="car1l6tl5_length" jdbcType="VARCHAR" property="car1L6TL5Length" />
        <result column="car1g1tw_length" jdbcType="VARCHAR" property="car1G1TWLength" />
        <result column="car1g2tg1_length" jdbcType="VARCHAR" property="car1G2TG1Length" />
        <result column="car1g3tg2_length" jdbcType="VARCHAR" property="car1G3TG2Length" />
        <result column="car1g4tg3_length" jdbcType="VARCHAR" property="car1G4TG3Length" />
        <result column="car1g5tg4_length" jdbcType="VARCHAR" property="car1G5TG4Length" />
        <result column="car1g6tg5_length" jdbcType="VARCHAR" property="car1G6TG5Length" />
        <result column="car2_width" jdbcType="VARCHAR" property="car2Width" />
        <result column="car2tof_length" jdbcType="VARCHAR" property="car2ToFLength" />
        <result column="car2ton_length" jdbcType="VARCHAR" property="car2ToNLength" />
        <result column="car2ntf_length" jdbcType="VARCHAR" property="car2NTFLength" />
        <result column="car2l1tw_length" jdbcType="VARCHAR" property="car2L1TWLenght" />
        <result column="car2l2tl1_length" jdbcType="VARCHAR" property="car2L2TL1Length" />
        <result column="car2l3tl2_length" jdbcType="VARCHAR" property="car2L3TL2Length" />
        <result column="car2l4tl3_length" jdbcType="VARCHAR" property="car2L4TL3Length" />
        <result column="car2l5tl4_length" jdbcType="VARCHAR" property="car2L5TL4Length" />
        <result column="car2l6tl5_length" jdbcType="VARCHAR" property="car2L6TL5Length" />
        <result column="car2g1tw_length" jdbcType="VARCHAR" property="car2G1TWLength" />
        <result column="car2g2tg1_length" jdbcType="VARCHAR" property="car2G2TG1Length" />
        <result column="car2g3tg2_length" jdbcType="VARCHAR" property="car2G3TG2Length" />
        <result column="car2g4tg3_length" jdbcType="VARCHAR" property="car2G4TG3Length" />
        <result column="car2g5tg4_length" jdbcType="VARCHAR" property="car2G5TG4Length" />
        <result column="car2g6tg5_length" jdbcType="VARCHAR" property="car2G6TG5Length" />
        <result column="fstusr_id" jdbcType="VARCHAR" property="fstUsrId" />
        <result column="fstusr_dtm" jdbcType="VARCHAR" property="fstUsrDtm" />
        <result column="lstusr_id" jdbcType="VARCHAR" property="lstUsrId" />
        <result column="lstusr_dtm" jdbcType="VARCHAR" property="lstUsrDtm" />
        <result column="rmt_not" jdbcType="VARCHAR" property="rmtNot" />
        <result column="protocol_sta" jdbcType="VARCHAR" property="protocolSta" />
    </resultMap>
    <select id="qryCarDetail" parameterType="java.lang.String"  resultMap="carDetailResultMap" >
        select rec_id,
        org_no,
        valid_sta,
        car_id,
        backcar_id,
        car_typ,
        car_type_name,
        trans_typ,
        card_id,
        card_typ,
        reg_dtm,
        end_dtm,
        std_qty,
        float_qty,
        blklst_flg,
        cartow_length,
        car1_length,
        car2_length,
        carto1_length,
        car1to2_length,
        car1_width,
        car1tof_length,
        car1ton_length,
        car1ntf_length,
        car1l1tw_length,
        car1l2tl1_length,
        car1l3tl2_length,
        car1l4tl3_length,
        car1l5tl4_length,
        car1l6tl5_length,
        car1g1tw_length,
        car1g2tg1_length,
        car1g3tg2_length,
        car1g4tg3_length,
        car1g5tg4_length,
        car1g6tg5_length,
        car2_width,
        car2tof_length,
        car2ton_length,
        car2ntf_length,
        car2l1tw_length,
        car2l2tl1_length,
        car2l3tl2_length,
        car2l4tl3_length,
        car2l5tl4_length,
        car2l6tl5_length,
        car2g1tw_length,
        car2g2tg1_length,
        car2g3tg2_length,
        car2g4tg3_length,
        car2g5tg4_length,
        car2g6tg5_length,
        fstusr_id,
        fstusr_dtm,
        lstusr_id,
        lstusr_dtm,
        protocol_sta,
        rmt_not
        from RLCARMST
        where rec_id = to_number(#{recId, jdbcType=VARCHAR})
    </select>

    <!--修改车辆信息-->
    <update id="modifyCarInfo" parameterType="org.gxz.znrl.entity.CarInfoEntity" >
        update RLCARMST
        set ORG_NO = #{orgNo,jdbcType=VARCHAR},
        VALID_STA = #{validSta,jdbcType=VARCHAR},
        CAR_ID = #{carId,jdbcType=VARCHAR},
        BACKCAR_ID = #{backCarId,jdbcType=VARCHAR},
        CAR_TYP=#{carTyp,jdbcType=VARCHAR},
        TRANS_TYP=#{transTyp,jdbcType=VARCHAR},
        CARD_ID= #{cardId,jdbcType=VARCHAR},
        CARD_TYP=#{cardTyp,jdbcType=VARCHAR},
        END_DTM=to_date(#{endDtm,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001,
        STD_QTY= #{stdQty,jdbcType=VARCHAR},
        FLOAT_QTY= #{floatQty,jdbcType=VARCHAR},
        BLKLST_FLG= #{blkLstFlg,jdbcType=VARCHAR},
        LSTUSR_ID=#{lstUsrId,jdbcType=VARCHAR},
        LSTUSR_DTM= sysdate,
        RMT_NOT= #{rmtNot,jdbcType=VARCHAR},
        PROTOCOL_STA= #{protocolSta,jdbcType=VARCHAR}
        where rec_id = #{recId,jdbcType=VARCHAR}
    </update>

    <update id="updateCarInfo" parameterType="org.gxz.znrl.entity.CarInfoEntity" >
        update RLCARMST a
        set VALID_STA = 0,
        end_dtm = sysdate
        where valid_sta = '1'
        <if test="carId != null" >
            and a.car_id = #{carId,jdbcType=VARCHAR}
        </if>
        <if test="cardId != null" >
            or a.card_id = #{cardId,jdbcType=VARCHAR}
        </if>
    </update>


    <select id="qryTodayRegisterCarCnt"  resultType="java.lang.Integer" >
        SELECT count(1)
        FROM RLCARMST a
        where valid_sta = '1'
        and a.reg_dtm between trunc(sysdate) and  trunc(sysdate)+1-0.00001
    </select>


    <select id="qryTodayRegisterMineCnt"  resultType="java.lang.Integer" >
        SELECT count(1)
        FROM MINE_CARD_INFO a
        where valid_sta = '1'
        and a.insert_time between trunc(sysdate) and  trunc(sysdate)+1-0.00001
    </select>

    <resultMap id="CarTransRecordResultMap" type="org.gxz.znrl.entity.CarTransRecordEntity">
        <id column="record_no" jdbcType="INTEGER" property="recordNo" />
        <result column="car_batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="card_id" jdbcType="VARCHAR" property="cardId" />
        <result column="car_id" jdbcType="VARCHAR" property="carId" />
        <result column="card_typ" jdbcType="VARCHAR" property="cardTyp" />
        <result column="card_type_name" jdbcType="VARCHAR" property="cardTypeName" />
        <result column="car_typ" jdbcType="VARCHAR" property="carTyp" />
        <result column="car_type_name" jdbcType="VARCHAR" property="carTypeName" />
        <result column="carrier_no" jdbcType="VARCHAR" property="orgNo" />
        <result column="carrier_nam" jdbcType="VARCHAR" property="carrierName" />
        <result column="ven_no" jdbcType="VARCHAR" property="venNo" />
        <result column="ven_nam" jdbcType="VARCHAR" property="venName" />
        <result column="coal_no" jdbcType="VARCHAR" property="coalNo" />
        <result column="tick_no" jdbcType="VARCHAR" property="tickNo" />
        <result column="tick_qty" jdbcType="VARCHAR" property="tickQty" />
        <result column="record_dtm" jdbcType="VARCHAR" property="recordDtm" />
        <result column="cz_dtm" jdbcType="VARCHAR" property="czDtm"/>
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="mz_qty" jdbcType="VARCHAR" property="mzQty" />
        <result column="pz_qty" jdbcType="VARCHAR" property="pzQty" />
        <result column="net_qty" jdbcType="VARCHAR" property="netQty" />
        <result column="kd_qty" jdbcType="VARCHAR" property="kdQty" />
        <result column="door_no" jdbcType="VARCHAR" property="doorNo" />
        <result column="channel" jdbcType="VARCHAR" property="channel" />
        <result column="attach_batch_no" jdbcType="VARCHAR" property="attachBatchNo" />
        <result column="action_tag" jdbcType="VARCHAR" property="actionTag" />
        <result column="read_tag" jdbcType="VARCHAR" property="readTag" />
        <result column="gh_index" jdbcType="VARCHAR" property="ghIndex" />
        <result column="start_place" jdbcType="VARCHAR" property="startPlace" />
        <result column="final_place" jdbcType="VARCHAR" property="finalPlace" />
        <result column="start_name" jdbcType="VARCHAR" property="startName" />
        <result column="final_name" jdbcType="VARCHAR" property="finalName" />
        <result column="sample_dtm" jdbcType="VARCHAR" property="sampleDtm" />
        <result column="jq_dtm" jdbcType="VARCHAR" property="jqDtm"/>
        <result column="carStatus" jdbcType="VARCHAR" property="carStatus"/>
        <result column="total_mz_qty" jdbcType="VARCHAR" property="totalMzQty" />
        <result column="total_pz_qty" jdbcType="VARCHAR" property="totalPzQty" />
        <result column="total_net_qty" jdbcType="VARCHAR" property="totalNetQty" />
        <result column="total_kd_qty" jdbcType="VARCHAR" property="totalKdQty" />
        <result column="total_tick_qty" jdbcType="VARCHAR" property="totalTickQty" />
        <result column="total_entry_cnt" jdbcType="VARCHAR" property="totalEntryCnt" />
        <result column="ship_name" jdbcType="VARCHAR" property="shipName" />
        <result column="ship_no" jdbcType="VARCHAR" property="shipNo" />
        <result column="ship_id" jdbcType="VARCHAR" property="shipId" />
        <result column="good_no" jdbcType="VARCHAR" property="goodNo" />
        <result column="good_name" jdbcType="VARCHAR" property="goodName" />
        <result column="good_type_name" jdbcType="VARCHAR" property="goodTypeName" />
        <result column="CZ_BALANCE_NO" jdbcType="VARCHAR" property="czBalanceNo" />
        <result column="JQ_BALANCE_NO" jdbcType="VARCHAR" property="jqBalanceNo" />
        <result column="IN_NO" jdbcType="VARCHAR" property="inNo" />
        <result column="OUT_NO" jdbcType="VARCHAR" property="outNo" />
        <result column="IN_DOOR_NO" jdbcType="VARCHAR" property="inDoorNo" />
        <result column="OUT_DOOR_NO" jdbcType="VARCHAR" property="outDoorNo" />
        <result column="STATION_NO" jdbcType="VARCHAR" property="stationNo" />
        <result column="CONTA_ID_F" jdbcType="VARCHAR" property="contactIdFront" />
        <result column="CONTA_ID_B" jdbcType="VARCHAR" property="contactIdBack" />
        <result column="CONTA_SIZE" jdbcType="VARCHAR" property="contactSize" />
        <result column="CONTA_TYPE" jdbcType="VARCHAR" property="contactType" />
        <result column="CFM_FLG" jdbcType="VARCHAR" property="cfmFlag" />
        <result column="LEAVE_FLG" jdbcType="VARCHAR" property="leaveFlag" />

    </resultMap>
    <!--汽车来煤记录明细查询-->
    <select id="qryCarTransRecordList" parameterType="org.gxz.znrl.entity.CarTransRecordEntity"  resultMap="CarTransRecordResultMap" >
        <include refid="paging_top_sql" />
        select m.*, rownum rownumber
        from (
        select a.record_no,
        a.car_batch_no,
        a.card_id,
        (select b.card_typ from rlcarmst b where b.card_id=a.card_id and rownum=1) card_typ,
        decode((select b.card_typ from rlcarmst b where b.card_id=a.card_id and rownum=1), '1', '普通卡', '2', '临时卡') card_type_name,
        (select b.car_typ from rlcarmst b where b.card_id=a.card_id and rownum=1) car_typ,
        decode((select b.car_typ from rlcarmst b where b.card_id=a.card_id and rownum=1), '0', '半挂', '1', '外挂') car_type_name,
        a.car_id,
        a.carrier_no,
        (select ci.carrier_name
        from CARRIER_INFO ci
        where ci.carrier_no = a.carrier_no) carrier_nam,
        a.ven_no,
        (select vi.ven_name
        from VENDOR_INFO vi
        where vi.ven_no = a.ven_no) ven_nam,
        a.tick_no,
        a.tick_qty/1000 tick_qty,
        to_char(a.record_dtm,'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.cz_dtm,'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        to_char(a.jq_dtm,'yyyy-mm-dd hh24:mi:ss') jq_dtm,
        remark,
        a.mz_qty/1000 mz_qty,
        a.pz_qty/1000 pz_qty,
        a.net_qty/1000 net_qty,
        a.kd_qty/1000 kd_qty,
        a.attach_batch_no,
        a.CZ_BALANCE_NO,
        a.JQ_BALANCE_NO,
        a.IN_NO,
        a.OUT_NO,
        a.IN_DOOR_NO,
        a.OUT_DOOR_NO,
        a.STATION_NO,
        a.CONTA_ID_F,
        a.CONTA_ID_B,
        a.CONTA_SIZE,
        a.CONTA_TYPE,
        decode(A.CFM_FLG,'Y','放行','N','禁行') CFM_FLG,
        decode(A.LEAVE_FLG,'Y','放行','N','禁行') LEAVE_FLG,
        (select sp.ship_name
        from ship_info sp
        where sp.ship_id = a.SHIP_ID) ship_name,
        (select sp.FIX_SHIP_NO
        from ship_info sp
        where sp.ship_id = a.SHIP_ID) ship_no,
        a.GOOD_NO,
        (select gi.good_name
        from good_info gi
        where gi.good_no = a.GOOD_NO) good_name,
        (select decode(gi.good_type,'0','空箱','1','集装箱','2','散货','3','件杂货','4','空车','5','行政车辆') from good_info gi where gi.good_no = a.GOOD_NO) good_type_name
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="cardId != null" >
            and a.card_id like #{cardId,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.record_dtm <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and a.record_dtm <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>
        <if test="beginLeaveDate != null" >
            and a.LEAVE_DTM <![CDATA[     >=     ]]> to_date(#{beginLeaveDate,jdbcType=VARCHAR}, 'YYYY-MM-DD hh24:mi:ss')
        </if>
        <if test="endLeaveDate != null" >
            and a.LEAVE_DTM <![CDATA[     <=     ]]> to_date(#{endLeaveDate,jdbcType=VARCHAR}, 'YYYY-MM-DD hh24:mi:ss')+1-0.00001
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no like #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="tickNo != null" >
            and a.tick_no like #{tickNo,jdbcType=VARCHAR}
        </if>
        <if test="shipId != null" >
            and a.ship_id = #{shipId,jdbcType=VARCHAR}
        </if>
        <if test="goodNo != null" >
            and a.good_no = #{goodNo,jdbcType=VARCHAR}
        </if>
        <if test="inDoorNo != null" >
            and ((a.IN_DOOR_NO = #{inDoorNo,jdbcType=VARCHAR})OR (a.OUT_DOOR_NO = #{inDoorNo,jdbcType=VARCHAR}))
        </if>

        <if test="contactIdFront != null" >
            AND ((a.CONTA_ID_F like #{contactIdFront,jdbcType=VARCHAR})OR (a.CONTA_ID_B like #{contactIdFront,jdbcType=VARCHAR}))
        </if>

        <if test='order != null and sort == "batchNo"' >
            order by  car_batch_no  ${order}
        </if>

        <if test='order != null and sort == "carId"' >
            order by  car_id  ${order}
        </if>

        <if test='order != null and sort == "mzQty"' >
            order by  mz_qty  ${order}
        </if>

        <if test='order != null and sort == "pzQty"' >
            order by  pz_qty  ${order}
        </if>

        <if test='order != null and sort == "kdQty"' >
            order by  kd_qty  ${order}
        </if>

        <if test='order != null and sort == "netQty"' >
            order by  net_qty  ${order}
        </if>

        <if test='order != null and sort == "recordDtm"' >
            order by  record_dtm  ${order}
        </if>

        <if test='order != null and sort == "czDtm"' >
            order by  cz_dtm  ${order}
        </if>

        <if test='order != null and sort == "jqDtm"' >
            order by  jq_dtm  ${order}
        </if>

        ) m

        <include refid="paging_bottom_sql" />
    </select>

    <!--汽车来煤记录明细查询-->
    <select id="qryCarTransRecordList4XW" parameterType="org.gxz.znrl.entity.CarTransRecordEntity"  resultMap="CarTransRecordResultMap" >
        <include refid="paging_top_sql" />
        select m.*, rownum rownumber
        from (
        select a.record_no,
        a.car_batch_no,
        a.card_id,
        (select b.card_typ from rlcarmst b where b.card_id=a.card_id and rownum=1) card_typ,
        decode((select b.card_typ from rlcarmst b where b.card_id=a.card_id and rownum=1), '1', '普通卡', '2', '临时卡') card_type_name,
        (select b.car_typ from rlcarmst b where b.card_id=a.card_id and rownum=1) car_typ,
        decode((select b.car_typ from rlcarmst b where b.card_id=a.card_id and rownum=1), '0', '半挂', '1', '外挂') car_type_name,
        a.car_id,
        a.carrier_no,
        (select ci.carrier_name
        from CARRIER_INFO ci
        where ci.carrier_no = a.carrier_no) carrier_nam,
        a.ven_no,
        (select vi.for_short
        from VENDOR_INFO vi
        where vi.ven_no = a.ven_no) ven_nam,
        a.coal_no,
        (select ct.coal_name
        from COAL_TYPE ct
        where ct.coal_no = to_char(a.coal_no)) coal_nam,
        a.colry_no,
        (select cm.for_short
        from COAL_MINE cm
        where cm.mine_no = a.colry_no) colry_nam,
        a.coal_water,
        decode(a.coal_water, '1', '湿煤', '2', '一般湿煤', '3', '干煤', '4', '一般干煤') coal_water_name,
        a.tick_no,
        a.tick_qty/1000 tick_qty,
        a.tick_pz_qty/1000 tick_pz_qty,
        a.tick_mz_qty/1000 tick_mz_qty,
        to_char(a.record_dtm,'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.cz_dtm,'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        to_char(a.jq_dtm,'yyyy-mm-dd hh24:mi:ss') jq_dtm,
        (select to_char(end_time,'yyyy-mm-dd hh24:mi:ss') from take_sample_rec where record_no = a.record_no and rownum = 1) sample_dtm,
        a.sample_typ,
        a.cyj_no,
        decode(a.cyj_no,'1','1号通道','2','2号通道','3','3号通道','未知通道') channel,
        remark,
        a.mz_qty/1000 mz_qty,
        a.pz_qty/1000 pz_qty,
        a.net_qty/1000 net_qty,
        a.kd_qty/1000 kd_qty,
        DECODE(NVL(a.attach_batch_no, '0'), '0', '0', '1')  man_check_sample,
        a.attach_batch_no,
        getCarStatus(a.record_no) carStatus
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="cardId != null" >
            and a.card_id like #{cardId,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.record_dtm <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and a.record_dtm <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no like #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null" >
            and a.colry_no = #{mineNo,jdbcType=VARCHAR}
        </if>

        <if test='order != null and sort == "batchNo"' >
            order by  car_batch_no  ${order}
        </if>

        <if test='order != null and sort == "carId"' >
            order by  car_id  ${order}
        </if>

        <if test='order != null and sort == "mineNo"' >
            order by  colry_no  ${order}
        </if>

        <if test='order != null and sort == "channel"' >
            order by  cyj_no  ${order}
        </if>

        <if test='order != null and sort == "mzQty"' >
            order by  mz_qty  ${order}
        </if>

        <if test='order != null and sort == "pzQty"' >
            order by  pz_qty  ${order}
        </if>

        <if test='order != null and sort == "kdQty"' >
            order by  kd_qty  ${order}
        </if>

        <if test='order != null and sort == "netQty"' >
            order by  net_qty  ${order}
        </if>

        <if test='order != null and sort == "recordDtm"' >
            order by  record_dtm  ${order}
        </if>

        <if test='order != null and sort == "czDtm"' >
            order by  cz_dtm  ${order}
        </if>

        <if test='order != null and sort == "jqDtm"' >
            order by  jq_dtm  ${order}
        </if>

        <if test='order != null and sort == "sampleDtm"' >
            order by  sample_dtm  ${order}
        </if>

        ) m

        <include refid="paging_bottom_sql" />
    </select>

    <!--汽车来煤记录明细查询-->
    <select id="qryCarTransRecordListCnt"    parameterType="org.gxz.znrl.entity.CarTransRecordEntity" resultType="java.lang.Integer" >
        select count(1)
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="cardId != null" >
            and a.card_id like #{cardId,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.record_dtm <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and a.record_dtm <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>
        <if test="beginLeaveDate != null" >
            and a.LEAVE_DTM <![CDATA[     >=     ]]> to_date(#{beginLeaveDate,jdbcType=VARCHAR}, 'YYYY-MM-DD hh24:mi:ss')
        </if>
        <if test="endLeaveDate != null" >
            and a.LEAVE_DTM <![CDATA[    <=    ]]> to_date(#{endLeaveDate,jdbcType=VARCHAR}, 'YYYY-MM-DD hh24:mi:ss')+1-0.00001
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="tickNo != null" >
            and a.tick_no = #{tickNo,jdbcType=VARCHAR}
        </if>
        <if test="shipId != null" >
            and a.ship_id = #{shipId,jdbcType=VARCHAR}
        </if>
        <if test="goodNo != null" >
            and a.good_no = #{goodNo,jdbcType=VARCHAR}
        </if>
        <if test="inDoorNo != null" >
            and ((a.IN_DOOR_NO = #{inDoorNo,jdbcType=VARCHAR})OR (a.OUT_DOOR_NO = #{inDoorNo,jdbcType=VARCHAR}))
        </if>

        <if test="contactIdFront != null" >
            AND ((a.CONTA_ID_F like #{contactIdFront,jdbcType=VARCHAR})OR (a.CONTA_ID_B like #{contactIdFront,jdbcType=VARCHAR}))
        </if>

    </select>

    <!--汽车来煤记录明细查询-->
    <select id="qryCarTransRecordList4DWK" parameterType="org.gxz.znrl.entity.CarTransRecordEntity"  resultMap="CarTransRecordResultMap" >
        <include refid="paging_top_sql" />
        select m.*, rownum rownumber
        from (
        select a.record_no,
        a.car_batch_no,
        a.card_id,
        (select b.card_typ from rlcarmst b where b.card_id=a.card_id and rownum=1) card_typ,
        decode((select b.card_typ from rlcarmst b where b.card_id=a.card_id and rownum=1), '1', '普通卡', '2', '临时卡') card_type_name,
        (select b.car_typ from rlcarmst b where b.card_id=a.card_id and rownum=1) car_typ,
        decode((select b.car_typ from rlcarmst b where b.card_id=a.card_id and rownum=1), '0', '半挂', '1', '外挂') car_type_name,
        a.car_id,
        a.carrier_no,
        (select ci.carrier_name
        from CARRIER_INFO ci
        where ci.carrier_no = a.carrier_no) carrier_nam,
        a.ven_no,
        (select vi.ven_name
        from VENDOR_INFO vi
        where vi.ven_no = a.ven_no) ven_nam,
        a.coal_no,
        (select ct.coal_name
        from COAL_TYPE ct
        where ct.coal_no = to_char(a.coal_no)) coal_nam,
        a.colry_no,
        (select cm.mine_name
        from COAL_MINE cm
        where cm.mine_no = a.colry_no) colry_nam,
        a.coal_water,
        decode(a.coal_water, '1', '湿煤', '2', '一般湿煤', '3', '干煤', '4', '一般干煤') coal_water_name,
        a.tick_no,
        a.tick_qty/1000 tick_qty,
        a.tick_pz_qty/1000 tick_pz_qty,
        a.tick_mz_qty/1000 tick_mz_qty,
        to_char(a.record_dtm,'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.cz_dtm,'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        to_char(a.jq_dtm,'yyyy-mm-dd hh24:mi:ss') jq_dtm,
        (select to_char(end_time,'yyyy-mm-dd hh24:mi:ss') from take_sample_rec where record_no = a.record_no and rownum = 1) sample_dtm,
        a.sample_typ,
        a.cyj_no,
        decode(a.cyj_no,'1','1号通道','2','2号通道','3','3号通道','未知通道') channel,
        remark,
        a.mz_qty/1000 mz_qty,
        a.pz_qty/1000 pz_qty,
        a.net_qty/1000 net_qty,
        a.kd_qty/1000 kd_qty,
        DECODE(NVL(a.attach_batch_no, '0'), '0', '0', '1')  man_check_sample,
        a.attach_batch_no
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="cardId != null" >
            and a.card_id like #{cardId,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.record_dtm <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and a.record_dtm <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>

        <if test="mineCardType != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.mine_card_type = #{mineCardType,jdbcType=VARCHAR})
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no like #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null" >
            and a.colry_no = #{mineNo,jdbcType=VARCHAR}
        </if>

        <if test='order != null and sort == "batchNo"' >
            order by  car_batch_no  ${order}
        </if>

        <if test='order != null and sort == "carId"' >
            order by  car_id  ${order}
        </if>

        <if test='order != null and sort == "mineNo"' >
            order by  colry_no  ${order}
        </if>

        <if test='order != null and sort == "channel"' >
            order by  cyj_no  ${order}
        </if>

        <if test='order != null and sort == "mzQty"' >
            order by  mz_qty  ${order}
        </if>

        <if test='order != null and sort == "pzQty"' >
            order by  pz_qty  ${order}
        </if>

        <if test='order != null and sort == "kdQty"' >
            order by  kd_qty  ${order}
        </if>

        <if test='order != null and sort == "netQty"' >
            order by  net_qty  ${order}
        </if>

        <if test='order != null and sort == "recordDtm"' >
            order by  record_dtm  ${order}
        </if>

        <if test='order != null and sort == "czDtm"' >
            order by  cz_dtm  ${order}
        </if>

        <if test='order != null and sort == "jqDtm"' >
            order by  jq_dtm  ${order}
        </if>

        <if test='order != null and sort == "sampleDtm"' >
            order by  sample_dtm  ${order}
        </if>

        ) m

        <include refid="paging_bottom_sql" />
    </select>

    <!--汽车来煤记录明细查询-->
    <select id="qryCarTransRecordListCnt4DWK"    parameterType="org.gxz.znrl.entity.CarTransRecordEntity" resultType="java.lang.Integer" >
        select count(1)
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="cardId != null" >
            and a.card_id like #{cardId,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.record_dtm <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and a.record_dtm <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>

        <if test="mineCardType != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.mine_card_type = #{mineCardType,jdbcType=VARCHAR})
        </if>
    </select>


    <select id="addCarTransRecord" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.CarTransRecordEntity">
        {call pk_register.p_car_add_transRec(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="addCarTransRecordNew" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.CarTransRecordEntity">
        {call pk_register.p_car_add_transRec(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{recordNo,mode=OUT,jdbcType=VARCHAR},
        #{batchNo,mode=OUT,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>


    <select id="confirmUnload" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.CarTransRecordEntity">
        {call PK_CAR_SCHEDULE.confirmUnload( #{jsonString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>


    <select id="changeChannel" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.CarTransRecordEntity">
        {call PK_CAR_SCHEDULE.adjustChannel( #{recordNo,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>


    <resultMap id="CabinetInfoResultMap" type="org.gxz.znrl.entity.CabinetEntity">
        <id column="cabinet_rec_id" jdbcType="INTEGER" property="cabinetRecId" />
        <result column="gg_name" jdbcType="VARCHAR" property="ggName" />
        <result column="cc_name" jdbcType="VARCHAR" property="ccName" />
        <result column="ww_name" jdbcType="VARCHAR" property="wwName" />
        <result column="pp_name" jdbcType="VARCHAR" property="ppName" />
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="sampling_code" jdbcType="VARCHAR" property="samplingCode" />
        <result column="labor_code" jdbcType="VARCHAR" property="laborCode" />
        <result column="id_name" jdbcType="VARCHAR" property="idName" />
        <result column="is_enabled" jdbcType="VARCHAR" property="isEnabled" />
        <result column="is_enabled_name" jdbcType="VARCHAR" property="isEnabledName" />
        <result column="deposit_time" jdbcType="VARCHAR" property="depositTime" />
        <result column="make_sample_time" jdbcType="VARCHAR" property="makeSampleTime" />
        <result column="sample_type" jdbcType="VARCHAR" property="sampleType" />
        <result column="sample_type_name" jdbcType="VARCHAR" property="sampleTypeName" />
        <result column="sample_type_name_bl" jdbcType="VARCHAR" property="sampleTypeName_bl" />
        <result column="sample_type_name_jb" jdbcType="VARCHAR" property="sampleTypeName_jb" />
        <result column="pack_code" jdbcType="VARCHAR" property="packCode" />
        <result column="sample_status" jdbcType="VARCHAR" property="sampleStatus" />
        <result column="sample_status_name" jdbcType="VARCHAR" property="sampleStatusName" />
        <result column="insert_time" jdbcType="VARCHAR" property="insertTime" />
        <result column="op_code" jdbcType="VARCHAR" property="opCode" />
        <result column="op_name" jdbcType="VARCHAR" property="opName" />
        <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
        <result column="update_code" jdbcType="VARCHAR" property="updateCode" />
        <result column="update_name" jdbcType="VARCHAR" property="updateName" />
        <result column="totalCnt" jdbcType="VARCHAR" property="totalCnt" />
        <result column="usedCnt" jdbcType="VARCHAR" property="usedCnt" />
        <result column="leftCnt" jdbcType="VARCHAR" property="leftCnt" />
        <result column="exceptCnt" jdbcType="VARCHAR" property="exceptCnt" />
        <result column="normalCnt" jdbcType="VARCHAR" property="normalCnt" />
        <result column="outtimeCnt" jdbcType="VARCHAR" property="outtimeCnt" />
        <result column="delay_num" jdbcType="VARCHAR" property="delayDays" />
        <result column="ext_rec_id" jdbcType="VARCHAR" property="extRecId" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="batch_no_type" jdbcType="VARCHAR" property="batchNoType" />
        <result column="arguementFlag" jdbcType="VARCHAR" property="arguementFlag" />
        <result column="overTime" jdbcType="VARCHAR" property="overTime" />
    </resultMap>

    <select id="qryKYCabinetInfoCnt" parameterType="org.gxz.znrl.entity.CabinetEntity" resultType="java.lang.Integer" >
        select count(1)
        from cabinet_info a
        <![CDATA[
        where nvl(length(pack_code), 0) > 1
        ]]>
        <if test="ggName != null" >
            and a.gg_name = #{ggName,jdbcType=VARCHAR}
        </if>
        <if test="sampleStatus != null" >
            and a.sample_status = #{sampleStatus,jdbcType=VARCHAR}
        </if>
        <if test="sampleType != null" >
            and a.sample_type = #{sampleType,jdbcType=VARCHAR}
        </if>
        <if test="depositStartTime != null">
            <![CDATA[
                     and A.deposit_time >= to_date(#{depositStartTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                     ]]>
        </if>
        <if test="depositEndTime != null">
            <![CDATA[
                     and A.deposit_time <= to_date(#{depositEndTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                     ]]>
        </if>
        <if test="batchNo != null or laborCode != null or samplingCode != null">
            AND A.PACK_CODE in (SELECT D.PACK_CODE
            FROM BATCH_NO_INFO C, PREPAR_SAMPLING_REC D
            WHERE 1 = 1
            AND C.SAMPLE_CODE = D.SAMPLE_CODE
            <if test="laborCode != null">
                AND C.LABOR_CODE = #{laborCode,jdbcType=VARCHAR}
            </if>
            <if test="batchNo != null">
                AND C.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
            </if>
            <if test="samplingCode != null">
                AND C.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
            </if>
            )
        </if>
    </select>

    <select id="qryKYCabinetSumInfo" parameterType="org.gxz.znrl.entity.CabinetEntity" resultMap="CabinetInfoResultMap">
        select (select count(1) from cabinet_info aa) totalCnt,
        (select count(1) from cabinet_info bb where bb.sample_status = '1') normalCnt,
        (select count(1) from cabinet_info cc where cc.sample_status = '2') outtimeCnt,
        (select count(1) from cabinet_info cc where cc.sample_status = '3') exceptCnt,
        (select count(1) from cabinet_info cc where cc.sample_status = '0') leftCnt
        from dual
    </select>

    <select id="qryKYCabinetInfoList" parameterType="org.gxz.znrl.entity.CabinetEntity"  resultMap="CabinetInfoResultMap" >
        <include refid="paging_top_sql" />
        select t.*, rownum rownumber from(
        select cabinet_rec_id,
        gg_name,
        cc_name,
        ww_name,
        pp_name,
        get_batch_no_by_packcd(a.pack_code) batch_no,
        get_sampling_code_by_packcd(a.pack_code) sampling_code,
        get_labor_Code_by_packcd(a.pack_code) labor_code,
        is_enabled,
        decode(is_enabled, '1','可用','0','不可用') is_enabled_name,
        to_char(deposit_time, 'yyyy-mm-dd hh24:mi:ss') deposit_time,
        to_char(make_sample_time, 'yyyy-mm-dd hh24:mi:ss') make_sample_time,
        sample_type,
        decode(sample_type, '61','6mm全水样',
        '62','6mm存查样',
        '31','3mm化验样',
        '32','3mm存查样',
        '21','0.2mm化验样',
        '22','0.2mm存查样', '') sample_type_name,
        pack_code,
        sample_status,
        decode(sample_status, '1','正常瓶','2','超期瓶','3','无效瓶','4','无瓶') sample_status_name,
        to_char(insert_time, 'yyyy-mm-dd hh24:mi:ss') insert_time,
        op_code,
        (select realname from security_user where username = a.op_code) op_name,
        to_char(update_time, 'yyyy-mm-dd hh24:mi:ss') update_time,
        update_code,
        (select realname from security_user where username = a.update_code) update_name
        from cabinet_info a
        where 1=1
        <if test="sampleStatus != null" >
            and a.sample_status = #{sampleStatus,jdbcType=VARCHAR}
        </if>
        <if test="sampleType != null" >
            and a.sample_type = #{sampleType,jdbcType=VARCHAR}
        </if>
        <if test="depositStartTime != null">
            <![CDATA[
                                 and A.deposit_time >= to_date(#{depositStartTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                                 ]]>
        </if>
        <if test="apprEventId != null" >
            and a.cabinet_rec_id in (select to_number(rb.param4) from appr_req_data_buffer rb where rb.param1 = #{apprEventId,jdbcType=VARCHAR})
        </if>
        <if test="depositEndTime != null">
            <![CDATA[
                                 and A.deposit_time <= to_date(#{depositEndTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                                 ]]>
        </if>
        <if test="packCode != null" >
            and a.pack_code = #{packCode,jdbcType=VARCHAR}
        </if>
        <if test="batchNo != null or laborCode != null or samplingCode != null">
            AND A.PACK_CODE in (SELECT D.PACK_CODE
            FROM BATCH_NO_INFO C, PREPAR_SAMPLING_REC D
            WHERE 1 = 1
            AND C.SAMPLING_CODE = D.SAMPLING_CODE
            <if test="laborCode != null">
                AND C.LABOR_CODE = #{laborCode,jdbcType=VARCHAR}
            </if>
            <if test="batchNo != null">
                AND C.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
            </if>
            <if test="samplingCode != null">
                AND C.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
            </if>
            )
        </if>
        order by a.insert_time desc) t
        <include refid="paging_bottom_sql" />
    </select>

    <select id="qryCabinetInfoList" parameterType="org.gxz.znrl.entity.CabinetEntity"  resultMap="CabinetInfoResultMap" >
        select cabinet_rec_id,
        gg_name,
        cc_name,
        ww_name,
        get_batch_no_by_packcd(a.pack_code) batch_no,
        get_overtime_by_packcd(a.pack_code) overTime,
        'img'||lpad(substr(a.cc_name,2),2,'0')||lpad(a.ww_name,2,'0') id_name,
        is_enabled,
        decode(is_enabled, '1','可用','0','不可用') is_enabled_name,
        to_char(deposit_time, 'yyyy-mm-dd hh24:mi:ss') deposit_time,
        to_char(make_sample_time, 'yyyy-mm-dd hh24:mi:ss') make_sample_time,
        sample_type,
        decode(sample_type, '61','6mm全水样',
        '62','6mm存查样',
        '31','3mm化验样',
        '32','3mm存查样',
        '21','0.2mm化验样',
        '22','0.2mm存查样', '') sample_type_name,

        decode(a.sample_type, '61','6mm备查样1',
        '62','6mm备查样2',
        '63','6mm备查样3',
        '31','3mm备查样',
        '21','0.2mm化验样',
        '22','0.2mm存查样', '') sample_type_name_bl,
        pack_code,
        sample_status,
        decode(sample_status, '1','正常瓶','2','超期瓶','3','无效瓶','4','无瓶') sample_status_name,
        to_char(insert_time, 'yyyy-mm-dd hh24:mi:ss') insert_time,
        op_code,
        (select realname from security_user where id = to_number(a.op_code)) op_name,
        to_char(update_time, 'yyyy-mm-dd hh24:mi:ss') update_time,
        update_code,
        (select realname from security_user where id = to_number(a.update_code)) update_name,
        (select b.delay_num from cabinet_info_ext b where b.pack_code = a.pack_code) delay_num
        from cabinet_info a
        where 1=1
        <if test="ggName != null" >
            and a.gg_name = #{ggName,jdbcType=VARCHAR}
        </if>
        <if test="ccLikeName != null" >
            and a.cc_name like #{ccLikeName,jdbcType=VARCHAR}
        </if>
        <if test="ccName != null" >
            and a.cc_name = #{ccName,jdbcType=VARCHAR}
        </if>
        <if test="wwName != null" >
            and a.ww_name = #{wwName,jdbcType=VARCHAR}
        </if>
        <if test="sampleStatus != null" >
            and a.sample_status in (#{sampleStatus,jdbcType=VARCHAR}, '3')
        </if>
        <if test="apprEventId != null" >
            and a.cabinet_rec_id in (select to_number(rb.param4) from appr_req_data_buffer rb where rb.param1 = #{apprEventId,jdbcType=VARCHAR})
        </if>
        <if test="sampleType != null" >
            and a.sample_type = #{sampleType,jdbcType=VARCHAR}
        </if>
        <if test="depositStartTime != null">
            <![CDATA[
                     and A.deposit_time >= to_date(#{depositStartTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                     ]]>
        </if>
        <if test="depositEndTime != null">
            <![CDATA[
                     and A.deposit_time <= to_date(#{depositEndTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                     ]]>
        </if>
        <if test="batchNo != null or laborCode != null or venNo != null">
            AND A.PACK_CODE in (SELECT D.PACK_CODE
            FROM BATCH_NO_INFO C, prepar_sampling_rec D
            WHERE 1 = 1
            AND C.SAMPLING_CODE = D.SAMPLING_CODE
            <if test="laborCode != null">
                AND C.LABOR_CODE = #{laborCode,jdbcType=VARCHAR}
            </if>
            <if test="batchNo != null">
                AND C.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
            </if>
            <if test="venNo != null">
                AND C.VEN_NO = #{venNo,jdbcType=VARCHAR}
            </if>
            )
        </if>
        order by get_batch_no_by_packcd(a.pack_code) desc
    </select>

    <select id="qryCabinetInfoListPg" parameterType="org.gxz.znrl.entity.CabinetEntity"  resultMap="CabinetInfoResultMap" >
        <include refid="paging_top_sql" />
        select cabinet_rec_id,
        gg_name,
        cc_name,
        ww_name,
        get_batch_no_by_packcd(a.pack_code) batch_no,
        'img'||lpad(substr(a.cc_name,2),2,'0')||lpad(a.ww_name,2,'0') id_name,
        is_enabled,
        decode(is_enabled, '1','可用','0','不可用') is_enabled_name,
        to_char(deposit_time, 'yyyy-mm-dd hh24:mi:ss') deposit_time,
        to_char(make_sample_time, 'yyyy-mm-dd hh24:mi:ss') make_sample_time,
        sample_type,
        decode(sample_type, '61','6mm全水样',
        '62','6mm存查样',
        '31','3mm化验样',
        '32','3mm存查样',
        '21','0.2mm化验样',
        '22','0.2mm存查样', '') sample_type_name,

        decode(sample_type, '61','6mm全水样1',
        '62','6mm全水样2',
        '63','6mm全水样3',
        '31','3mm存查样1',
        '32','3mm存查样2',
        '33','3mm存查样3',
        '21','0.2mm化验样1',
        '22','0.2mm化验样2', '') sample_type_name_jb,

        decode(a.sample_type, '61','6mm备查样1',
        '62','6mm备查样2',
        '63','6mm备查样3',
        '31','3mm备查样',
        '21','0.2mm化验样',
        '22','0.2mm存查样', '') sample_type_name_bl,
        pack_code,
        sample_status,
        decode(sample_status, '1','正常瓶','2','超期瓶','3','无效瓶','4','无瓶') sample_status_name,
        to_char(insert_time, 'yyyy-mm-dd hh24:mi:ss') insert_time,
        op_code,
        (select realname from security_user where id = to_number(a.op_code)) op_name,
        to_char(update_time, 'yyyy-mm-dd hh24:mi:ss') update_time,
        update_code,
        (select realname from security_user where id = to_number(a.update_code)) update_name,
        (select b.delay_num from cabinet_info_ext b where b.pack_code = a.pack_code) delay_num,
        rownum rownumber
        from cabinet_info a
        <![CDATA[
        where nvl(length(pack_code), 0) > 1
        ]]>
        <if test="ggName != null" >
            and a.gg_name = #{ggName,jdbcType=VARCHAR}
        </if>
        <if test="ccLikeName != null" >
            and a.cc_name like #{ccLikeName,jdbcType=VARCHAR}
        </if>
        <if test="ccName != null" >
            and a.cc_name = #{ccName,jdbcType=VARCHAR}
        </if>
        <if test="wwName != null" >
            and a.ww_name = #{wwName,jdbcType=VARCHAR}
        </if>
        <if test="sampleStatus != null" >
            and a.sample_status in (#{sampleStatus,jdbcType=VARCHAR}, '3')
        </if>
        <if test="apprEventId != null" >
            and a.cabinet_rec_id in (select to_number(rb.param4) from appr_req_data_buffer rb where rb.param1 = #{apprEventId,jdbcType=VARCHAR})
        </if>
        <if test="sampleType != null" >
            and a.sample_type = #{sampleType,jdbcType=VARCHAR}
        </if>
        <if test="depositStartTime != null">
            <![CDATA[
                     and A.deposit_time >= to_date(#{depositStartTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                     ]]>
        </if>
        <if test="depositEndTime != null">
            <![CDATA[
                     and A.deposit_time < to_date(#{depositEndTime,jdbcType=VARCHAR},'YYYY-MM-DD') + 1
                     ]]>
        </if>
        <if test="batchNo != null or laborCode != null or venNo != null">
            AND A.PACK_CODE in (SELECT D.PACK_CODE
            FROM BATCH_NO_INFO C, prepar_sampling_rec D
            WHERE 1 = 1
            AND C.SAMPLING_CODE = D.SAMPLING_CODE
            <if test="laborCode != null">
                AND C.LABOR_CODE = #{laborCode,jdbcType=VARCHAR}
            </if>
            <if test="batchNo != null">
                AND C.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
            </if>
            <if test="venNo != null">
                AND C.VEN_NO = #{venNo,jdbcType=VARCHAR}
            </if>
            )
        </if>
        order by get_batch_no_by_packcd(a.pack_code) desc
        <include refid="paging_bottom_sql" />
    </select>

    <select id="qryCabinetInfoListNew" parameterType="org.gxz.znrl.entity.CabinetEntity"  resultMap="CabinetInfoResultMap" >
        select cabinet_rec_id,
        a.pack_code,
        a.gg_name,
        a.cc_name,
        a.ww_name,
        get_sampling_code_by_packcd(a.pack_code) sampling_code,
        decode(sample_type,
        '61',
        '6mm全水样',
        '62',
        '6mm存查样',
        '31',
        '3mm化验样',
        '32',
        '3mm存查样',
        '21',
        '0.2mm化验样',
        '22',
        '0.2mm存查样',
        '') sample_type_name
        from cabinet_info a
        where 1=1
        <if test="sampleType != null" >
            and a.sample_type = #{sampleType,jdbcType=VARCHAR}
        </if>
        <if test="ggName != null" >
            and a.gg_name = #{ggName,jdbcType=VARCHAR}
        </if>
        <if test="ccLikeName != null" >
            and a.cc_name like #{ccLikeName,jdbcType=VARCHAR}
        </if>
        <if test="ccName != null" >
            and a.cc_name = #{ccName,jdbcType=VARCHAR}
        </if>
        <if test="wwName != null" >
            and a.ww_name = #{wwName,jdbcType=VARCHAR}
        </if>
        <if test="depositStartTime != null">
            <![CDATA[
                     and A.deposit_time >= to_date(#{depositStartTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                     ]]>
        </if>
        <if test="depositEndTime != null">
            <![CDATA[
                     and A.deposit_time <= to_date(#{depositEndTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                     ]]>
        </if>
        <if test="makeSampleStartTime != null">
            <![CDATA[
                     and A.make_sample_time >= to_date(#{makeSampleStartTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                     ]]>
        </if>
        <if test="makeSampleEndTime != null">
            <![CDATA[
                     and A.make_sample_time <= to_date(#{makeSampleEndTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                     ]]>
        </if>
        <if test="samplingCode != null">
            <![CDATA[
                     and get_sampling_code_by_packcd(a.pack_code) = #{samplingCode,jdbcType=VARCHAR}
                     ]]>
        </if>

        <if test="batchNo != null or laborCode != null">
            AND A.PACK_CODE in (SELECT D.PACK_CODE
            FROM BATCH_NO_INFO C, prepar_sampling_rec D
            WHERE 1 = 1
            AND C.SAMPLING_CODE = D.SAMPLING_CODE
            <if test="laborCode != null">
                AND C.LABOR_CODE = #{laborCode,jdbcType=VARCHAR}
            </if>
            <if test="batchNo != null">
                AND C.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
            </if>
            )
        </if>

        <if test="batchNoType != null">
            AND A.PACK_CODE in (SELECT D.PACK_CODE
            FROM BATCH_NO_INFO C, prepar_sampling_rec D
            WHERE 1 = 1
            AND C.SAMPLING_CODE = D.SAMPLING_CODE

            <if test="batchNoType != null">
                AND C.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
            </if>
            )
        </if>
        order by a.insert_time
    </select>


    <select id="qryCabinetOpRecCnt"  resultType="java.lang.Integer" parameterType="org.gxz.znrl.entity.CabinetOpRecEntity" >
        select count(1)
        from cabinet_op_rec_his a
        where 1=1
        <if test="sampleType != null" >
            and a.sample_type = #{sampleType,jdbcType=VARCHAR}
        </if>
        <if test="depositStartTime != null">
            and a.op_time <![CDATA[>=]]> to_date(#{depositStartTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="depositEndTime != null">
            and a.op_time <![CDATA[<=]]> to_date(#{depositEndTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="batchNoType != null" >
            and  get_batch_type_by_packcd(a.pack_code)= #{batchNoType,jdbcType=VARCHAR}
        </if>
        <if test="opName != null" >
            and  <![CDATA[ a.operator <> #{opName} ]]>
        </if>
    </select>

    <select id="qryCabinetOpRecCntMain"  resultType="java.lang.Integer" parameterType="org.gxz.znrl.entity.CabinetOpRecEntity" >
        select count(1)
        from (select distinct a.pack_code from cabinet_op_rec_his a
        where 1=1
        <if test="sampleType != null" >
            and a.sample_type = #{sampleType,jdbcType=VARCHAR}
        </if>
        <if test="depositStartTime != null">
            and a.op_time <![CDATA[>=]]> to_date(#{depositStartTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="depositEndTime != null">
            and a.op_time <![CDATA[<=]]> to_date(#{depositEndTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="batchNoType != null" >
            and  get_batch_type_by_packcd(a.pack_code)= #{batchNoType,jdbcType=VARCHAR}
        </if>
        )
    </select>

    <select id="qryCabinetOpRecCnt2"  resultType="java.lang.Integer" parameterType="org.gxz.znrl.entity.CabinetOpRecEntity" >
        select count(1)
        from (select t.*, rownum rownumber from (
        select
        a.operator op_name,
        decode(a.op_type,'1','自动存样','2','自动取样','3','自动弃样','4','直传','5','人工存样','6','人工取样','7','人工弃样','') op_type,
        a.dest_name op_dest,
        to_char(a.op_time, 'yyyy-mm-dd hh24:mi:ss') op_time,
        decode(a.is_successed,'0','未完成','1','完成') op_result
        from cabinet_op_rec_his a
        where a.pack_code=#{packCode,jdbcType=VARCHAR}
        ) t)
    </select>


    <select id="qryCabinetApplyRecCnt"  resultType="java.lang.Integer" parameterType="org.gxz.znrl.entity.CabinetOpRecEntity" >
        select count(1)
        from cabinet_apply_rec a
        where 1=1
        <if test="opType != null" >
            and a.op_type = #{opType,jdbcType=VARCHAR}
        </if>
        <if test="depositStartTime != null">
            and a.insert_time <![CDATA[>=]]> to_date(#{depositStartTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="depositEndTime != null">
            and a.insert_time <![CDATA[<=]]> to_date(#{depositEndTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="apprStatus != null">
            and a.appr_status = #{apprStatus,jdbcType=VARCHAR}
        </if>

    </select>


    <resultMap id="sampleDelayMap" type="org.gxz.znrl.entity.CabinetEntity">
        <result column="ext_rec_id" jdbcType="VARCHAR" property="extRecId" />
        <result column="batch_No" jdbcType="VARCHAR" property="batchNo"/>
        <result column="sampling_code" jdbcType="VARCHAR" property="samplingCode"/>
        <result column="batch_Time" jdbcType="VARCHAR" property="batchTime"/>
        <result column="ship_Name" jdbcType="VARCHAR" property="shipName"/>
        <result column="ven_Name" jdbcType="VARCHAR" property="venName"/>
        <result column="delay_num" jdbcType="VARCHAR" property="delayDays" />
        <result column="op_Name" jdbcType="VARCHAR" property="opName" />
        <result column="insert_time" jdbcType="VARCHAR" property="insertTime" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
    </resultMap>

    <select id="qryCabinetDelayRecCnt" resultType="java.lang.Integer" parameterType="org.gxz.znrl.entity.CabinetEntity" >
        select count(1)
        from batch_no_info a
        where a.batch_no_type = '2'
        <if test="batchNo != null">
            and a.batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>
        <if test="samplingCode != null">
            and a.sampling_code = #{samplingCode,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null">
            and a.insert_time <![CDATA[     >=    ]]> to_date(#{startTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>
        <if test="endTime != null">
            and a.insert_time <![CDATA[     <     ]]> to_date(#{endTime,jdbcType=VARCHAR}, 'yyyy-mm-dd') + 1 - 0.00001
        </if>
        <if test="venNo != null">
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>
        <if test="delayStatus != null">
            and checkExistCabinetDelay(a.batch_no) = #{delayStatus,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="qryCabinetDelayRec" parameterType="org.gxz.znrl.entity.CabinetEntity" resultMap="sampleDelayMap">
        <include refid="paging_top_sql"/>
        select a.batch_no,
        a.sampling_code,
        a.INSERT_TIME  batch_Time,
        (select aa.insert_time
        from cabinet_info_ext aa,prepar_sampling_rec dd
        where aa.pack_code = dd.pack_code
        and dd.sampling_code = a.sampling_code
        and rownum = 1) insert_time,
        (select aa.ship_name from ship_info aa,ship_record bb where bb.ship_trans_no = a.train_no and bb.ship_id = aa.ship_id) ship_Name,
        (select aa.ven_name  from vendor_info aa where aa.ven_no = a.ven_no) ven_Name,
        (select cc.realname
        from cabinet_info_ext aa,prepar_sampling_rec dd,security_user cc
        where aa.pack_code = dd.pack_code
        and dd.sampling_code = a.sampling_code
        and aa.op_code = cc.id
        and rownum = 1) op_name,
        (select aa.remark
        from cabinet_info_ext aa,prepar_sampling_rec dd
        where aa.pack_code = dd.pack_code
        and dd.sampling_code = a.sampling_code
        and rownum = 1) remark,
        rownum rownumber
        from batch_no_info a
        where a.batch_no_type = '2'
        <if test="batchNo != null">
            and a.batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>
        <if test="samplingCode != null">
            and a.sampling_code = #{samplingCode,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null">
            and a.insert_time <![CDATA[     >=    ]]> to_date(#{startTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>
        <if test="endTime != null">
            and a.insert_time <![CDATA[     <     ]]> to_date(#{endTime,jdbcType=VARCHAR}, 'yyyy-mm-dd') + 1 - 0.00001
        </if>
        <if test="venNo != null">
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>
        <if test="delayStatus != null">
            and checkExistCabinetDelay(a.batch_no) = #{delayStatus,jdbcType=VARCHAR}
        </if>
        order by a.insert_time desc
        <include refid="paging_bottom_sql"/>
    </select>

    <resultMap id="CabinetOpRecResultMap" type="org.gxz.znrl.entity.CabinetOpRecEntity">
        <result column="rec_his_id" jdbcType="INTEGER" property="recHisId" />
        <result column="gg_name" jdbcType="VARCHAR" property="ggName" />
        <result column="cc_name" jdbcType="VARCHAR" property="ccName" />
        <result column="ww_name" jdbcType="VARCHAR" property="wwName" />
        <result column="id_name" jdbcType="VARCHAR" property="idName" />
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="is_enabled" jdbcType="VARCHAR" property="isEnabled" />
        <result column="is_enabled_name" jdbcType="VARCHAR" property="isEnabledName" />
        <result column="deposit_time" jdbcType="VARCHAR" property="depositTime" />
        <result column="make_sample_time" jdbcType="VARCHAR" property="makeSampleTime" />
        <result column="sample_type" jdbcType="VARCHAR" property="sampleType" />
        <result column="sample_type_name" jdbcType="VARCHAR" property="sampleTypeName" />
        <!--beilun6mm3个瓶子-->
        <result column="sample_type_name_bl" jdbcType="VARCHAR" property="sampleTypeName_bl" />
        <result column="sample_type_name_jb" jdbcType="VARCHAR" property="sampleTypeName_jb" />
        <result column="pack_code" jdbcType="VARCHAR" property="packCode" />
        <result column="sample_status" jdbcType="VARCHAR" property="sampleStatus" />
        <result column="sample_status_name" jdbcType="VARCHAR" property="sampleStatusName" />
        <result column="insert_time" jdbcType="VARCHAR" property="insertTime" />
        <result column="op_code" jdbcType="VARCHAR" property="opCode" />
        <result column="op_name" jdbcType="VARCHAR" property="opName" />
        <result column="op_type" jdbcType="VARCHAR" property="opType" />
        <result column="op_dest" jdbcType="VARCHAR" property="opDest" />
        <result column="op_time" jdbcType="VARCHAR" property="opTime" />
        <result column="op_result" jdbcType="VARCHAR" property="opResult" />
        <result column="data_status" jdbcType="VARCHAR" property="dataStatus" />
        <result column="sampling_code" jdbcType="VARCHAR" property="samplingCode" />
        <result column="batchNo_fc" jdbcType="VARCHAR" property="batchNofc" />
        <result column="samplingCode_fc" jdbcType="VARCHAR" property="samplingCodefc" />
        <result column="labor_code" jdbcType="VARCHAR" property="laborCode" />
        <result column="sample_weight" jdbcType="VARCHAR" property="sampleWeight" />
        <result column="appr_status" jdbcType="VARCHAR" property="apprStatus" />
        <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
        <result column="update_name" jdbcType="VARCHAR" property="updateName" />
    </resultMap>
    <select id="qryCabinetOpRecList" parameterType="org.gxz.znrl.entity.CabinetOpRecEntity"  resultMap="CabinetOpRecResultMap" >
        <include refid="paging_top_sql" />
        select t.*, rownum rownumber from (
        select a.rec_his_id,
        a.gg_name,
        a.cc_name,
        a.ww_name,
        get_batch_no_by_packcd(a.pack_code) batch_no,
        get_sampling_code_by_packcd(a.pack_code) sampling_code,
        (select max(m.batch_no) from batch_no_info m,prepar_sampling_rec n where m.sampling_code = n.sampling_code and HEXTOASCII(n.pack_code) = a.pack_code) batchNo_fc,
        (select max(m.sampling_code) from prepar_sampling_rec m where HEXTOASCII(m.pack_code) = a.pack_code) samplingCode_fc,
        to_char(a.make_sample_time, 'yyyy-mm-dd hh24:mi:ss') make_sample_time,
        a.sample_type,
        decode(a.sample_type, '61','6mm全水样',
        '62','6mm存查样',
        '31','3mm化验样',
        '32','3mm存查样',
        '21','0.2mm化验样',
        '22','0.2mm存查样', '') sample_type_name,
        decode(a.sample_type, '61','6mm备查样1',
        '62','6mm备查样2',
        '63','6mm备查样3',
        '31','3mm备查样',
        '21','0.2mm化验样',
        '22','0.2mm存查样', '') sample_type_name_bl,
        decode(sample_type, '61','6mm全水样1',
        '62','6mm全水样2',
        '63','6mm全水样3',
        '31','3mm存查样1',
        '32','3mm存查样2',
        '33','3mm存查样3',
        '21','0.2mm化验样1',
        '22','0.2mm化验样2',
        '23','清洗样') sample_type_name_jb,

        a.pack_code,
        a.operator op_name,
        decode(a.op_type,'1','自动存样','2','自动取样','3','自动弃样','4','直传','5','人工存样','6','人工取样','7','人工弃样','') op_type,
        a.dest_name op_dest,
        to_char(a.op_time, 'yyyy-mm-dd hh24:mi:ss') op_time,
        decode(a.is_successed,'0','未完成','1','完成') op_result
        from cabinet_op_rec_his a
        where 1=1
        <if test="sampleType != null" >
            and a.sample_type = #{sampleType,jdbcType=VARCHAR}
        </if>
        <if test="packCode != null" >
            and a.pack_Code = #{packCode,jdbcType=VARCHAR}
        </if>
        <if test="depositStartTime != null">
            and a.op_time <![CDATA[>=]]> to_date(#{depositStartTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="depositEndTime != null">
            and a.op_time <![CDATA[<]]> to_date(#{depositEndTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
        </if>
        <if test="batchNoType != null" >
            and   get_batch_type_by_packcd(a.pack_code) = #{batchNoType,jdbcType=VARCHAR}
        </if>
        <if test="opName != null" >
            and  <![CDATA[ a.operator <> #{opName} ]]>
        </if>
        order by a.op_time desc ) t
        <include refid="paging_bottom_sql" />
    </select>

    <select id="qryCabinetOpRecListMain" parameterType="org.gxz.znrl.entity.CabinetOpRecEntity"  resultMap="CabinetOpRecResultMap" >
        <include refid="paging_top_sql" />
        select t.*, rownum rownumber from (
        select distinct get_batch_no_by_packcd(a.pack_code) batch_no,
        get_sampling_code_by_packcd(a.pack_code) sampling_code,
        decode(sample_type, '61','6mm全水样1',
        '62','6mm全水样2',
        '63','6mm全水样3',
        '31','3mm存查样1',
        '32','3mm存查样2',
        '33','3mm存查样3',
        '21','0.2mm化验样1',
        '22','0.2mm化验样2',
        '23','清洗样') sample_type_name_jb,
        get_labor_code_by_packcd(a.pack_code) labor_code,
        get_sample_weight_by_packcd(a.pack_code) sample_weight,
        a.pack_code
        from cabinet_op_rec_his a
        where 1=1
        <if test="sampleType != null" >
            and a.sample_type = #{sampleType,jdbcType=VARCHAR}
        </if>
        <if test="packCode != null" >
            and a.pack_Code = #{packCode,jdbcType=VARCHAR}
        </if>
        <if test="depositStartTime != null">
            and a.op_time <![CDATA[>=]]> to_date(#{depositStartTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="depositEndTime != null">
            and a.op_time <![CDATA[<]]> to_date(#{depositEndTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
        </if>
        <if test="batchNoType != null" >
            and   get_batch_type_by_packcd(a.pack_code) = #{batchNoType,jdbcType=VARCHAR}
        </if>
        ) t
        <include refid="paging_bottom_sql" />
    </select>

    <select id="qryCabinetOpRecList2" parameterType="org.gxz.znrl.entity.CabinetOpRecEntity"  resultMap="CabinetOpRecResultMap" >
        <include refid="paging_top_sql" />
        select t.*, rownum rownumber from (
        select
        a.operator op_name,
        decode(a.op_type,'1','自动存样','2','自动取样','3','自动弃样','4','直传','5','人工存样','6','人工取样','7','人工弃样','') op_type,
        a.dest_name op_dest,
        to_char(a.op_time, 'yyyy-mm-dd hh24:mi:ss') op_time,
        decode(a.is_successed,'0','未完成','1','完成') op_result
        from cabinet_op_rec_his a
        where a.pack_code=#{packCode,jdbcType=VARCHAR}
        order by op_time
        ) t
        <include refid="paging_bottom_sql" />
    </select>

    <select id="qryCabinetApplyRecList" parameterType="org.gxz.znrl.entity.CabinetOpRecEntity"  resultMap="CabinetOpRecResultMap" >
        <include refid="paging_top_sql" />
        select t.*, rownum rownumber from (
        select a.op_rec_id,
        a.gg_name,
        a.cc_name,
        a.ww_name,
        a.pack_code,
        get_batch_no_by_packcd(a.pack_code) batch_no,
        get_sampling_code_by_packcd(a.pack_code) sampling_code,
        to_char(a.make_sample_time, 'yyyy-mm-dd hh24:mi:ss') make_sample_time,
        to_char(a.op_time, 'yyyy-mm-dd hh24:mi:ss') op_time,
        to_char(a.update_time, 'yyyy-mm-dd hh24:mi:ss') update_time,
        a.sample_type,
        decode(a.sample_type, '61','6mm全水样',
        '62','6mm存查样',
        '31','3mm化验样',
        '32','3mm存查样',
        '21','0.2mm化验样',
        '22','0.2mm存查样', '') sample_type_name,
        decode(a.sample_type, '61','6mm备查样1',
        '62','6mm备查样2',
        '63','6mm备查样3',
        '31','3mm备查样',
        '21','0.2mm化验样',
        '22','0.2mm存查样', '') sample_type_name_bl,
        decode(sample_type, '61','6mm全水样1',
        '62','6mm全水样2',
        '63','6mm全水样3',
        '31','3mm存查样1',
        '32','3mm存查样2',
        '33','3mm存查样3',
        '21','0.2mm化验样1',
        '22','0.2mm化验样2',
        '23','清洗样') sample_type_name_jb,
        (select realname from security_user where id = a.op_code) op_name,
        (select nvl(realname,'') from security_user where id = a.update_code) update_name,
        decode(a.op_type,'1','取样','2','弃样','3','自动弃样','') op_type,
        decode(a.appr_status,'0','未审批','1','审批中','2','审批通过','3','审批不通过','') appr_status
        from cabinet_apply_rec a
        where 1=1
        <if test="opType != null" >
            and a.op_type = #{opType,jdbcType=VARCHAR}
        </if>
        <if test="depositStartTime != null">
            and a.insert_time <![CDATA[>=]]> to_date(#{depositStartTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="depositEndTime != null">
            and a.insert_time <![CDATA[<=]]> to_date(#{depositEndTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="apprStatus != null">
            and a.appr_status = #{apprStatus,jdbcType=VARCHAR}
        </if>
        order by a.op_rec_id desc ) t
        <include refid="paging_bottom_sql" />
    </select>


    <!--修改单个火车车厢信息-->
    <select id="modifyOneTrainInfo" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.RegisterEntity">
        {call pk_register.modify_One_Train_Info(#{updateString,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>


    <resultMap id="sampleCode4CtrlResultMap" type="org.gxz.znrl.entity.CtrlEntity">
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="sample_code" jdbcType="VARCHAR" property="sampleCode" />
    </resultMap>

    <select id="qrySampleCodes4XY"  resultMap="sampleCode4CtrlResultMap" >
        select a.sample_code  remark,
        a.sample_code
        from BATCH_NO_INFO a
        where a.sample_code in (select distinct b.sample_code from BARREL_STATUS_INFO b)
        and a.is_valid = '1'
        order by a.sample_code desc
    </select>

    <select id="qrySampleCodes"  resultMap="sampleCode4CtrlResultMap" >
        select a.sample_code  remark,
        a.sample_code
        from BATCH_NO_INFO a
        where a.insert_time <![CDATA[ >= ]]> trunc(sysdate) - 1
        and a.is_valid = '1'
        order by a.sample_code desc
    </select>

    <select id="qrySampleCodes4Train"  resultMap="sampleCode4CtrlResultMap" >
        select a.sample_code  remark,
        a.sample_code
        from BATCH_NO_INFO a
        where a.insert_time <![CDATA[ >= ]]> trunc(sysdate) - 1
        and a.batch_no_type = '1'
        and a.is_valid = '1'
        order by a.sample_code desc
    </select>

    <select id="qrySampleCodes4Car"  resultMap="sampleCode4CtrlResultMap" >
        select a.sample_code  remark,
        a.sample_code
        from BATCH_NO_INFO a
        where a.insert_time <![CDATA[ >= ]]> trunc(sysdate) - 1
        and a.batch_no_type = '0'
        and a.is_valid = '1'
        order by a.sample_code desc
    </select>

    <select id="qrySampleCodes4Ship"  resultMap="sampleCode4CtrlResultMap" >
        select a.sample_code  remark,
        a.sample_code
        from BATCH_NO_INFO a
        where a.insert_time <![CDATA[ >= ]]> trunc(sysdate) - 1
        and a.batch_no_type = '2'
        and a.is_valid = '1'
        order by a.sample_code desc
    </select>

    <resultMap id="TakeSampleRecResultMap" type="org.gxz.znrl.entity.TakeSampleRecEntity">
        <result column="sample_areas" jdbcType="VARCHAR" property="sampleAreas" />
    </resultMap>
    <select id="qryTakeSampleRec" parameterType="org.gxz.znrl.entity.TakeSampleRecEntity"  resultMap="TakeSampleRecResultMap" >
        SELECT T.SAMPLE_AREAS
        FROM TAKE_SAMPLE_REC T
        WHERE 1 = 1
        <if test="carId != null" >
            AND T.CAR_ID = #{carId,jdbcType=VARCHAR}
        </if>
        <if test="machineCode != null" >
            AND T.MACHINE_CODE = #{machineCode,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null" >
            AND T.INSERT_TIME <![CDATA[ >= ]]> TO_DATE(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="endTime != null" >
            AND T.INSERT_TIME <![CDATA[ < ]]> TO_DATE(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
        </if>
        and  T.SAMPLE_AREAS is not null
        and  T.SAMPLE_CNT is not null
    </select>


    <select id="addNewWorkMode" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.WorkModeEntity">
        {call pro_add_workmode(#{workMode,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{param1,mode=IN,jdbcType=VARCHAR},
        #{param2,mode=IN,jdbcType=VARCHAR},
        #{param3,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>


    <resultMap id="WorkModeInfoResultMap" type="org.gxz.znrl.entity.WorkModeEntity">
        <result column="work_mode_name" jdbcType="VARCHAR" property="workModeName" />
        <result column="param_desc" jdbcType="VARCHAR" property="descr" />
    </resultMap>

    <select id="qryWorkModeInfo" resultMap="WorkModeInfoResultMap" >
        select decode(a.work_mode_value, '1', '自动', '2', '手动', '3', '半自动') work_mode_name,
        '三通： 1.'||(select decode(b.work_mode_value,
        '0',
        '未设定',
        '1',
        'A位',
        '2',
        'B位')
        from system_work_mode b
        where b.type_id = 113) || ' 2.' ||
        (select decode(c.work_mode_value,
        '0',
        '未设定',
        '1',
        'A位',
        '2',
        'B位')
        from system_work_mode c
        where c.type_id = 114) param_desc,
        ( select decode(work_mode_value,
        '4000',
        '4000',
        '6000',
        '6000',
        '8000',
        '8000',
        '10000',
        '10000',
        '12000',
        '12000')
        from system_work_mode
        where type_id = 130 ) param1 ,
        ( select  decode(work_mode_value,
        '4000',
        '4000',
        '6000',
        '6000',
        '8000',
        '8000',
        '10000',
        '10000',
        '12000',
        '12000')
        from system_work_mode
        where type_id = 129) param2
        from system_work_mode a
        where a.type_id = 111
    </select>


    <resultMap id="EmergencyWarnResultMap" type="org.gxz.znrl.entity.DeviceBroadEntity">
        <result column="error_rec_id" jdbcType="VARCHAR" property="errorRecId" />
        <result column="error_dec" jdbcType="VARCHAR" property="errorDec" />
    </resultMap>
    <select id="qryEmergencyWarnMsg" parameterType="org.gxz.znrl.entity.DeviceBroadEntity" resultMap="EmergencyWarnResultMap" >
        select *
        from (select a.error_rec_id,
        a.error_dec,
        row_number() over(order by a.error_rec_id desc) rn
        from device_error_info a
        where a.data_status = '0'
        and a.error_confirm = '0'

        <if test="errorCode != null" >
            and error_code =#{errorCode,jdbcType=VARCHAR}
        </if>
        and insert_time > sysdate - 1) t
        where t.rn = 1
    </select>


    <select id="qryShipSampleWorkMode" resultMap="WorkModeInfoResultMap" >
        select decode(a.work_mode_value, 'A', '自动控制', '人工控制') work_mode_name,
        '三通： 1.'||(select decode(b.work_mode_value,
        '0',
        '未设定',
        '1',
        'A位',
        '2',
        'B位')
        from system_work_mode b
        where b.type_id = 113) || ' 2.' ||
        (select decode(c.work_mode_value,
        '0',
        '未设定',
        '1',
        'A位',
        '2',
        'B位')
        from system_work_mode c
        where c.type_id = 114) param_desc,
        ( select decode(work_mode_value,
        '4000',
        '4000',
        '6000',
        '6000',
        '8000',
        '8000',
        '10000',
        '10000',
        '12000',
        '12000')
        from system_work_mode
        where type_id = 130 ) param1 ,
        ( select  decode(work_mode_value,
        '4000',
        '4000',
        '6000',
        '6000',
        '8000',
        '8000',
        '10000',
        '10000',
        '12000',
        '12000')
        from system_work_mode
        where type_id = 129) param2
        from system_work_mode a
        where a.type_id = 133
    </select>

    <resultMap id="ManSampleInfoResultMap" type="org.gxz.znrl.entity.ManualSampleEntity">
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="train_no" jdbcType="VARCHAR" property="trainNo" />
        <result column="sample_code" jdbcType="VARCHAR" property="sampleCode" />
        <result column="labor_code" jdbcType="VARCHAR" property="laborCode" />
        <result column="sampling_code" jdbcType="VARCHAR" property="samplingCode" />
        <result column="man_sample_code" jdbcType="VARCHAR" property="manSampleCode" />
        <result column="car_nos" jdbcType="VARCHAR" property="carIds" />
        <result column="car_order_nos" jdbcType="VARCHAR" property="xhNums" />
        <result column="batch_no_type" jdbcType="VARCHAR" property="batchNoType" />
        <result column="car_Cnt" jdbcType="VARCHAR" property="carCnt" />
        <result column="print_Num" jdbcType="VARCHAR" property="printNum" />
        <result column="print_num_pack" jdbcType="VARCHAR" property="printNumPack" />
        <result column="print_num_sample" jdbcType="VARCHAR" property="printNumSample" />
        <result column="print_num_sampling" jdbcType="VARCHAR" property="printNumSampling" />
        <result column="print_num_labor" jdbcType="VARCHAR" property="printNumLabor" />
        <result column="pack_code" jdbcType="VARCHAR" property="packCode" />
        <result column="print_opname_sample" jdbcType="VARCHAR" property="printOpNameSample" />
        <result column="print_opname_sampling" jdbcType="VARCHAR" property="printOpNameSampling" />
        <result column="print_opname_labor" jdbcType="VARCHAR" property="printOpNameLabor" />
        <result column="print_opname_pack" jdbcType="VARCHAR" property="printOpNamePack" />
        <result column="print_optime_sample" jdbcType="VARCHAR" property="printOpTimeSample" />
        <result column="print_optime_sampling" jdbcType="VARCHAR" property="printOpTimeSampling" />
        <result column="print_optime_labor" jdbcType="VARCHAR" property="printOpTimeLabor" />
        <result column="print_optime_pack" jdbcType="VARCHAR" property="printOpTimePack" />

    </resultMap>

    <select id="qryManSampleInfo" parameterType="org.gxz.znrl.entity.ManualSampleEntity" resultMap="ManSampleInfoResultMap" >
        select t.batch_no,
        t.train_no,
        t.sample_code,
        t.labor_code,
        t.man_sample_code,
        t.sampling_code,
        (select getBatchCarIds(t.batch_no,t.batch_no_type) from dual) as  car_nos,
        getBatchCarInfo(t.batch_no, '2') car_order_nos ,
        (select count(1) from rlrecordmstqy b where  b.car_batch_no = t.batch_no ) as car_Cnt
        from batch_no_info t
        where 1 = 1
        and t.is_valid <![CDATA[     <>     ]]> '2'
        <if test="batchNoType != null" >
            and t.batch_no_type = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and t.insert_time <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and t.insert_time <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>

        <if test="sampleCode != null" >
            and (t.sample_code = #{sampleCode,jdbcType=VARCHAR} or t.sample_code = (select HEXTOASCII(#{sampleCode,jdbcType=VARCHAR}) from dual))
        </if>

        <if test="samplingCode != null" >
            and t.sampling_code = #{samplingCode,jdbcType=VARCHAR}
        </if>
        order by t.insert_time desc
    </select>

    <select id="qryCarManSampleInfo" parameterType="org.gxz.znrl.entity.ManualSampleEntity" resultMap="ManSampleInfoResultMap" >
        select t.batch_no,
        '' train_no,
        t.sample_code,
        t.labor_code,
        t.sampling_code,
        t.man_sample_code,
        (select getBatchCarIds(t.batch_no,t.batch_no_type) from dual) as  car_nos,
        '' car_order_nos
        from batch_no_info t
        where t.batch_no_type = '0'
        <if test="beginDate != null" >
            and t.insert_time <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and t.insert_time <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>
        <if test="sampleCode != null" >
            and t.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>
        <if test="samplingCode != null" >
            and t.sampling_code = #{samplingCode,jdbcType=VARCHAR}
        </if>

        order by t.insert_time desc
    </select>

    <select id="qryLcManSampleInfo" parameterType="org.gxz.znrl.entity.ManualSampleEntity" resultMap="ManSampleInfoResultMap" >
        select t.batch_no,
        t.train_no,
        t.sample_code,
        t.labor_code,
        t.sampling_code,
        t.man_sample_code,
        t.car_nos,
        t.car_order_nos
        from (select bni.batch_no,
        '' train_no,
        bni.sample_code,
        bni.labor_code,
        bni.sampling_code,
        '' man_sample_code,
        '' car_nos,
        '' car_order_nos,
        bni.insert_time
        from batch_no_info bni, take_sample_rec tsr
        where bni.sample_code = tsr.sample_code
        and bni.batch_no_type = '9'
        <if test="beginDate != null" >
            and tsr.end_time <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and tsr.end_time <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>

        <if test="sampleCode != null" >
            and bni.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>
        ) t
        order by insert_time desc
    </select>


    <select id="qryManInfo" parameterType="org.gxz.znrl.entity.ManualSampleEntity" resultMap="ManSampleInfoResultMap" >
        select t.batch_no,
        t.train_no,
        t.sample_code,
        t.labor_code,
        t.man_sample_code,
        t.sampling_code,
        t.batch_no_type,
        (select getBatchCarIds(t.batch_no,t.batch_no_type) from dual) as  car_nos,
        getBatchInfo(t.batch_no, '2',t.batch_no_type) car_order_nos,
        t.insert_time
        from batch_no_info t
        where 1 = 1

        <if test="batchNo != null" >
            and t.batch_no  = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNoType != null" >
            and t.batch_no_type  = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and t.insert_time <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and t.insert_time <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>

        <if test="sampleCode != null" >
            and t.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null" >
            and t.sampling_code = #{samplingCode,jdbcType=VARCHAR}
        </if>

        <if test="packCode != null" >
            and t.sampling_code = get_sampling_code_by_packcd(#{packCode,jdbcType=VARCHAR})
        </if>
        order by t.insert_time desc
    </select>


    <select id="getPackCode" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.ManualSampleEntity">
        {call pk_register.get_man_pack_code(#{samplingCode,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{manPackCode,mode=OUT,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <resultMap id="violaResultMap" type="org.gxz.znrl.entity.ViolaEntity">
        <result column="viola_rec_id" jdbcType="VARCHAR" property="violaRecId" />
        <result column="record_no" jdbcType="VARCHAR" property="recordNo" />
        <result column="card_id" jdbcType="VARCHAR" property="cardId" />
        <result column="car_id" jdbcType="VARCHAR" property="carId" />
        <result column="viola_type" jdbcType="VARCHAR" property="violaType" />
        <result column="viola_level" jdbcType="VARCHAR" property="violaLevel" />
        <result column="viola_time" jdbcType="VARCHAR" property="violaTime" />
        <result column="viola_desc" jdbcType="VARCHAR" property="violaDesc" />
        <result column="is_deal" jdbcType="VARCHAR" property="isDeal" />
        <result column="op_code" jdbcType="VARCHAR" property="opCode" />
        <result column="op_desc" jdbcType="VARCHAR" property="opDesc" />
        <result column="deal_time" jdbcType="VARCHAR" property="dealTime" />
    </resultMap>

    <select id="qryViolaData" parameterType="org.gxz.znrl.entity.ViolaEntity" resultMap="violaResultMap" >
        select t.viola_rec_id,
        t.record_no,
        t.card_id,
        t.car_id,
        t.viola_type,
        t.viola_level,
        to_char( t.viola_time, 'yyyy-mm-dd hh24:mi:ss') viola_time,
        t.viola_desc,
        t.is_deal,
        (select realname from security_user where id = to_number(t.op_code)) op_code,
        t.op_desc,
        to_char( t.deal_time, 'yyyy-mm-dd hh24:mi:ss') deal_time
        from car_viola_rec t
        where 1=1
        <if test="sbeginDate != null" >
            and t.viola_time <![CDATA[     >=     ]]> to_date(#{sbeginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="sendDate != null" >
            and t.viola_time <![CDATA[     <     ]]> to_date(#{sendDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>
        <if test="violaLevel != null" >
            and t.viola_level = #{violaLevel,jdbcType=VARCHAR}
        </if>
        <if test="isDeal != null" >
            and t.is_deal = #{isDeal,jdbcType=VARCHAR}
        </if>
        <if test="carId != null" >
            and t.car_id = #{carId,jdbcType=VARCHAR}
        </if>
        order by t.viola_time desc
    </select>
    <select id="viewViolaDetail" parameterType="java.lang.String"  resultMap="violaResultMap" >
        select t.viola_rec_id,
        t.record_no,
        t.card_id,
        t.car_id,
        t.viola_type,
        t.viola_level,
        to_char( t.viola_time, 'yyyy-mm-dd hh24:mi:ss') viola_time,
        t.viola_desc,
        t.is_deal,
        t.op_code,
        t.op_desc,
        to_char( t.deal_time, 'yyyy-mm-dd hh24:mi:ss') deal_time
        from car_viola_rec t
        where viola_rec_id = to_number(#{violaRecId, jdbcType=VARCHAR})
    </select>

    <!--修改车辆信息-->
    <update id="editViolaDetail" parameterType="org.gxz.znrl.entity.ViolaEntity" >
        update car_viola_rec
        set op_code = #{opCode,jdbcType=VARCHAR},
        op_desc = #{opDesc,jdbcType=VARCHAR},
        deal_time = sysdate,
        is_deal = 1
        where viola_rec_id = #{violaRecId,jdbcType=VARCHAR}
    </update>

    <resultMap id="YGCabinetInfoResultMap" type="org.gxz.znrl.entity.YGCabinetEntity">
        <result column="sample_store_id" jdbcType="VARCHAR" property="sampleStoreId" />
        <result column="sampling_rec_id" jdbcType="VARCHAR" property="samplingRecId" />
        <result column="sample_type" jdbcType="VARCHAR" property="sampleType" />
        <result column="sample_type_name" jdbcType="VARCHAR" property="sampleTypeName" />
        <result column="sampling_code" jdbcType="VARCHAR" property="samplingCode" />
        <result column="cap_code" jdbcType="VARCHAR" property="capCode" />
        <result column="bottom_code" jdbcType="VARCHAR" property="bottomCode" />
        <result column="plain_code" jdbcType="VARCHAR" property="plainCode" />
        <result column="sampling_time" jdbcType="VARCHAR" property="samplingTime" />
        <result column="store_time" jdbcType="VARCHAR" property="storeTime" />
        <result column="end_time" jdbcType="VARCHAR" property="endTime" />
        <result column="sample_status" jdbcType="VARCHAR" property="sampleStatus" />
        <result column="sample_status_name" jdbcType="VARCHAR" property="sampleStatusName" />
        <result column="store_dates" jdbcType="VARCHAR" property="storeDates" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="sampleLimitedTime" jdbcType="VARCHAR" property="sampleLimitedTime" />
        <result column="batch_No_Type" jdbcType="VARCHAR" property="batchNoType" />
    </resultMap>

    <select id="qryYGCabinetInfo" parameterType="org.gxz.znrl.entity.YGCabinetEntity" resultMap="YGCabinetInfoResultMap" >
        select a.sample_store_id,
        a.sampling_rec_id,
        a.sample_type,
        decode(a.sample_type, '61','6mm全水样',
        '62','6mm存查样',
        '31','3mm化验样',
        '32','3mm存查样',
        '21','0.2mm化验样',
        '22','0.2mm存查样',
        '33','3mm一次抽查样',
        '34','3mm二次抽查样',
        '35','3mm三次抽查样',
        '71','13mm全水样1',
        '72','13mm全水样2',
        '73','13mm全水样3',
        '74','13mm全水样4', '') sample_type_name,
        a.sampling_code,
        a.cap_code,
        a.bottom_code,
        a.plain_code,
        to_char(a.sampling_time, 'yyyy-mm-dd hh24:mi:ss') sampling_time,
        to_char(a.store_time, 'yyyy-mm-dd hh24:mi:ss') store_time,
        to_char(a.end_time, 'yyyy-mm-dd hh24:mi:ss') end_time,
        a.sample_status,
        (select dt.name from dictionary_table dt where dt.type = 'YG_CAB_SMPL_STATUS' and dt.id = a.sample_status) sample_status_name,
        (trunc(sysdate) - trunc(a.store_time)) store_dates,
        a.remark,
        DECODE((SELECT B.BATCH_NO_TYPE
        FROM BATCH_NO_INFO B
        WHERE B.SAMPLING_CODE = A.SAMPLING_CODE),
        9,
        DECODE(A.SAMPLE_TYPE,
        '61',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_6_RL'),
        '62',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_6_RL'),
        '31',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_3_RL'),
        '32',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_3_RL'),
        '33',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_3_RL'),
        '34',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_3_RL'),
        '35',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_3_RL'),
        '21',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_2_RL'),
        '22',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_2_RL'),
        '71',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_7_RL'),
        '72',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_7_RL'),
        '73',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_7_RL'),
        '74',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_7_RL'),
        'ER'),
        DECODE(A.SAMPLE_TYPE,
        '61',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_6'),
        '62',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_6'),
        '31',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_3'),
        '32',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_3'),
        '33',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_3'),
        '34',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_3'),
        '35',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_3'),
        '21',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_2'),
        '22',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_2'),
        '71',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_7'),
        '72',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_7'),
        '73',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_7'),
        '74',
        GET_SAMPLE_TYPE_BY_ID(A.SAMPLE_STORE_ID,
        'CYCLE_7'),
        'ER')) sampleLimitedTime
        from yg_cabinet_info a
        where 1 = 1

        <!--审批查看详情时查询-->
        <if test="apprKeyId != null" >
            and a.sample_store_id in (select aa.param4 from appr_req_data_buffer aa where aa.param1 = #{apprKeyId,jdbcType=VARCHAR} )
        </if>

        <if test="sampleStoreId != null" >
            and a.sample_store_id = #{sampleStoreId,jdbcType=VARCHAR}
        </if>

        <if test="sampleType != null" >
            and (a.sample_type = #{sampleType,jdbcType=VARCHAR} or a.sample_type like #{sampleType,jdbcType=VARCHAR})
        </if>

        <if test="samplingCode != null" >
            and a.sampling_code = #{samplingCode,jdbcType=VARCHAR}
        </if>

        <if test="capCode != null" >
            and a.cap_code = #{capCode,jdbcType=VARCHAR}
        </if>

        <if test="bottomCode != null" >
            and a.bottom_code = #{bottomCode,jdbcType=VARCHAR}
        </if>

        <if test="plainCode != null" >
            and a.plain_code = #{plainCode,jdbcType=VARCHAR}
        </if>

        <if test="storeBeginTime != null" >
            and a.sampling_time <![CDATA[     >=   ]]> to_date(#{storeBeginTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="storeEndTime != null" >
            and a.sampling_time <![CDATA[     <    ]]> to_date(#{storeEndTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>

        <if test="sampleStatus != null" >
            and a.sample_status = #{sampleStatus,jdbcType=VARCHAR}
        </if>

        <if test="sampleLimitedTime != null">
            AND A.STORE_TIME  ${sampleLimitedTime}
        </if>

        <if test="batchNoType != null">
            AND A.sampling_code in (select aa.sampling_code from batch_no_info aa where aa.batch_No_Type ${batchNoType})
        </if>

        order by a.sampling_time desc
    </select>

    <!--远光存查样柜操作命令的xml组装-->
    <select id="packYGCabinetOpInfo" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.YGCabinetEntity">
        {call pk_sample_store.yg_req_xml(#{opRecId,mode=IN,jdbcType=VARCHAR},
        #{reqXml,mode=OUT,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="commitCtrlCmdPro" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.CtrlEntity">
        {call pk_register.commitCtrlCmdPro(#{machineCode,mode=IN,jdbcType=VARCHAR},
        #{machineType,mode=IN,jdbcType=VARCHAR},
        #{commandCode,mode=IN,jdbcType=VARCHAR},
        #{sampleCode,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="commitCtrlCmdPro2" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.CtrlEntity">
        {call pk_register.commitCtrlCmdPro2(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="setCurrentShip" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.ShipEntity">
        {call pk_ship.setCurrentShip(#{shipRecID,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--定位单个车辆-->
    <select id="qryCarByCarIdOrCardId" parameterType="org.gxz.znrl.entity.CarInfoEntity" resultMap="RegisteredCarResultMap" >
        SELECT to_char(a.rec_id) rec_id,
        a.card_id,
        a.card_typ,
        decode(a.card_typ, '1', '普通卡', '2', '临时卡') card_type_name,
        a.car_id,
        backcar_id,
        decode(a.trans_typ, '0', '煤车', '1', '灰车', '2', '其它') trans_type_name,
        a.org_no,
        (select ci.carrier_name
        from CARRIER_INFO ci
        where ci.CARRIER_NO = to_char(a.org_no)) carrier_name,
        decode(a.car_typ, '0', '半挂', '1', '外挂') car_type_name,
        to_char(a.std_qty) std_qty,
        to_char(a.reg_dtm, 'yyyy-mm-dd') reg_dtm,
        to_char(a.end_dtm, 'yyyy-mm-dd') end_dtm
        FROM RLCARMST a
        where valid_sta = '1'
        <if test="carId != null" >
            and a.car_id = #{carId,jdbcType=VARCHAR}
        </if>

        <if test="cardId != null" >
            or a.card_id = #{cardId,jdbcType=VARCHAR}
        </if>
        order by a.reg_dtm desc
    </select>

    <resultMap id="ShipInfoResultMap" type="org.gxz.znrl.entity.ShipEntity">
        <result column="ship_id" jdbcType="VARCHAR" property="shipId" />
        <result column="ship_name" jdbcType="VARCHAR" property="shipName" />
        <result column="ship_eng_name" jdbcType="VARCHAR" property="shipEngName" />
        <result column="ship_code" jdbcType="VARCHAR" property="shipCode" />
        <result column="fix_ship_no" jdbcType="VARCHAR" property="fixShipNo" />
        <result column="cabin_cnt" jdbcType="VARCHAR" property="cabinCnt" />
        <result column="load_tun" jdbcType="VARCHAR" property="loadTun" />
        <result column="total_tun" jdbcType="VARCHAR" property="totalTun" />
        <result column="width" jdbcType="VARCHAR" property="width" />
        <result column="length" jdbcType="VARCHAR" property="length" />
        <result column="nation_cd" jdbcType="VARCHAR" property="nationCd" />
        <result column="company_no" jdbcType="VARCHAR" property="companyNo" />
        <result column="company_name" jdbcType="VARCHAR" property="companyName" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
    </resultMap>

    <select id="qryShipInfo" parameterType="org.gxz.znrl.entity.ShipEntity" resultMap="ShipInfoResultMap" >
        select a.ship_id,
        a.ship_name,
        a.ship_eng_name,
        a.ship_code,
        a.fix_ship_no,
        a.cabin_cnt,
        a.load_tun,
        a.total_tun,
        a.width,
        a.length,
        a.nation_cd,
        a.company_no,
        (select ci.carrier_name From carrier_info ci where ci.carrier_no = a.company_no) company_name,
        a.remark,
        a.status,
        decode(a.status, '0','未生效','1','正常','2','失效') statusName
        from ship_info a
        where 1 = 1
        and status = '1'

        <if test="shipId != null" >
            and a.ship_id = #{shipId,jdbcType=VARCHAR}
        </if>

        <if test="shipCode != null" >
            and a.ship_code = #{shipCode,jdbcType=VARCHAR}
        </if>

        <if test="shipName != null" >
            and a.ship_name like #{shipName,jdbcType=VARCHAR}
        </if>

        <if test="fixShipNo != null" >
            and a.fix_ship_no = #{fixShipNo,jdbcType=VARCHAR}
        </if>
    </select>

    <resultMap id="ShipTransInfoResultMap" type="org.gxz.znrl.entity.ShipEntity">
        <result column="ship_rec_id" jdbcType="VARCHAR" property="shipRecID" />
        <result column="contract_no" jdbcType="VARCHAR" property="contractNo" />
        <result column="contract_name" jdbcType="VARCHAR" property="contractName" />
        <result column="ship_trans_no" jdbcType="VARCHAR" property="shipTransNo" />
        <result column="carrier_no" jdbcType="VARCHAR" property="carrierNo" />
        <result column="carrier_name" jdbcType="VARCHAR" property="carrierName" />
        <result column="waybill_no" jdbcType="VARCHAR" property="waybillNo" />
        <result column="water_tun" jdbcType="VARCHAR" property="waterTun" />
        <result column="receiver_no" jdbcType="VARCHAR" property="receiverNo" />
        <result column="receiver_name" jdbcType="VARCHAR" property="receiverName" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="status_name" jdbcType="VARCHAR" property="statusName" />
        <result column="load_hours" jdbcType="VARCHAR" property="loadHours" />
        <result column="unload_hours" jdbcType="VARCHAR" property="unloadHours" />
        <result column="start_port_no" jdbcType="VARCHAR" property="startPortNo" />
        <result column="start_port_name" jdbcType="VARCHAR" property="startPortName" />
        <result column="final_port_no" jdbcType="VARCHAR" property="finalPortNo" />
        <result column="final_port_name" jdbcType="VARCHAR" property="finalPortName" />
        <result column="start_time" jdbcType="VARCHAR" property="startTime" />
        <result column="estimate_time" jdbcType="VARCHAR" property="estimateTime" />
        <result column="fact_time" jdbcType="VARCHAR" property="factTime" />
        <result column="nor_time" jdbcType="VARCHAR" property="norTime" />
        <result column="ship_id" jdbcType="VARCHAR" property="shipId" />
        <result column="ship_code" jdbcType="VARCHAR" property="shipCode" />
        <result column="ship_name" jdbcType="VARCHAR" property="shipName" />
        <result column="ship_eng_name" jdbcType="VARCHAR" property="shipEngName" />
        <result column="fix_ship_no" jdbcType="VARCHAR" property="fixShipNo" />
        <result column="cabin_cnt" jdbcType="VARCHAR" property="cabinCnt" />
        <result column="arrange_time" jdbcType="VARCHAR" property="arrangeTime" />
        <result column="unload_time" jdbcType="VARCHAR" property="unloadTime" />
        <result column="depart_time" jdbcType="VARCHAR" property="departTime" />
        <result column="berth_no" jdbcType="VARCHAR" property="berthNo" />
        <result column="op_code" jdbcType="VARCHAR" property="opCode" />
        <result column="update_code" jdbcType="VARCHAR" property="updateCode" />

        <result column="record_no" jdbcType="VARCHAR" property="recordNo" />
        <result column="ven_no" jdbcType="VARCHAR" property="venNo" />
        <result column="ven_name" jdbcType="VARCHAR" property="venName" />
        <result column="tick_qty" jdbcType="VARCHAR" property="tickQty" />
        <result column="sample_type" jdbcType="VARCHAR" property="sampleType" />
        <result column="sample_type_name" jdbcType="VARCHAR" property="sampleTypeName" />
        <result column="is_batch" jdbcType="VARCHAR" property="isBatch" />
        <result column="is_batch_name" jdbcType="VARCHAR" property="isBatchName" />

        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="train_no" jdbcType="VARCHAR" property="trainNo" />
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="batch_time" jdbcType="VARCHAR" property="batchTime" />
        <result column="upload_status" jdbcType="VARCHAR" property="uploadStatus" />

        <result column="ship_type" jdbcType="VARCHAR" property="shipType" />
        <result column="ship_type_name" jdbcType="VARCHAR" property="shipTypeName" />
        <result column="trade_type" jdbcType="VARCHAR" property="tradeType" />
        <result column="trade_name" jdbcType="VARCHAR" property="tradeName" />
        <result column="good_no" jdbcType="VARCHAR" property="goodNo" />
        <result column="good_name" jdbcType="VARCHAR" property="goodName" />
        <result column="good_type" jdbcType="VARCHAR" property="goodType" />
        <result column="good_type_name" jdbcType="VARCHAR" property="goodTypeName" />
        <result column="bill_no" jdbcType="VARCHAR" property="billNo" />
        <result column="STOCK_NAME" jdbcType="VARCHAR" property="areaName" />
        <result column="STOCK_AREA" jdbcType="VARCHAR" property="areaPosition" />
        <result column="STOCK_HEIGHT" jdbcType="VARCHAR" property="areaHeight" />
        <result column="STOCK_NO" jdbcType="VARCHAR" property="areaNo" />
        <result column="STORAGE_CODE" jdbcType="VARCHAR" property="storageCode" />
        <result column="STORAGE_NAME" jdbcType="VARCHAR" property="storageName" />
        <result column="NET_QTY" jdbcType="VARCHAR" property="netQty" />
        <result column="LEFT_QTY" jdbcType="VARCHAR" property="leftQty" />

    </resultMap>

    <select id="qryShipTransInfo" parameterType="org.gxz.znrl.entity.ShipEntity" resultMap="ShipTransInfoResultMap" >
        select a.ship_rec_id,
        a.ship_trans_no,
        a.carrier_no,
        a.waybill_no,
        a.water_tun,
        a.receiver_no,
        (select dt.name from dictionary_table dt where dt.type = 'GOODS_RECEIVER' and dt.id = a.receiver_no) receiver_name,
        a.status,
        decode(a.status, '0','待装','1','在装','2','待出发','3','在途','4','到达待卸','5','在卸','6','卸空待回','7','离港','') status_name,
        a.load_hours,
        a.unload_hours,
        a.start_port_no,
        (select dt.name from dictionary_table dt where dt.type = 'GOODS_RECEIVER' and dt.id = a.start_port_no) start_port_name,
        a.final_port_no,
        (select dt.name from dictionary_table dt where dt.type = 'GOODS_RECEIVER' and dt.id = a.final_port_no) final_port_name,
        a.berth_no,
        to_char(a.start_time, 'yyyy-mm-dd hh24:mi:ss') start_time,
        to_char(a.estimate_time, 'yyyy-mm-dd hh24:mi:ss') estimate_time,
        to_char(a.fact_time, 'yyyy-mm-dd hh24:mi:ss') fact_time,
        to_char(a.arrange_time, 'yyyy-mm-dd hh24:mi:ss') arrange_time,
        to_char(a.unload_time, 'yyyy-mm-dd hh24:mi:ss') unload_time,
        to_char(a.depart_time, 'yyyy-mm-dd hh24:mi:ss') depart_time,
        to_char(a.nor_time, 'yyyy-mm-dd hh24:mi:ss') nor_time,
        a.remark,
        b.ship_name,
        b.ship_eng_name,
        b.ship_code,
        b.ship_id,
        b.fix_ship_no,
        b.cabin_cnt,
        a.ship_type,
        decode(a.ship_type, '0','散货船','1','件散货船','2','集装箱船','3','游轮') ship_type_name
        from ship_record a, ship_info b
        where 1 = 1
        and a.ship_id = b.ship_id
        and a.rec_status = '1'
        and (a.is_transfer = 'N' or a.is_transfer is null)

        <if test="shipRecID != null" >
            and a.ship_rec_id = #{shipRecID,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.fact_time <![CDATA[  >=  ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and a.fact_time <![CDATA[  <  ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>

        <if test="shipTransNo != null" >
            and a.ship_trans_no = #{shipTransNo,jdbcType=VARCHAR}
        </if>

        <if test="shipCode != null" >
            and b.ship_code = #{shipCode,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and a.status = #{status,jdbcType=VARCHAR}
        </if>

        <if test="shipId != null" >
            and b.ship_id = #{shipId,jdbcType=VARCHAR}
        </if>

        <if test="berthNo != null" >
            and a.berth_no = #{berthNo,jdbcType=VARCHAR}
        </if>
        order by a.fact_time desc
    </select>

    <select id="qryShipCargoInfo" parameterType="org.gxz.znrl.entity.ShipEntity" resultMap="ShipTransInfoResultMap" >
        select a.record_no,
        a.ship_rec_id,
        a.ven_no,
        (select v.ven_name from vendor_info v where v.ven_no = a.ven_no) ven_name,
        a.carrier_no,
        (select ci.carrier_name from carrier_info ci where ci.carrier_no = a.carrier_no) carrier_name,
        a.tick_qty,
        a.sample_type,
        decode(a.sample_type, '0','出库','1','入库','2','直提') sample_type_name,
        a.REC_STATUS is_batch,
        decode(a.REC_STATUS, '0','未发布','1','已发布','2','已暂停','3','已结束') is_batch_name,
        to_char(a.fact_time, 'yyyy-mm-dd hh24:mi:ss') fact_time,
        a.remark,
        a.trade_type,
        decode(a.trade_type, '0','外贸进口','1','外贸出口','2','内贸进口','3','内贸出口','4','其它') trade_name,
        a.good_no,
        (select gi.good_name from good_info gi where gi.good_no = a.good_no) good_name,
         a.GOOD_TYPE,
         decode(a.good_type,'0','空箱','1','集装箱','2','散货','3','件杂货','4','空车','5','行政车辆')  good_type_name,
         a.bill_no,
         a.STOCK_NAME,
         a.STOCK_AREA,
         a.STOCK_HEIGHT,
         a.STOCK_NO,
         a.STORAGE_CODE,
         a.STORAGE_NAME,
        (SELECT SUM(B.NET_QTY) FROM RLRECORDMSTQY B WHERE B.TICK_NO= a.bill_no) NET_QTY,
        (SELECT  a.tick_qty-SUM(B.NET_QTY) FROM RLRECORDMSTQY B WHERE B.TICK_NO= a.bill_no) LEFT_QTY
        from ship_cargo_record a
        where 1 = 1
         and a.rec_status in ( '1','0','2','3')
        <if test="recordNo != null" >
            and a.record_no = #{recordNo,jdbcType=VARCHAR}
        </if>
        <if test="shipRecID != null" >
            and a.ship_rec_id = #{shipRecID,jdbcType=VARCHAR}
        </if>
        <if test="beginDate != null" >
            and a.insert_time <![CDATA[  >=  ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>
        <if test="endDate != null" >
            and a.insert_time <![CDATA[  <  ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>
        <if test="billNo != null" >
            and a.bill_no = #{billNo,jdbcType=VARCHAR}
        </if>

        order by a.record_no desc
    </select>

    <select id="qryShipWeightInfo" parameterType="org.gxz.znrl.entity.ShipEntity" resultMap="ShipTransInfoResultMap" >
        select a.record_no,
        a.ship_rec_id,
        b.ship_trans_no,
        c.ship_name,
        a.ven_no,
        (select v.ven_name from vendor_info v where v.ven_no = a.ven_no) ven_name,
        a.mine_no,
        (select cm.mine_name from coal_mine cm where cm.mine_no = a.mine_no) mine_name,
        a.coal_no,
        (select ct.coal_name from coal_type ct where ct.coal_no = a.coal_no) coal_name,
        a.carrier_no,
        (select ci.carrier_name from carrier_info ci where ci.carrier_no = a.carrier_no) carrier_name,
        a.cabin_nos,
        a.tick_qty,
        a.depart_qty,
        a.arrive_qty,
        a.receive_qty,
        a.loss_type,
        (a.receive_qty - a.arrive_qty ) lossQty,
        to_char(round(((a.receive_qty - a.arrive_qty)/a.arrive_qty)*100,2)) || '%' lossQtyPercent,
        decode(a.loss_type, '0','无损','1','水分','2','矸石','3','自燃','4','其它') loss_type_name,
        a.kd_qty,
        a.sample_type,
        decode(a.sample_type, '0','皮带采样','1','皮带大水分旁路','2','人工采样','3','车厢采样','4','车厢大水分旁路') sample_type_name,
        pk_ship.isBatch(a.ship_rec_id) is_batch,
        decode(pk_ship.isBatch(a.ship_rec_id), 'Y','已分批','N','未分批') is_batch_name,
        to_char(a.insert_time, 'yyyy-mm-dd hh24:mi:ss') fact_time,
        a.remark
        from ship_cargo_record a,ship_record b, ship_info c
        where 1 = 1
        and a.rec_status = '1'
        and a.ship_rec_id = b.ship_rec_id
        and b.ship_id = c.ship_id

        <if test="shipRecID != null" >
            and a.ship_rec_id = #{shipRecID,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.insert_time <![CDATA[  >=  ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and a.insert_time <![CDATA[  <  ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>
        order by a.record_no desc
    </select>

    <!--专门给蚌埠用，特殊的船，船当火车玩 20160621 xieyt-->
    <select id="qryShipBatch" parameterType="org.gxz.znrl.entity.ShipEntity" resultMap="ShipTransInfoResultMap" >
        select a.batch_no,
        a.batch_no_type,
        a.sample_code,
        a.sampling_code,
        a.train_no ship_rec_id,
        (select t.TRANSFERNO from dischargeforecast_info t where t.id = a.train_no) contract_name,
        a.ven_no,
        (select v.ven_name from vendor_info v where v.ven_no = a.ven_no) ven_name,
        a.mine_no,
        (select cm.mine_name from coal_mine cm where cm.mine_no = a.mine_no) mine_name,
        a.coal_no,
        (select ct.coal_name from coal_type ct where ct.coal_no = a.coal_no) coal_name,
        a.all_tick_qty,
        a.remark,
        to_char(a.insert_time, 'yyyy-mm-dd hh24:mi:ss') batch_time,
        a.is_valid status,
        decode(a.is_valid, '0','未开始','1','完成','2','采样中','3','采样暂停') status_name,
        <if test="uploadStatus != null" >
            get_batch2Mis_status(a.batch_no) upload_status,
        </if>
        a.all_net_qty
        from batch_no_info a
        where batch_no_type = '2'

        <if test="shipRecID != null" >
            and a.train_no = #{shipRecID,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.insert_time <![CDATA[  >=  ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and a.insert_time <![CDATA[  <  ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>

        order by a.insert_time desc
    </select>


    <select id="submitEditShipInfo" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.ShipEntity">
        {call pk_ship.edit_ship_info(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{actionTag,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>


    <select id="editShipTransRec" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.ShipEntity">
        {call pk_ship.edit_ship_rec(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{actionTag,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="editShipCargoRec" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.ShipEntity">
        {call pk_ship.edit_ship_cargo_rec(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{actionTag,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="finishUnloadRec" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.ShipEntity">
        {call pk_ship.finish_unload_rec(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>


    <resultMap id="BatchNoInfoResultMap" type="org.gxz.znrl.entity.BatchNoInfoEntity">
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="day_batch_num" jdbcType="VARCHAR" property="dayBatchNum" />
        <result column="ship_trans_no" jdbcType="VARCHAR" property="shipTransNo" />
        <result column="ven_no" jdbcType="VARCHAR" property="venNo" />
        <result column="mine_no" jdbcType="VARCHAR" property="mineNo" />
        <result column="coal_no" jdbcType="VARCHAR" property="coalNo" />
        <result column="ven_name" jdbcType="VARCHAR" property="venName" />
        <result column="mine_name" jdbcType="VARCHAR" property="mineName" />
        <result column="coal_name" jdbcType="VARCHAR" property="coalName" />
        <result column="batch_status_name" jdbcType="VARCHAR" property="batchStatusName" />
        <result column="is_valid" jdbcType="VARCHAR" property="isValid" />
        <result column="this_batch_qty" jdbcType="VARCHAR" property="thisBatchQty" />
        <result column="sample_code" jdbcType="VARCHAR" property="sampleCode" />
        <result column="sampling_code" jdbcType="VARCHAR" property="samplingCode" />
        <result column="labor_code" jdbcType="VARCHAR" property="laborCode" />
        <result column="batch_time" jdbcType="VARCHAR" property="batchTime" />
        <result column="op_code" jdbcType="VARCHAR" property="opCode" />
        <result column="real_batch_qty" jdbcType="VARCHAR" property="realBatchQty" />
        <result column="car_num" jdbcType="VARCHAR" property="carNum" />
        <result column="mz_qty" jdbcType="VARCHAR" property="allTickQty" />

    </resultMap>
    <select id="qryShipBatchInfo" parameterType="org.gxz.znrl.entity.BatchNoInfoEntity" resultMap="BatchNoInfoResultMap" >
        select a.batch_no,
        b.ship_trans_no,
        a.ven_no,
        (select v.ven_name from vendor_info v where v.ven_no = a.ven_no) ven_name,
        a.mine_no,
        (select cm.mine_name from coal_mine cm where cm.mine_no = a.mine_no) mine_name,
        a.coal_no,
        (select ct.coal_name from coal_type ct where ct.coal_no = a.coal_no) coal_name,
        a.sample_code,
        a.sampling_code,
        a.labor_code,
        a.is_valid,
        decode(a.is_valid, '0','未完成','1','完成','2','处理中') batch_status_name,
        a.day_batch_num,
        a.all_tick_qty this_batch_qty,
        to_char(a.insert_time, 'yyyy-mm-dd hh24:mi:ss') batch_time
        from batch_no_info a, ship_record b
        where a.train_no = b.ship_trans_no
        and a.batch_no_type in (2,3)
        and b.ship_rec_id = #{shipRecID,jdbcType=VARCHAR}
        order by a.day_batch_num
    </select>

    <select id="qrySingleBatchNoInfo" parameterType="org.gxz.znrl.entity.BatchNoInfoEntity" resultMap="BatchNoInfoResultMap" >
        select a.batch_no,
        a.sample_code,
        a.sampling_code,
        a.labor_code,
        (select v.ven_name from vendor_info v where v.ven_no = a.ven_no) ven_name,
        (select cm.mine_name from coal_mine cm where cm.mine_no = a.mine_no) mine_name,
        (select ct.coal_name from coal_type ct where ct.coal_no = a.coal_no) coal_name
        from batch_no_info a
        where 1 = 1
        <if test="batchNo != null" >
            and a.batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null" >
            and a.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null" >
            and a.sampling_code = #{samplingCode,jdbcType=VARCHAR}
        </if>

        <if test="laborCode != null" >
            and a.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>

    </select>

    <select id="editSamplingResultRec" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.EditSamplingRptEntity">
        {call sampling_result_record(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="addVirtualBatchInfoRecord" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.SamplingRptEntity">
        {call pk_register.deal_virtual_batch_info(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="addFurnaceBatchInfoRecord" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.SamplingRptEntity">
        {call pk_register.deal_furnace_batch_info(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--底样批次操作-->
    <select id="carAttachBatchForBat" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.RegisterEntity">
        {call pk_register.carAttachBatchForBat(#{updateString,mode=IN,jdbcType=VARCHAR},
        #{publicString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--删除整个车次-->
    <select id="deleteWholeTrain" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.RegisterEntity">
        {call pk_register.delete_Whole_Train_Info(#{trainNo,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <update id="setShipRecoveryStatus" parameterType="org.gxz.znrl.entity.ShipEntity">
        update ship_record a
        set a.status = #{status,jdbcType=VARCHAR}
        where a.status = #{oldStatus,jdbcType=VARCHAR}
    </update>

    <update id="setShipStatus" parameterType="org.gxz.znrl.entity.ShipEntity" >
        update ship_record a
        set a.status =  #{status,jdbcType=VARCHAR},
        a.update_code     = #{opCode,jdbcType=VARCHAR},
        a.update_time     = sysdate,
        a.remark          = to_char(sysdate, 'yyyymmddhh24miss') ||'-设置为当前卸煤船'
        where a.ship_rec_id = to_number(#{shipRecID,jdbcType=VARCHAR})
    </update>

    <select id="compOrDelShipBatchPro" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.ShipEntity">
        {call pk_register.compOrDelShipBatchPro(#{sampleCode,mode=IN,jdbcType=VARCHAR},
        #{status,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>



    <resultMap id="XmTransSetResultMap" type="org.gxz.znrl.entity.XmTransSetEntity">
        <result column="coal_ditch_cd" jdbcType="VARCHAR" property="coalDichcd" />
        <result column="ven_no" jdbcType="VARCHAR" property="venNo" />
        <result column="mine_no" jdbcType="VARCHAR" property="mineNo" />
        <result column="coal_no" jdbcType="VARCHAR" property="coalNo" />
        <result column="eff_time" jdbcType="VARCHAR" property="beginDate" />
        <result column="exp_time" jdbcType="VARCHAR" property="endDate" />
        <result column="sample_code" jdbcType="VARCHAR" property="sampleCode" />
        <result column="ven_name" jdbcType="VARCHAR" property="venName" />
        <result column="mine_name" jdbcType="VARCHAR" property="mineName" />
        <result column="coal_name" jdbcType="VARCHAR" property="coalName" />
        <result column="is_active" jdbcType="VARCHAR" property="isActive" />
        <result column="to_ditch" jdbcType="VARCHAR" property="toDitch" />
        <result column="car_id" jdbcType="VARCHAR" property="carId" />
        <result column="forecast_weight" jdbcType="VARCHAR" property="forecastWeight" />
        <result column="car_cnt" jdbcType="VARCHAR" property="carCnt" />
    </resultMap>

    <select id="qryXmTransList" parameterType="org.gxz.znrl.entity.XmTransSetEntity" resultMap="XmTransSetResultMap">
        select a.coal_ditch_cd,
        (select count(1) from queue_list a,flow_queue b where b.flow_id = a.coal_ditch_cd and a.queue_no=b.queue_no) car_cnt,
        a.ven_no,
        (select v.ven_name from vendor_info v where v.ven_no = a.ven_no) ven_name,
        a.mine_no,
        (select cm.mine_name from coal_mine cm where cm.mine_no = a.mine_no) mine_name,
        a.coal_no,
        (select ct.coal_name from coal_type ct where ct.coal_no = a.coal_no) coal_name,
        to_char(a.eff_time, 'yyyy-mm-dd hh24:mi:ss') eff_time,
        to_char(a.exp_time ,'yyyy-mm-dd hh24:mi:ss') exp_time,
        a.sample_code,
        is_active,
        to_ditch,
        a.forecast_weight,
        (select getQueueCarIds(a.coal_ditch_cd) from dual) as  car_id
        from coal_ditch_2_mine a
        where 1 = 1
        <if test="coalDichcd != null" >
            and a.coal_ditch_cd = #{coalDichcd,jdbcType=VARCHAR}
        </if>

    </select>



    <!--修改卸煤通道信息-->
    <select id="editxmTransDetail" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.XmTransSetEntity">
        {call pk_register.modify_One_xmTrans_Info(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>




    <!--修改卸煤通道信息-->
    <select id="editCarQueue" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.XmTransSetEntity">
        {call PK_CAR_SCHEDULE.editCarQueue(#{coalDichcd,mode=IN,jdbcType=VARCHAR},
        #{carId,mode=IN,jdbcType=VARCHAR},
        #{actionTag,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <resultMap id="BeltBalanceResultMap" type="org.gxz.znrl.entity.BatchNoInfoEntity">
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="day_batch_num" jdbcType="VARCHAR" property="dayBatchNum" />
        <result column="batch_time" jdbcType="VARCHAR" property="batchTime" />
        <result column="all_net_qty" jdbcType="VARCHAR" property="allNetQty" />
    </resultMap>

    <select id="qryBeltBalanceInfo"  parameterType="org.gxz.znrl.entity.BatchNoInfoEntity" resultMap="BeltBalanceResultMap">
        SELECT a.batch_no,
        to_char(a.insert_time, 'yyyy-mm-dd hh24:mi:ss') batch_time,
        decode(a.day_batch_num, '1','中班','2','夜班','3','白班','') day_batch_num,
        a.all_net_qty
        FROM batch_no_info a
        WHERE 1 = 1
        and a.batch_no_type = '9'
        <if test="startTime != null" >
            and a.insert_time <![CDATA[  >=  ]]> to_date(#{startTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endTime != null" >
            and a.insert_time <![CDATA[  <  ]]> to_date(#{endTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>

        <if test="dayBatchNum != null" >
            and a.day_batch_num = #{dayBatchNum,jdbcType=VARCHAR}
        </if>
        order by insert_time desc
    </select>


    <resultMap id="CoalPileInfoMap" type="org.gxz.znrl.entity.CoalPileInfoEntity">
        <result column="MC_NAME" jdbcType="VARCHAR" property="coalPileName" />
        <result column="KUC_MINE_TYPE" jdbcType="VARCHAR" property="coalType" />
        <result column="KUC_QTY" jdbcType="VARCHAR" property="coalHeapQty" />
        <result column="KUC_HOT" jdbcType="VARCHAR" property="coalHot" />
        <result column="KUC_STAD" jdbcType="VARCHAR" property="coalStad" />
        <result column="KUC_VAD" jdbcType="VARCHAR" property="coalVad" />
        <result column="KUC_PRICE" jdbcType="VARCHAR" property="coalPrice" />
        <result column="MC_CODE" jdbcType="VARCHAR" property="mcCode" />
    </resultMap>

    <!--查询煤场信息（常州）-->
    <select id="qryMcInfo"  parameterType="org.gxz.znrl.entity.CoalPileInfoEntity" resultMap="CoalPileInfoMap">
        SELECT T.MC_NAME,
        T.KUC_MINE_TYPE,
        T.KUC_QTY,
        T.KUC_HOT,
        T.KUC_VAD,
        T.KUC_STAD,
        T.KUC_PRICE
        FROM KC_DAY_INTF T
        where 1=1
        <if test="mcCode != null" >
            and t.MC_CODE = #{mcCode,jdbcType=VARCHAR}
        </if>
        ORDER BY T.MC_CODE
    </select>

    <!--确认上传燃料MIS（衡丰）-->
    <select id="uploadToMis" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.UploadToMisEntity">
        {call PK_SENDTO_MIS.en_uploadToMis(#{jsonStr,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--确认上传燃料MIS（远光MIS 哈平南）-->
    <select id="uploadToMisYg" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.UploadToMisEntity">
        {call PK_SYNC_2_MIS_YG.en_uploadToMis(#{jsonStr,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--新增汽车违规信息-->
    <insert id="addViolateRecord" parameterType="org.gxz.znrl.entity.ViolaEntity" >
        insert into car_viola_rec
        (VIOLA_REC_ID,
        RECORD_NO,
        CARD_ID,
        CAR_ID,
        VIOLA_TYPE,
        VIOLA_LEVEL,
        VIOLA_TIME,
        VIOLA_DESC,
        IS_DEAL,
        OP_CODE,
        OP_DESC,
        DEAL_TIME)
        values
        (SEQ_RLRECORDMSTHY.Nextval,
        #{recordNo,jdbcType=VARCHAR},
        #{cardId,jdbcType=VARCHAR},
        #{carId,jdbcType=VARCHAR},
        #{violaType,jdbcType=VARCHAR},
        #{violaLevel,jdbcType=VARCHAR},
        sysdate,
        #{violaDesc,jdbcType=VARCHAR},
        '0',
        '1',
        '1',
        sysdate)
    </insert>

    <!--蚌埠信息船煤批次-->
    <select id="addNewShipBatch" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.ShipEntity">
        {call PK_SHIP.add_New_Ship_Batch(#{jsonStr,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="operateBatchStatus" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.ShipEntity">
        {call PK_SHIP.operate_Batch_Status(#{jsonStr,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="editSampleResultRec" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.SampleRptEntity">
        {call sample_result_record(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <update id="modifyAllNetQty" parameterType="org.gxz.znrl.entity.ShipEntity" >
        update batch_no_info a
        set a.all_net_qty =  #{allNetQty,jdbcType=VARCHAR},
        a.update_code     = #{opCode,jdbcType=VARCHAR},
        a.update_time     = sysdate,
        a.remark          = a.remark || ' |' ||to_char(sysdate, 'yyyymmddhh24miss')||'工号:'||#{opCode,jdbcType=VARCHAR}||'校验了卸船吨位，'||'校验前:'||a.all_net_qty
        where a.batch_no = #{batchNo,jdbcType=VARCHAR}
    </update>


    <select id="qryAccessControlCnt"  resultType="java.lang.Integer" parameterType="org.gxz.znrl.entity.AccessControlEntity" >
        select count(1)
        from card_user_record a
        where 1=1
        <if test="userId != null" >
            and a.user_id = #{userId,jdbcType=VARCHAR}
        </if>
        <if test="userName != null" >
            and a.user_name = #{userName,jdbcType=VARCHAR}
        </if>
        <if test="useBeginTime != null">
            and a.use_time <![CDATA[>=]]> to_date(#{useBeginTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="useEndTime != null">
            and a.use_time <![CDATA[<=]]> to_date(#{useEndTime,jdbcType=VARCHAR},'YYYY-MM-DD') + 1 - 0.00001
        </if>
    </select>

    <resultMap id="AccessControlListMap" type="org.gxz.znrl.entity.AccessControlEntity">
        <result column="USE_ID" jdbcType="VARCHAR" property="useId" />
        <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
        <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
        <result column="USE_TYPE" jdbcType="VARCHAR" property="useType" />
        <result column="USE_DESC" jdbcType="VARCHAR" property="useDesc" />
        <result column="USE_TIME" jdbcType="VARCHAR" property="useTime" />
        <result column="CARD_ID" jdbcType="VARCHAR" property="cardId" />
    </resultMap>

    <select id="qryAccessControlInfoList" parameterType="org.gxz.znrl.entity.AccessControlEntity"  resultMap="AccessControlListMap" >
        <include refid="paging_top_sql" />
        select t.*, rownum rownumber from (
        select a.USE_ID,
        a.USER_ID,
        a.USER_NAME,
        a.USE_TYPE,
        a.USE_DESC,
        a.USE_TIME,
        a.CARD_ID
        from card_user_record a
        where 1=1
        <if test="userId != null">
            and a.user_id = #{userId,jdbcType=VARCHAR}
        </if>
        <if test="userName != null">
            and a.user_name = #{userName,jdbcType=VARCHAR}
        </if>
        <if test="useBeginTime != null">
            and a.use_time <![CDATA[>=]]> to_date(#{useBeginTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="useEndTime != null">
            and a.use_time <![CDATA[<=]]> to_date(#{useEndTime,jdbcType=VARCHAR},'YYYY-MM-DD') + 1 - 0.00001
        </if>
        order by a .USE_ID desc) t
        <include refid="paging_bottom_sql" />
    </select>

    <select id="qryYG02mmReadyStateAutoToLab"  resultType="java.lang.String">
        select sample_store_id from (
        select sample_store_id from YG_CABINET_INFO yi where yi.SAMPLE_STATUS = '0302' and SAMPLE_TYPE in ('21','61') order by sample_store_id)
        where rownum <![CDATA[<]]>  2
    </select>

    <!--0.2mm待取样的化验样自动取样处理-->
    <select id="packYg02mmAutoToLab" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.YGCabinetEntity">
        {call pk_sample_store.yg_02mm_auto_to_lab(
        #{opType,mode=IN,jdbcType=VARCHAR},
        #{staffId,mode=IN,jdbcType=VARCHAR},
        #{destination,mode=IN,jdbcType=VARCHAR},
        #{opRecId,mode=IN,jdbcType=VARCHAR},
        #{reqXml,mode=OUT,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <resultMap id="SampleDetailListMap" type="org.gxz.znrl.entity.SampleTraceEntity">
        <result column="STEP_ID" jdbcType="VARCHAR" property="stepID" />
        <result column="STEP_NAME" jdbcType="VARCHAR" property="stepName" />
        <result column="STEP_SORT" jdbcType="VARCHAR" property="stepSort" />
        <result column="STEP_IDENTIFIER" jdbcType="VARCHAR" property="stepIDtifier" />
        <result column="KEY_ID_IDENTIFIER" jdbcType="VARCHAR" property="keyIDtifier" />
        <result column="BATCH_NO" jdbcType="VARCHAR" property="batchNo" />
        <result column="SAMPLE_CODE" jdbcType="VARCHAR" property="sampleCode" />
        <result column="SAMPLING_CODE" jdbcType="VARCHAR" property="samplingCode" />
        <result column="LABOR_CODE" jdbcType="VARCHAR" property="laborCode" />
        <result column="PACK_CODE" jdbcType="VARCHAR" property="packCode" />
        <result column="SAMPLE_TYPE" jdbcType="VARCHAR" property="sampleType" />
        <result column="OPER_OBJ" jdbcType="VARCHAR" property="operObj" />
        <result column="OPER_TIME" jdbcType="VARCHAR" property="operTime" />
        <result column="OPER_NAME" jdbcType="VARCHAR" property="operName" />
        <result column="OPER_DESC" jdbcType="VARCHAR" property="operDesc" />
        <result column="INSERT_TIME" jdbcType="VARCHAR" property="insertTime" />
        <result column="DETAIL_LINK" jdbcType="VARCHAR" property="defaultLink" />
        <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    </resultMap>

    <select id="qrySampleDetailList" parameterType="org.gxz.znrl.entity.SampleTraceEntity"  resultMap="SampleDetailListMap" >
        select a.STEP_ID,
        a.STEP_NAME,
        a.STEP_SORT,
        a.STEP_IDENTIFIER,
        a.KEY_ID_IDENTIFIER,
        a.BATCH_NO,
        a.SAMPLE_CODE,
        a.SAMPLING_CODE,
        a.LABOR_CODE,
        a.PACK_CODE,
        a.SAMPLE_TYPE,
        a.OPER_OBJ,
        a.OPER_TIME,
        a.OPER_NAME,
        a.OPER_DESC,
        a.INSERT_TIME,
        a.DETAIL_LINK,
        a.REMARK
        from SAMPLE_TRACE_STEP a
        where 1=1
        <if test="batchNo != null">
            and a.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
        </if>
        <if test="sampleCode != null">
            and a.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>
        <if test="samplingCode != null">
            and a.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>
        <if test="laborCode != null">
            and a.LABOR_CODE = #{laborCode,jdbcType=VARCHAR}
        </if>
        <if test="packCode != null">
            and a.PACK_CODE = #{packCode,jdbcType=VARCHAR}
        </if>
        <if test="operTime != null">
            and trunc(a.OPER_TIME) <![CDATA[=]]> to_date(#{operTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="sampleType != null">
            and a.SAMPLE_TYPE = #{sampleType,jdbcType=VARCHAR}
        </if>
        order by a.STEP_ID asc
    </select>


    <select id="modifyBatchNoInfo" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.SamplingRptEntity">
        {call pk_ship.calculate_rl_weight(#{batchNo,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="editBatchWeightInfo" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.SampleRptEntity">
        {call edit_batch_weight(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>


    <select id="qryManualCarBatchCnt" parameterType="org.gxz.znrl.entity.BatchNoInfoEntity" resultType="java.lang.Integer" >
        select count(1)
        from batch_no_info c
        where 1 = 1
        and c.batch_no_type = '0'
        <if test="sampleCode != null" >
            and c.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="venNo != null">
            and c.ven_no =  #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null">
            and c.mine_no =  #{mineNo,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null" >
            and c.insert_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="endTime != null" >
            and c.insert_time <![CDATA[ < ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1-0.00001
        </if>
    </select>

    <select id="qryManualCarBatchList" parameterType="org.gxz.znrl.entity.BatchNoInfoEntity" resultMap="BatchNoInfoResultMap">
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
        from (select c.batch_no,
        c.sample_code,

        (select realname
        from security_user
        where id  = c.op_code) user_code,

        (select bb.coal_name
        from coal_type bb
        where bb.coal_no = c.coal_no) as coal_name,

        (select bb.ven_name
        from vendor_info bb
        where bb.ven_no = c.ven_no) as ven_name,

        (select bb.mine_name
        from coal_mine bb
        where bb.mine_no = c.mine_no) as mine_name,

        (select aa.realname
        from security_user aa
        where aa.id = c.op_code) as op_code,

        ((select sum(net_qty)
        from rlrecordmstqy cc
        where cc.car_batch_no = c.batch_no)/1000) as real_batch_qty,

        ((select sum(mz_qty)
        from rlrecordmstqy cc
        where cc.car_batch_no = c.batch_no)) as mz_qty,

        c.all_net_qty this_batch_qty,
        c.car_num,
        c.insert_time batch_time,
        c.remark
        from batch_no_info c
        where 1 = 1
        and c.batch_no_type = '0'
        <if test="sampleCode != null" >
            and c.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="venNo != null">
            and c.ven_no =  #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null">
            and c.mine_no =  #{mineNo,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null" >
            and c.insert_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="endTime != null" >
            and c.insert_time <![CDATA[ < ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1-0.00001
        </if>
        order by c.insert_time desc) t
        <include refid="paging_bottom_sql"/>
    </select>

    <select id="manualCarBatchInfo" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.BatchNoInfoEntity">
        {call pk_register.manual_car_batchInfo(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--新增锁车信息（给织金使用）-->
    <select id="addLockCarRecord" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.CarLockInfoEntity">
        {call PK_CAR_SCHEDULE.carLockRecord(#{jsonStr,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <resultMap id="CarLockInfoMap" type="org.gxz.znrl.entity.CarLockInfoEntity">
        <result column="LOCK_REC_ID" jdbcType="VARCHAR" property="lockRecId" />
        <result column="REC_ID" jdbcType="VARCHAR" property="recId" />
        <result column="STATUS" jdbcType="VARCHAR" property="status" />
        <result column="EFF_TIME" jdbcType="VARCHAR" property="effTime" />
        <result column="EXP_TIME" jdbcType="VARCHAR" property="expTime" />
        <result column="REASON" jdbcType="VARCHAR" property="reason" />
        <result column="REMARK" jdbcType="VARCHAR" property="remark" />
        <result column="OP_CODE" jdbcType="VARCHAR" property="opCode" />
        <result column="UPDATE_CODE" jdbcType="VARCHAR" property="updateCode" />
        <result column="INSERT_TIME" jdbcType="VARCHAR" property="insertTime" />
        <result column="UPDATE_TIME" jdbcType="VARCHAR" property="updateTime" />
        <result column="CAR_ID" jdbcType="VARCHAR" property="carId" />
        <result column="PRE_KD_FLAG" jdbcType="VARCHAR" property="preKdFlag" />
        <result column="PRE_KD_QTY" jdbcType="VARCHAR" property="preKdQty" />
    </resultMap>

    <!--查询锁车信息（给织金使用）-->
    <select id="qryLockCarList" parameterType="org.gxz.znrl.entity.CarLockInfoEntity" resultMap="CarLockInfoMap" >
        select a.lock_rec_id,
        a.rec_id,
        decode(a.status,'0','已生效','1','已失效') status,
        pre_kd_flag,
        pre_kd_qty,
        a.eff_time,
        a.exp_time,
        a.reason,
        a.remark,
        (select realname from security_user where id = to_number(a.op_code)) op_code,
        (select realname from security_user where id = to_number(a.update_code)) update_code,
        a.insert_time,
        a.update_time,
        a.car_id
        from car_lock_rec a
        where 1 = 1
        <if test="carId != null">
            and a.car_id = #{carId,jdbcType=VARCHAR}
        </if>
        <if test="beginTime != null" >
            and a.insert_time <![CDATA[ >= ]]> to_date(#{beginTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="endTime != null" >
            and a.insert_time <![CDATA[ < ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1-0.00001
        </if>
        <if test="status != null">
            and a.status = #{status,jdbcType=VARCHAR}
        </if>
        order by a.insert_time desc
    </select>


    <select id="submitCabinetDelay" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.CabinetEntity">
        {call pk_sample_store.submit_cabinet_delay(#{jsonStr,mode=IN,jdbcType=VARCHAR},
        #{remark,mode=IN,jdbcType=VARCHAR},
        #{delayDays,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="unableCarRegInfo" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.CarInfoEntity">
        {call pk_car_schedule.deleteCarRegInfo(#{recId,mode=IN,jdbcType=VARCHAR},
        #{lstUsrId,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="massSaveErrInfo" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.DeviceErrEntity">
        {call confirmErrorInfo(#{jsonStr,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="qryPwdByUserName" parameterType="java.lang.String" resultType="java.lang.String" >
        select nvl(sm.password,'')  from security_user_plaintext sm where sm.username =  #{userName,jdbcType=VARCHAR} and rownum <![CDATA[ < ]]>  2
    </select>

    <select id="editSampleReport" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.SampleRptEntity">
        {call pro_editSampleReport(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="editSamplingReport" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.SamplingRptEntity">
        {call pro_editSamplingReport(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>


    <insert id="saveBeltWeightInfo" parameterType="org.gxz.znrl.entity.BeltWeightEntity">
        INSERT INTO RLPDCZMST(PD_NO,HH_ID,CUR_DTM,VALUE_TYPE,JZ_QTY,DATA_STATUS,INSERT_TIME,OP_CODE)
        VALUES(seq_rlpdczmst.nextval ,#{hhId,jdbcType=VARCHAR},sysdate,#{valueType,jdbcType=VARCHAR},to_number(#{jzQty,jdbcType=VARCHAR}),'0',sysdate,'NEPT_CM')
    </insert>

    <resultMap id="BeltRecordMap" type="org.gxz.znrl.entity.BeltWeightEntity">
        <result column="PD_NO" jdbcType="VARCHAR" property="pdNo" />
        <result column="HH_ID" jdbcType="VARCHAR" property="hhId" />
        <result column="CUR_DTM" jdbcType="VARCHAR" property="curDtm" />
        <result column="VALUE_TYPE" jdbcType="VARCHAR" property="valueType" />
        <result column="JZ_QTY" jdbcType="VARCHAR" property="jzQty" />
        <result column="INSERT_TIME" jdbcType="VARCHAR" property="insertTime" />
        <result column="UPDATE_TIME" jdbcType="VARCHAR" property="updateTime" />
        <result column="UPDATE_CODE" jdbcType="VARCHAR" property="updateCode" />
    </resultMap>

    <select id="qryBeltWeightRecordCnt" parameterType="org.gxz.znrl.entity.BeltWeightEntity" resultType="java.lang.Integer" >
        select count(1)
        from rlpdczmst c
        where 1 = 1
        <if test="hhId != null" >
            and c.HH_ID = #{hhId,jdbcType=VARCHAR}
        </if>

        <if test="beginTime != null" >
            and c.insert_time <![CDATA[ >= ]]> to_date(#{beginTime,jdbcType=VARCHAR},'YYYY-MM-DD hh24:mi:ss')
        </if>

        <if test="endTime != null" >
            and c.insert_time <![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD hh24:mi:ss')+1-0.00001
        </if>
    </select>

    <select id="qryBeltWeightRec" parameterType="org.gxz.znrl.entity.BeltWeightEntity" resultMap="BeltRecordMap" >
        <include refid="paging_top_sql"/>
        select q.*,rownum rownumber from
        (select a.PD_NO,
        decode(a.HH_ID,'DC1RC102','109皮带','DC1RL102','306A皮带','DC1RL202','306B皮带','DC2RL102','406A皮带','DC2RL202','406B皮带') HH_ID,
        decode(a.VALUE_TYPE,'1','班组累计','2','瞬时值','3','总累计值') VALUE_TYPE,
        a.JZ_QTY,
        a.INSERT_TIME            from rlpdczmst a

        where 1 = 1
        <if test="hhId != null" >
            and a.HH_ID = #{hhId,jdbcType=VARCHAR}
        </if>

        <if test="beginTime != null" >
            and a.insert_time <![CDATA[ >= ]]> to_date(#{beginTime,jdbcType=VARCHAR},'YYYY-MM-DD hh24:mi:ss')
        </if>

        <if test="endTime != null" >
            and a.insert_time <![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD  hh24:mi:ss')+1-0.00001
        </if>
        order by a.insert_time asc) q
        <include refid="paging_bottom_sql"/>
    </select>

    <!--九江-船运皮带秤批次计量 结果集
   liuzh 2020-02-12-->
    <resultMap id="shipBatchQtyMap" type="org.gxz.znrl.entity.ShipBatchQtyEntity">
        <result column="WEIGHT_REC_ID" jdbcType="BIGINT" property="weightRecId" />
        <result column="BATCH_NO" jdbcType="VARCHAR" property="batchNo" />
        <result column="SAMPLE_CODE" jdbcType="VARCHAR" property="sampleCode" />
        <result column="PLAN_WEIGHT" jdbcType="DECIMAL" property="planWeight" />
        <result column="BELT_NO" jdbcType="VARCHAR" property="beltNo" />
        <result column="BEGIN_WEIGHT" jdbcType="DECIMAL" property="beginWeight" />
        <result column="BEGIN_TIME" jdbcType="TIMESTAMP" property="beginTime" />
        <result column="END_WEIGHT" jdbcType="DECIMAL" property="endWeight" />
        <result column="END_TIME" jdbcType="TIMESTAMP" property="endTime" />
        <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    </resultMap>
    <!--九江-船运皮带秤批次计量 信息计数查询
    liuzh 2020-02-12-->
    <select id="qryShipBatchQtyInfoCnt" parameterType="org.gxz.znrl.entity.ShipBatchQtyEntity" resultType="java.lang.Integer" >
        select count(1)
        from SHIP_BATCH_QTY sbq
        where 1 = 1
        <if test="weightRecId != null" >
            and sbq.WEIGHT_REC_ID = #{weightRecId,jdbcType=BIGINT}
        </if>

        <if test="batchNo != null" >
            and sbq.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null" >
            and sbq.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="beltNo != null" >
            and sbq.BELT_NO = #{beltNo,jdbcType=VARCHAR}
        </if>

        <if test="beginTime != null" >
            and sbq.BEGIN_TIME <![CDATA[ >= ]]> #{beginTime,jdbcType=TIMESTAMP}
        </if>

        <if test="endTime != null" >
            and sbq.END_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=TIMESTAMP}+1-0.00001
        </if>
    </select>
    <!--九江-船运皮带秤批次计量 信息查询
    liuzh 2020-02-12-->
    <select id="qryShipBatchQtyInfo" parameterType="org.gxz.znrl.entity.ShipBatchQtyEntity" resultMap="shipBatchQtyMap" >
        <include refid="paging_top_sql"/>
            select sbq.*, rownum rownumber
            from SHIP_BATCH_QTY sbq
            where 1 = 1
            <if test="weightRecId != null" >
                and sbq.WEIGHT_REC_ID = #{weightRecId,jdbcType=BIGINT}
            </if>

            <if test="batchNo != null" >
                and sbq.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
            </if>

            <if test="sampleCode != null" >
                and sbq.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
            </if>

            <if test="beltNo != null" >
                and sbq.BELT_NO = #{beltNo,jdbcType=VARCHAR}
            </if>

            <if test="beginTime != null" >
                and sbq.BEGIN_TIME <![CDATA[ >= ]]> #{beginTime,jdbcType=TIMESTAMP}
            </if>

            <if test="endTime != null" >
                and sbq.END_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=TIMESTAMP}+1-0.00001
            </if>
        <include refid="paging_bottom_sql"/>
    </select>

    <select id="qryBeltWeightRec4Qz" parameterType="org.gxz.znrl.entity.BeltWeightEntity" resultMap="BeltRecordMap" >
        select  a.PD_NO,
        getBeltWeightName(a.HH_ID) HH_ID,
        decode(a.VALUE_TYPE,'1','班组累计','2','瞬时值','3','总累计值') VALUE_TYPE,
        a.JZ_QTY,
        a.INSERT_TIME
        from rlpdczmst a
        where 1 = 1
        <if test="hhId != null" >
            and a.HH_ID = #{hhId,jdbcType=VARCHAR}
        </if>
        <if test="beginTime != null" >
            and a.insert_time <![CDATA[ >= ]]> to_date(#{beginTime,jdbcType=VARCHAR},'YYYY-MM-DD hh24:mi:ss')
        </if>
        <if test="endTime != null" >
            and a.insert_time <![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD  hh24:mi:ss')+1-0.00001
        </if>
        order by a.insert_time asc
    </select>

    <!--大开汽车来煤记录明细查询-->
    <select id="qryCarTransRecordList4DK" parameterType="org.gxz.znrl.entity.CarTransRecordEntity"  resultMap="CarTransRecordResultMap" >
        <include refid="paging_top_sql" />
        select
        a.record_no,
        a.batch_no car_batch_no,
        a.gh_index,
        b.car_id,
        a.ven_no,
        a.ven_name  ven_nam,
        a.coal_no,
        a.coal_name coal_nam,
        a.mine_no colry_no,
        a.mine_name colry_nam,
        a.carrier_no,
        a.carrier_name carrier_nam,
        a.start_place,
        (select dt.name from dictionary_table dt where dt.type = 'START_RAIL_STATION' and dt.id = a.start_place) start_name,
        a.final_place,
        (select dt.name from dictionary_table dt where dt.type = 'RAIL_STATION' and dt.id = a.final_place) final_name,
        to_char(a.insert_time,'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.weight_time,'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        remark,
        a.mz_qty,
        a.pz_qty,
        a.jz_qty net_qty,
        a.kd_qty,
        a.tick_qty,
        a.action_tag,
        decode (a.read_tag,'0','未分批','1','已分批','') read_tag,
        a.attach_batch_no,
        rownum rownumber
        from COAL_WEIGHT_INTF_MID a, RLCARMST b
        where a.car_id = b.car_id
        and b.valid_sta = '1'
        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>
        <if test="beginDate != null" >
            and a.WEIGHT_TIME <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd hh24:mi:ss')
        </if>
        <if test="endDate != null" >
            and a.WEIGHT_TIME <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd hh24:mi:ss')
        </if>
        <if test="mineNo != null" >
            and a.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>

        <if test="readTag != null" >
            and a.read_tag = #{readTag,jdbcType=VARCHAR}
        </if>
        <if test="batchNo != null" >
            and a.batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>
        order by a.batch_no desc, a.WEIGHT_TIME asc
        <include refid="paging_bottom_sql" />
    </select>

    <!--大开汽车来煤记录明细查询-->
    <select id="qryCarTransRecordListCnt4DK"    parameterType="org.gxz.znrl.entity.CarTransRecordEntity" resultType="java.lang.Integer" >
        select count(1)
        from COAL_WEIGHT_INTF_MID a, RLCARMST b
        where a.car_id = b.car_id
        and b.valid_sta = '1'

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="readTag != null" >
            and a.read_tag = #{readTag,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.WEIGHT_TIME <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd hh24:mi:ss')
        </if>

        <if test="endDate != null" >
            and a.WEIGHT_TIME <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd hh24:mi:ss')
        </if>
    </select>

    <select id="doBatch" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.CarTransRecordEntity">
        {call pk_register.doBatch(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>


    <select id="qryManInfo4LC" parameterType="org.gxz.znrl.entity.ManualSampleEntity" resultMap="ManSampleInfoResultMap" >
        select t.batch_no,
        t.train_no,
        t.sample_code,
        t.labor_code,
        t.man_sample_code,
        t.sampling_code,
        t.batch_no_type,
        (select getBatchCarIds(t.batch_no,t.batch_no_type) from dual) as  car_nos,
        getBatchInfo(t.batch_no, '2',t.batch_no_type) car_order_nos,
        t.insert_time,
        t.print_Num
        from batch_no_info t
        where 1 = 1

        <if test="batchNo != null" >
            and t.batch_no  = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNoType != null" >
            and t.batch_no_type  = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and t.insert_time <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and t.insert_time <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>

        <if test="sampleCode != null" >
            and t.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null" >
            and t.sampling_code = #{samplingCode,jdbcType=VARCHAR}
        </if>

        <if test="packCode != null" >
            and t.sampling_code = get_sampling_code_by_packcd(#{packCode,jdbcType=VARCHAR})
        </if>
        order by t.insert_time desc
    </select>


    <update id="addPrintNum" parameterType="org.gxz.znrl.entity.ManualSampleEntity" >
        update batch_no_info a
        set a.print_num = nvl(print_num,0) + 1
        where a.labor_code = #{laborCode,jdbcType=VARCHAR}
    </update>


    <select id="qryCabinetInfoList4LC" parameterType="org.gxz.znrl.entity.CabinetEntity"  resultMap="CabinetInfoResultMap" >
        select cabinet_rec_id,
        gg_name,
        cc_name,
        ww_name,
        get_batch_no_by_packcd(a.pack_code) batch_no,
        get_arguement_by_packcd(a.pack_code) arguementFlag,
        'img'||lpad(substr(a.cc_name,2),2,'0')||lpad(a.ww_name,2,'0') id_name,
        is_enabled,
        decode(is_enabled, '1','可用','0','不可用') is_enabled_name,
        to_char(deposit_time, 'yyyy-mm-dd hh24:mi:ss') deposit_time,
        to_char(make_sample_time, 'yyyy-mm-dd hh24:mi:ss') make_sample_time,
        sample_type,
        decode(sample_type, '61','6mm全水样',
        '62','6mm存查样',
        '31','3mm化验样',
        '32','3mm存查样',
        '21','0.2mm化验样',
        '22','0.2mm存查样', '') sample_type_name,

        decode(a.sample_type, '61','6mm备查样1',
        '62','6mm备查样2',
        '63','6mm备查样3',
        '31','3mm备查样',
        '21','0.2mm化验样',
        '22','0.2mm存查样', '') sample_type_name_bl,
        pack_code,
        sample_status,
        decode(sample_status, '1','正常瓶','2','超期瓶','3','无效瓶','4','无瓶') sample_status_name,
        to_char(insert_time, 'yyyy-mm-dd hh24:mi:ss') insert_time,
        op_code,
        (select realname from security_user where id = to_number(a.op_code)) op_name,
        to_char(update_time, 'yyyy-mm-dd hh24:mi:ss') update_time,
        update_code,
        (select realname from security_user where id = to_number(a.update_code)) update_name,
        (select b.delay_num from cabinet_info_ext b where b.pack_code = a.pack_code) delay_num
        from cabinet_info a
        where 1=1
        <if test="ggName != null" >
            and a.gg_name = #{ggName,jdbcType=VARCHAR}
        </if>
        <if test="ccLikeName != null" >
            and a.cc_name like #{ccLikeName,jdbcType=VARCHAR}
        </if>
        <if test="ccName != null" >
            and a.cc_name = #{ccName,jdbcType=VARCHAR}
        </if>
        <if test="wwName != null" >
            and a.ww_name = #{wwName,jdbcType=VARCHAR}
        </if>
        <if test="sampleStatus != null" >
            and a.sample_status in (#{sampleStatus,jdbcType=VARCHAR}, '3')
        </if>
        <if test="apprEventId != null" >
            and a.cabinet_rec_id in (select to_number(rb.param4) from appr_req_data_buffer rb where rb.param1 = #{apprEventId,jdbcType=VARCHAR})
        </if>
        <if test="sampleType != null" >
            and a.sample_type = #{sampleType,jdbcType=VARCHAR}
        </if>
        <if test="depositStartTime != null">
            <![CDATA[
                     and A.deposit_time >= to_date(#{depositStartTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                     ]]>
        </if>
        <if test="depositEndTime != null">
            <![CDATA[
                     and A.deposit_time <= to_date(#{depositEndTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                     ]]>
        </if>
        <if test="batchNo != null or laborCode != null or venNo != null">
            AND A.PACK_CODE in (SELECT D.PACK_CODE
            FROM BATCH_NO_INFO C, prepar_sampling_rec D
            WHERE 1 = 1
            AND C.SAMPLING_CODE = D.SAMPLING_CODE
            <if test="laborCode != null">
                AND C.LABOR_CODE = #{laborCode,jdbcType=VARCHAR}
            </if>
            <if test="batchNo != null">
                AND C.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
            </if>
            <if test="venNo != null">
                AND C.VEN_NO = #{venNo,jdbcType=VARCHAR}
            </if>
            )
        </if>
        order by get_batch_no_by_packcd(a.pack_code) desc
    </select>

    <select id="manualControlBeltWeight" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.ShipEntity">
        {call pk_ship.dealBeltShipWeight(#{jsonStr,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--新增汽车信息 用于存储过程 以便记录日志 xxs20180527-->
    <select id="addCarInfoNew" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.CarInfoEntity">
        {call pk_register.p_add_car_cardInfo(#{jsonString,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="autoTakeSample4XW" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.ApproveEntity">
        {call pk_sample_store.randomTakeSampleCommand(#{jsonStr,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <resultMap id="ApproveResultMap" type="org.gxz.znrl.entity.ApproveEntity">
        <result column="approve_id" jdbcType="VARCHAR" property="apprId" />
        <result column="event_id" jdbcType="VARCHAR" property="eventId" />
        <result column="approve_event_id" jdbcType="VARCHAR" property="apprEventId" />
        <result column="approver" jdbcType="VARCHAR" property="approver" />
        <result column="appr_order" jdbcType="VARCHAR" property="apprOrder" />
        <result column="appr_event_tag" jdbcType="VARCHAR" property="apprEventTag" />
        <result column="appr_event_type_name" jdbcType="VARCHAR" property="apprEventTypeName" />
        <result column="appr_event_type_cd" jdbcType="VARCHAR" property="apprEventTypeCd" />
        <result column="is_approved" jdbcType="VARCHAR" property="isArroved" />
        <result column="is_ok" jdbcType="VARCHAR" property="isOk" />
        <result column="approve_req_dt" jdbcType="VARCHAR" property="apprReqDt" />
        <result column="realname" jdbcType="VARCHAR" property="apprInitiatorName" />
        <result column="approved_dt" jdbcType="VARCHAR" property="apprDt" />
        <result column="approve_desc" jdbcType="VARCHAR" property="apprDesc" />
        <result column="appr_event_desc" jdbcType="VARCHAR" property="apprContent" />
        <result column="param2" jdbcType="VARCHAR" property="param2" />
        <result column="param3" jdbcType="VARCHAR" property="param3" />
        <result column="param4" jdbcType="VARCHAR" property="param4" />
        <result column="param5" jdbcType="VARCHAR" property="param5" />
        <result column="param6" jdbcType="VARCHAR" property="param6" />
        <result column="param7" jdbcType="VARCHAR" property="param7" />
        <result column="param19" jdbcType="VARCHAR" property="param19" />
        <result column="param20" jdbcType="VARCHAR" property="param20" />
        <result column="user_id" jdbcType="VARCHAR" property="userId" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="user_real_name" jdbcType="VARCHAR" property="userRealName" />
        <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
        <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    </resultMap>

    <select id="qrySysUserApprList" parameterType="org.gxz.znrl.entity.ApproveEntity" resultMap="ApproveResultMap">
        select a.id user_id, a.username user_name, a.realname user_real_name, b.password user_password, d.description role_name
        from security_user a, security_user_plaintext b, security_user_role c, security_role d, dictionary_table t
        where a.id = b.id and a.id=c.user_id and c.role_id=d.id and t.type='SYSUSER'
        and a.id = t.id
        <if test="userId != null" >
            and a.id = #{userId,jdbcType=VARCHAR}
        </if>
        order by a.id asc
    </select>

    <select id="addPrintRec" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.ManualSampleEntity">
        {call pk_register.addPrintRec(#{printCode,mode=IN,jdbcType=VARCHAR},
        #{printType,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="qryManInfoPackCode" parameterType="org.gxz.znrl.entity.ManualSampleEntity" resultMap="ManSampleInfoResultMap" >
        select t.batch_no,
        t.train_no,
        t.sample_code,
        t.labor_code,
        t.man_sample_code,
        t.sampling_code,
        t.batch_no_type,
        (select getBatchCarIds(t.batch_no,t.batch_no_type) from dual) as  car_nos,
        getBatchInfo(t.batch_no, '2',t.batch_no_type) car_order_nos,
        t.insert_time,
        s.pack_code,
        (select count(1) from batch_print_rec c where c.print_code = s.pack_code) print_num_pack,
        getPrintInfo(s.pack_code, 'opName') print_opname_pack,
        getPrintInfo(s.pack_code, 'opTime') print_optime_pack
        from batch_no_info t, prepar_sampling_rec s
        where 1 = 1
        and s.sampling_code=t.sampling_code

        <if test="batchNo != null" >
            and t.batch_no  = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNoType != null" >
            and t.batch_no_type  = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and t.insert_time <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and t.insert_time <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>

        <if test="sampleCode != null" >
            and t.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null" >
            and t.sampling_code = #{samplingCode,jdbcType=VARCHAR}
        </if>

        <if test="packCode != null" >
            and t.sampling_code = get_sampling_code_by_packcd(#{packCode,jdbcType=VARCHAR})
        </if>
        order by t.insert_time desc
    </select>

    <select id="qryManInfo4XW" parameterType="org.gxz.znrl.entity.ManualSampleEntity" resultMap="ManSampleInfoResultMap" >
        select t.batch_no,
        t.train_no,
        t.sample_code,
        t.labor_code,
        t.man_sample_code,
        t.sampling_code,
        t.batch_no_type,
        (select getBatchCarIds(t.batch_no,t.batch_no_type) from dual) as  car_nos,
        getBatchInfo(t.batch_no, '2',t.batch_no_type) car_order_nos,
        t.insert_time,
        (select count(1) from batch_print_rec c where c.print_code = t.sample_code) print_num_sample,
        (select count(1) from batch_print_rec c where c.print_code = t.sampling_code) print_num_sampling,
        (select count(1) from batch_print_rec c where c.print_code = t.labor_code) print_num_labor,
        getPrintInfo(t.sample_code, 'opName') print_opname_sample,
        getPrintInfo(t.sample_code, 'opTime') print_optime_sample,
        getPrintInfo(t.sampling_code, 'opName') print_opname_sampling,
        getPrintInfo(t.sampling_code, 'opTime') print_optime_sampling,
        getPrintInfo(t.labor_code, 'opName') print_opname_labor,
        getPrintInfo(t.labor_code, 'opTime') print_optime_labor
        from batch_no_info t
        where 1 = 1

        <if test="batchNo != null" >
            and t.batch_no  = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNoType != null" >
            and t.batch_no_type  = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and t.insert_time <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and t.insert_time <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1
        </if>

        <if test="sampleCode != null" >
            and t.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null" >
            and t.sampling_code = #{samplingCode,jdbcType=VARCHAR}
        </if>

        <if test="packCode != null" >
            and t.sampling_code = get_sampling_code_by_packcd(#{packCode,jdbcType=VARCHAR})
        </if>
        order by t.insert_time desc
    </select>

    <select id="qryCarBasicList" parameterType="org.gxz.znrl.entity.CarTransRecordEntity" resultMap="CarTransRecordResultMap" >
        select a.batch_no car_batch_no,
        a.sample_code,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_nam,
        (select mine_name from coal_mine where mine_no = a.mine_no) colry_nam,
        (select ven_name from vendor_info where ven_no = a.ven_no) ven_nam,
        a.coal_no,
        a.mine_no colry_no,
        a.ven_no,

        case
        when a.batch_no_type = '0' then
        ((select sum(bb.mz_qty)
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '1' then
        ((select sum(bb.mz_qty)
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code) / 1000)
        end total_mz_qty,

        case
        when a.batch_no_type = '0' then
        ((select sum(bb.pz_qty)
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '1' then
        ((select sum(bb.pz_qty)
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code) / 1000)
        end total_pz_qty,

        case
        when a.batch_no_type = '0' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '1' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code) / 1000)
        end total_net_qty,

        case
        when a.batch_no_type = '0' then
        ((select sum(bb.kd_qty)
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '1' then
        ((select sum(bb.kd_qty)
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code) / 1000)
        end total_kd_qty,

        case
        when a.batch_no_type = '0' then
        ((select sum(bb.tick_qty)
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '1' then
        ((select sum(bb.tick_qty)
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code) / 1000)
        end total_tick_qty,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        end total_entry_cnt,

        a.insert_time record_dtm
        from batch_no_info a
        where 1 = 1
        and exists (select 1 from rlrecordmstqy b where b.car_batch_no=a.batch_no)
        <if test="batchNoType != null">
            AND A.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null">
            <![CDATA[
                 and A.INSERT_TIME >= to_date(#{beginDate,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>
        <if test="endDate != null">
            <![CDATA[
                 and A.INSERT_TIME < to_date(#{endDate,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>
        order by A.insert_time desc

    </select>

    <!--合并汽车批次-->
    <select id="mergeCarBatchs" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.CarTransRecordEntity">
        {call pk_register.merge_car_batchs(#{updateString,mode=IN,jdbcType=VARCHAR},
        #{publicString,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--查询火车重量修改记录  聊城-->
    <select id="qryOneTrainHisList" parameterType="org.gxz.znrl.entity.RegisterEntity" resultMap="TrainDetailListResultMap" >
        select a.record_no,
        '' old_CarId,
        a.train_no,
        a.car_id,
        a.xh_num,
        a.sample_typ,
        a.sample_code,
        (select bb.sample_code from batch_no_info bb where bb.batch_no = a.attach_batch_no) man_check_sample,
        decode(a.sample_typ, '0','皮带采样','1','皮带大水分旁路','2','人工采样','3','车厢采样','4','车厢大水分旁路') sample_typ_name,
        a.empty_flg,
        decode(a.empty_flg, '0','是','1','否') empty_flg_name,
        a.contract_no,
        (select contract_name from contract_info where contract_no = a.contract_no) contract_name,
        a.colry_no,
        (select mine_name from COAL_MINE where mine_no = a.colry_no) mine_name,
        a.coal_no,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
        a.ven_no,
        (select for_short from VENDOR_INFO where ven_no = a.ven_no) ven_name,
        to_char(trunc(a.leave_dtm), 'yyyy-mm-dd')  leave_dtm,
        to_char(a.record_dtm, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.cz_dtm, 'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        a.tick_qty/1000  tick_qty,
        a.mz_qty/1000  mz_qty,
        a.pz_qty/1000  pz_qty,
        a.net_qty/1000  net_qty,
        a.yd_qty/1000  yd_qty,
        a.loss_qty/1000  loss_qty,
        decode(substr(a.car_typ, 3,2),'70','70','64','61','62','60') bz_qty,
        to_char(a.xm_dtm, 'yyyy-mm-dd hh24:mi:ss') xm_dtm,
        a.train_batch_no,
        a.attach_batch_no,
        a.track_no,
        a.car_typ,
        a.cfm_flg,
        a.car_spd speed,
        a.start_place,
        a.final_place,
        (select dt.name from dictionary_table dt where dt.type = 'START_RAIL_STATION' and dt.id = a.start_place) start_place_name,
        (select dt.name from dictionary_table dt where dt.type = 'FINAL_RAIL_STATION' and dt.id = a.final_place) final_place_name,
        to_char(a.aim_time, 'yyyy-mm-dd hh24:mi:ss') aim_time,
        a.remark,
        a.balance_no,
        nvl(a.weight_op_name,'') update_name,
        to_char(a.update_time, 'yyyy-mm-dd hh24:mi:ss') update_time
        from RLRECORDMSTHY_his a
        where 1 = 1
        <if test="trainNo != null" >
            and a.train_no = #{trainNo,jdbcType=VARCHAR}
        </if>

        <if test="attachBatchNo != null" >
            and a.attach_batch_no is not null
        </if>

        <if test="batchNo != null" >
            and a.train_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>
        <if test="recordNo != null" >
            and a.record_no = #{recordNo,jdbcType=VARCHAR}
        </if>
        <if test="netQty != null" >
            and a.net_qty is not null
        </if>
        order by a.log_date
    </select>

    <!--乐东-->
    <select id="qryShipCargoInfo4LD" parameterType="org.gxz.znrl.entity.ShipEntity" resultMap="ShipTransInfoResultMap" >
        select a.record_no,
        a.ship_rec_id,
        (select t.contract_name from contract_info t where t.contract_no = a.ship_rec_id ) contract_name,
        a.ven_no,
        (select v.ven_name from vendor_info v where v.ven_no = a.ven_no) ven_name,
        a.mine_no,
        (select cm.mine_name from coal_mine cm where cm.mine_no = a.mine_no) mine_name,
        a.coal_no,
        (select ct.coal_name from coal_type ct where ct.coal_no = a.coal_no) coal_name,
        a.carrier_no,
        (select ci.carrier_name from carrier_info ci where ci.carrier_no = a.carrier_no) carrier_name,
        a.cabin_nos,
        a.tick_qty,
        a.depart_qty,
        a.arrive_qty,
        get_ship_receive_qty(a.ship_rec_id) receive_qty,
        a.loss_type,
        decode(a.loss_type, '0','无损','1','水分','2','矸石','3','自燃','4','其它') loss_type_name,
        a.kd_qty,
        a.sample_type,
        decode(a.sample_type, '0','皮带采样','1','皮带大水分旁路','2','人工采样','3','车厢采样','4','车厢大水分旁路') sample_type_name,
        pk_ship.isBatch(a.ship_rec_id) is_batch,
        decode(pk_ship.isBatch(a.ship_rec_id), 'Y','已分批','N','未分批') is_batch_name,
        to_char(a.insert_time, 'yyyy-mm-dd hh24:mi:ss') fact_time,
        a.remark
        from ship_cargo_record a
        where 1 = 1
        and a.rec_status = '1'

        <if test="recordNo != null" >
            and a.record_no = #{recordNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null" >
            and a.record_no in (select * from table(fn_split((select car_ids from batch_no_info a where a.sample_code =#{sampleCode,jdbcType=VARCHAR}), ',')))
        </if>

        <if test="shipRecID != null" >
            and a.ship_rec_id = #{shipRecID,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.insert_time <![CDATA[  >=  ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endDate != null" >
            and a.insert_time <![CDATA[  <  ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>
        order by a.record_no desc
    </select>


    <select id="dealEmergencyWarn" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.DeviceBroadEntity">
        {call deal_emergency_warn(#{errorRecId,mode=IN,jdbcType=VARCHAR},
        #{opCode,mode=IN,jdbcType=VARCHAR},
        #{resCode,mode=OUT,jdbcType=VARCHAR},
        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

</mapper>