<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.gxz.znrl.mapper.RptMapper">

    <!--分页sql语句的公共部分,供其他需分页sql语句引用-->
    <sql id="paging_top_sql">
    select * from (
  </sql>
    <sql id="paging_bottom_sql">
    ) t where t.rownumber between #{beginRowIndex,jdbcType=INTEGER} and #{endRowIndex,jdbcType=INTEGER}
  </sql>

    <select id="qryWeightRptListSumCnt" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer" >
        select count(1) from (
        select
        (select vi.ven_name from VENDOR_INFO vi where vi.ven_no = a.ven_no) ven_nam,
        (select ct.coal_name from COAL_TYPE ct where ct.coal_no = a.coal_no) coal_nam,
        to_char(a.record_dtm, 'yyyy-mm-dd') record_dtm,
        to_char(sum(a.mz_qty)/1000) mz_qty,
        to_char(sum(a.pz_qty)/1000) pz_qty,
        to_char(sum(a.net_qty)/1000) net_qty,
        to_char(sum(a.tick_qty)/1000) tick_qty,
        count(a.ven_no) car_count
        from RLRECORDMSTQY a
        where 1 = 1
        <if test=" beginTime != '' and beginTime != null " >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test=" endTime != '' and endTime !=null" >
            <![CDATA[
             and a.ven_no = #{venNo,jdbcType=VARCHAR}
             ]]>
        </if>


        group by ven_no,record_dtm,coal_no
        <if test=" venNo != '' and venNo != null" >
            <![CDATA[
            having a.ven_no = #{venNo,jdbcType=VARCHAR}
             ]]>
        </if>
        order by record_dtm asc)
    </select>


    <!--查询总和清单-->
    <select id="qryWeightRptSumList" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultMap="weightRptResultMap" >
        <include refid="paging_top_sql" />
        SELECT temp.*, ROWNUM rownumber
        FROM (  select
        (select vi.ven_name from VENDOR_INFO vi where vi.ven_no = a.ven_no) ven_nam,
        (select ct.coal_name from COAL_TYPE ct where ct.coal_no = a.coal_no) coal_nam,
        to_char(a.record_dtm, 'yyyy-mm-dd') record_dtm,
        to_char(sum(a.mz_qty)/1000) mz_qty,
        to_char(sum(a.pz_qty)/1000) pz_qty,
        to_char(sum(a.net_qty)/1000) net_qty,
        to_char(sum(a.tick_qty)/1000) tick_qty,
        count(a.ven_no) car_count
        from RLRECORDMSTQY a
        where 1 = 1

        <if test=" beginTime != '' and beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>
        <if test=" endTime != '' and endTime != null " >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        group by ven_no,record_dtm,coal_no
        <if test=" venNo != '' and venNo != null" >
            <![CDATA[
             having a.ven_no = #{venNo,jdbcType=VARCHAR}
             ]]>
        </if>
        order by record_dtm asc) temp

        <include refid="paging_bottom_sql" />
    </select>



    <select id="qryWeightRptListCnt" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="cardId != null" >
            and a.card_id like #{cardId,jdbcType=VARCHAR}
        </if>
        <if test="cardTyp != null" >
            and a.card_typ = #{cardTyp,jdbcType=VARCHAR}
        </if>


        <if test="beginDate != null" >
            and a.record_dtm <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'YYYY-MM-DD hh24:mi:ss')
        </if>

        <if test="endDate != null" >
            and a.record_dtm <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR},'YYYY-MM-DD hh24:mi:ss')+1-0.00001
        </if>
        <if test="beginLeaveDate != null" >
            and a.LEAVE_DTM <![CDATA[     >=     ]]> to_date(#{beginLeaveDate,jdbcType=VARCHAR}, 'YYYY-MM-DD hh24:mi:ss')
        </if>
        <if test="endLeaveDate != null" >
            and a.LEAVE_DTM <![CDATA[    <=    ]]> to_date(#{endLeaveDate,jdbcType=VARCHAR}, 'YYYY-MM-DD hh24:mi:ss')+1-0.00001
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="customerNo != null" >
            and a.customer_no = #{customerNo,jdbcType=VARCHAR}
        </if>

        <if test="tickNo != null" >
            and a.tick_no = #{tickNo,jdbcType=VARCHAR}
        </if>
        <if test="shipId != null" >
            and a.ship_id = #{shipId,jdbcType=VARCHAR}
        </if>
        <if test="goodNo != null" >
            and a.good_no = #{goodNo,jdbcType=VARCHAR}
        </if>
        <if test="inDoorNo != null" >
            and ((a.IN_DOOR_NO = #{inDoorNo,jdbcType=VARCHAR})OR (a.OUT_DOOR_NO = #{inDoorNo,jdbcType=VARCHAR}))
        </if>

        <if test="contactIdFront != null" >
            AND ((a.CONTA_ID_F like #{contactIdFront,jdbcType=VARCHAR})OR (a.CONTA_ID_B like #{contactIdFront,jdbcType=VARCHAR}))
        </if>
    </select>

    <resultMap id="trainWeightRptResultMap" type="org.gxz.znrl.entity.WeightRptEntity">
        <id column="record_no" jdbcType="INTEGER" property="recordNo" />
        <result column="ven_nam" jdbcType="VARCHAR" property="venNam" />
        <result column="carrier_nam" jdbcType="VARCHAR" property="carrierNam" />
        <result column="coal_nam" jdbcType="VARCHAR" property="coalNam" />
        <result column="coal_mine" jdbcType="VARCHAR" property="coalMine" />
        <result column="start_place" jdbcType="VARCHAR" property="startPlace" />
        <result column="start_place_name" jdbcType="VARCHAR" property="startPlaceName" />
        <result column="car_id" jdbcType="VARCHAR" property="carId" />
        <result column="xh_num" jdbcType="VARCHAR" property="xhNum" />
        <result column="train_batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="record_dtm" jdbcType="VARCHAR" property="recordDtm" />
        <result column="cz_dtm" jdbcType="VARCHAR" property="czDtm" />
        <result column="jq_dtm" jdbcType="VARCHAR" property="jqDtm" />
        <result column="mz_qty" jdbcType="VARCHAR" property="mzQty" />
        <result column="kd_qty" jdbcType="VARCHAR" property="kdQty" />
        <result column="kg_qty" jdbcType="VARCHAR" property="kgQty" />
        <result column="pz_qty" jdbcType="VARCHAR" property="pzQty" />
        <result column="net_qty" jdbcType="VARCHAR" property="netQty" />
        <result column="tick_qty" jdbcType="VARCHAR" property="tickQty" />
        <result column="yk_qty" jdbcType="VARCHAR" property="ykQty" />
        <result column="balance_no" jdbcType="VARCHAR" property="balanceNo" />
    </resultMap>

    <!--火车称重称轻计量报表查询总记录数-->
    <select id="qryTrainWeightRptListCnt" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from RLRECORDMSTHY a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id = #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.train_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="startPlace != null" >
            and a.start_place = #{startPlace,jdbcType=VARCHAR}
        </if>

        <if test="czBeginTime != null" >
            <![CDATA[
             and a.cz_dtm >= to_date(#{czBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="czEndTime != null" >
            <![CDATA[
             and a.cz_dtm <= to_date(#{czEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>
    </select>

    <!--火车称重称轻计量报表查询sql-->
    <select id="qryTrainWeightRptList" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultMap="trainWeightRptResultMap" >
        <include refid="paging_top_sql" />
        select (select vi.ven_name from VENDOR_INFO vi where vi.ven_no = a.ven_no) ven_nam,
        (select ci.carrier_name from CARRIER_INFO ci where ci.carrier_no = a.carrier_no) carrier_nam,
        (select ct.coal_name from COAL_TYPE ct where ct.coal_no = a.coal_no) coal_nam,
        (select cm.mine_name from coal_mine cm where cm.mine_no = a.colry_no) coal_mine,
        (select dt.name from dictionary_table dt where dt.type = 'START_RAIL_STATION' and dt.id = a.start_place) start_place_name,
        a.car_id,
        a.xh_num,
        a.train_batch_no,
        to_char(a.record_dtm, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.cz_dtm, 'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        to_char(a.jq_dtm, 'yyyy-mm-dd hh24:mi:ss') jq_dtm,
        to_char(a.mz_qty/1000) mz_qty,
        getUnloadInfo(a.record_no, 'KD_QTY')/1000 kd_qty,
        to_char(a.pz_qty/1000) pz_qty,
        to_char(a.net_qty/1000) net_qty,
        to_char(a.tick_qty/1000) tick_qty,
        to_char((a.net_qty-a.tick_qty)/1000) yk_qty,
        a.balance_no  balance_no,
        rownum rownumber
        from RLRECORDMSTHY a
        where  1 = 1

        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id = #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.train_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="startPlace != null" >
            and a.start_place = #{startPlace,jdbcType=VARCHAR}
        </if>

        <if test="czBeginTime != null" >
            <![CDATA[
             and a.cz_dtm >= to_date(#{czBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="czEndTime != null" >
            <![CDATA[
             and a.cz_dtm <= to_date(#{czEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        order by record_dtm desc
        <include refid="paging_bottom_sql" />
    </select>


    <select id="qryWeightListCnt" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>
    </select>


    <resultMap id="weightRptResultMap" type="org.gxz.znrl.entity.WeightRptEntity">
        <id column="record_no" jdbcType="INTEGER" property="recordNo" />
        <result column="ven_nam" jdbcType="VARCHAR" property="venNam" />
        <result column="carrier_nam" jdbcType="VARCHAR" property="carrierNam" />
        <result column="coal_nam" jdbcType="VARCHAR" property="coalNam" />
        <result column="coal_mine" jdbcType="VARCHAR" property="coalMine" />
        <result column="car_id" jdbcType="VARCHAR" property="carId" />
        <result column="car_type_name" jdbcType="VARCHAR" property="carTypeName" />
        <result column="bottom_height" jdbcType="VARCHAR" property="bottomHeight" />
        <result column="max_load" jdbcType="VARCHAR" property="maxLoad" />
        <result column="car_batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="entry_order" jdbcType="VARCHAR" property="entryOrder" />
        <result column="record_dtm" jdbcType="VARCHAR" property="recordDtm" />
        <result column="cz_dtm" jdbcType="VARCHAR" property="czDtm" />
        <result column="jq_dtm" jdbcType="VARCHAR" property="jqDtm" />
        <result column="mz_qty" jdbcType="VARCHAR" property="mzQty" />
        <result column="kd_qty" jdbcType="VARCHAR" property="kdQty" />
        <result column="kg_qty" jdbcType="VARCHAR" property="kgQty" />
        <result column="pz_qty" jdbcType="VARCHAR" property="pzQty" />
        <result column="net_qty" jdbcType="VARCHAR" property="netQty" />
        <result column="tick_qty" jdbcType="VARCHAR" property="tickQty" />
        <result column="jq_balance_no" jdbcType="VARCHAR" property="jqBalaNo" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="car_count" jdbcType="INTEGER" property="carCount" />
        <result column="ys_qty" jdbcType="VARCHAR" property="ysQty" />
	    <result column="end_sample_time" jdbcType="VARCHAR" property="smplEndTime" />
        <!--<result column="jq_balance_no" jdbcType="VARCHAR" property="jqBalaNo" />-->
        <result column="cz_balance_no" jdbcType="VARCHAR" property="czBalaNo" />
        <result column="kd_op_name" jdbcType="VARCHAR" property="kdOpName" />
        <result column="noKd_NetQty" jdbcType="VARCHAR" property="noKdNetQty" />
        <result column="diff_qty" jdbcType="VARCHAR" property="diffQty" />
        <result column="diff_ratio" jdbcType="VARCHAR" property="diffRatio" />
        <result column="trans_type_name" jdbcType="VARCHAR" property="transTypeName" />
    </resultMap>

    <!--汽车称重称轻计量报表查询sql-->
    <select id="qryWeightRptList" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultMap="weightRptResultMap" >
        <include refid="paging_top_sql" />
        select m.*, rownum rownumber
        from (
        select a.record_no,
        a.car_batch_no,
        a.card_id,
        a.card_typ,
        decode(A.card_typ,'0','散货业务','1','集装箱业务') card_type_name,
        (select b.car_typ from rlcarmst b where b.card_id=a.card_id and rownum=1) car_typ,
        decode((select b.car_typ from rlcarmst b where b.card_id=a.card_id and rownum=1), '0', '半挂', '1', '外挂') car_type_name,
        a.car_id,
        a.carrier_no,
        (select ci.carrier_name
        from CARRIER_INFO ci
        where ci.carrier_no = a.carrier_no) carrier_nam,
        a.ven_no,
        (select vi.ven_name
        from VENDOR_INFO vi
        where vi.ven_no = a.ven_no) ven_nam,
        a.customer_no,
        (select ci.customer_name
        from CUSTOMER_INFO ci
        where ci.customer_no = a.customer_no) customer_name,
        a.tick_no,
        a.tick_qty/1000 tick_qty,
        to_char(a.record_dtm,'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.cz_dtm,'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        to_char(a.jq_dtm,'yyyy-mm-dd hh24:mi:ss') jq_dtm,
        remark,
        a.mz_qty/1000 mz_qty,
        a.pz_qty/1000 pz_qty,
        a.net_qty/1000 net_qty,
        a.kd_qty/1000 kd_qty,
        a.attach_batch_no,
        a.CZ_BALANCE_NO,
        a.JQ_BALANCE_NO,
        a.IN_NO,
        a.OUT_NO,
        a.IN_DOOR_NO,
        a.OUT_DOOR_NO,
        a.STATION_NO,
        a.CONTA_ID_F,
        a.CONTA_ID_B,
        a.CONTA_SIZE,
        a.CONTA_TYPE,
        decode(A.CFM_FLG,'Y','放行','N','禁行') CFM_FLG,
        decode(A.LEAVE_FLG,'Y','放行','N','禁行') LEAVE_FLG,
        (select sp.ship_name
        from ship_info sp
        where sp.ship_id = a.SHIP_ID) ship_name,
        (select sp.FIX_SHIP_NO
        from ship_info sp
        where sp.ship_id = a.SHIP_ID) ship_no,
        a.GOOD_NO,
        (select gi.good_name
        from good_info gi
        where gi.good_no = a.GOOD_NO) good_name,
        (select decode(gi.good_type,'0','空箱','1','集装箱','2','散货','3','件杂货','4','空车','5','行政车辆') from good_info gi where gi.good_no = a.GOOD_NO) good_type_name
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="cardId != null" >
            and a.card_id like #{cardId,jdbcType=VARCHAR}
        </if>
        <if test="cardTyp != null" >
            and a.card_typ = #{cardTyp,jdbcType=VARCHAR}
        </if>

        <if test="beginDate != null" >
            and a.record_dtm <![CDATA[     >=     ]]> to_date(#{beginDate,jdbcType=VARCHAR}, 'YYYY-MM-DD hh24:mi:ss')
        </if>

        <if test="endDate != null" >
            and a.record_dtm <![CDATA[     <     ]]> to_date(#{endDate,jdbcType=VARCHAR}, 'YYYY-MM-DD hh24:mi:ss')+1-0.00001
        </if>
        <if test="beginLeaveDate != null" >
            and a.LEAVE_DTM <![CDATA[     >=     ]]> to_date(#{beginLeaveDate,jdbcType=VARCHAR}, 'YYYY-MM-DD hh24:mi:ss')
        </if>
        <if test="endLeaveDate != null" >
            and a.LEAVE_DTM <![CDATA[     <=     ]]> to_date(#{endLeaveDate,jdbcType=VARCHAR}, 'YYYY-MM-DD hh24:mi:ss')+1-0.00001
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no like #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>
        <if test="customerNo != null" >
            and a.customer_no = #{customerNo,jdbcType=VARCHAR}
        </if>

        <if test="tickNo != null" >
            and a.tick_no like #{tickNo,jdbcType=VARCHAR}
        </if>
        <if test="shipId != null" >
            and a.ship_id = #{shipId,jdbcType=VARCHAR}
        </if>
        <if test="goodNo != null" >
            and a.good_no = #{goodNo,jdbcType=VARCHAR}
        </if>
        <if test="inDoorNo != null" >
            and ((a.IN_DOOR_NO = #{inDoorNo,jdbcType=VARCHAR})OR (a.OUT_DOOR_NO = #{inDoorNo,jdbcType=VARCHAR}))
        </if>

        <if test="contactIdFront != null" >
            AND ((a.CONTA_ID_F like #{contactIdFront,jdbcType=VARCHAR})OR (a.CONTA_ID_B like #{contactIdFront,jdbcType=VARCHAR}))
        </if>


        <if test='order != null and sort == "batchNo"' >
            order by  car_batch_no  ${order}
        </if>

        <if test='order != null and sort == "carId"' >
            order by  car_id  ${order}
        </if>

        <if test='order != null and sort == "mzQty"' >
            order by  mz_qty  ${order}
        </if>

        <if test='order != null and sort == "pzQty"' >
            order by  pz_qty  ${order}
        </if>

        <if test='order != null and sort == "kdQty"' >
            order by  kd_qty  ${order}
        </if>

        <if test='order != null and sort == "netQty"' >
            order by  net_qty  ${order}
        </if>

        <if test='order != null and sort == "recordDtm"' >
            order by  record_dtm  ${order}
        </if>

        <if test='order != null and sort == "czDtm"' >
            order by  cz_dtm  ${order}
        </if>

        <if test='order != null and sort == "jqDtm"' >
            order by  jq_dtm  ${order}
        </if>

        ) m
        <include refid="paging_bottom_sql" />
    </select>


    <!--称重称轻计量报表查询(汽车计量数据补录用)sql-->
    <select id="qryWeightList" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultMap="weightRptResultMap" >
        <include refid="paging_top_sql" />
        select (select vi.ven_name from VENDOR_INFO vi where vi.ven_no = a.ven_no) ven_nam,
        (select ci.carrier_name from CARRIER_INFO ci where ci.carrier_no = a.carrier_no) carrier_nam,
        (select ct.coal_name from COAL_TYPE ct where ct.coal_no = a.coal_no) coal_nam,
        (select cm.mine_name from coal_mine cm where cm.mine_no = a.colry_no) coal_mine,
        a.car_id,
        getCarInfo(a.car_id, 'CAR_TYPE') carTypeName,
        getCarInfo(a.car_id, 'BOTTOM_HEIGHT') bottom_height,
        a.car_batch_no,
        a.door_no,
        to_char(a.record_dtm, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.cz_dtm, 'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        to_char(a.jq_dtm, 'yyyy-mm-dd hh24:mi:ss') jq_dtm,
        to_char(a.mz_qty/1000) mz_qty,
        to_char(a.kd_qty/1000) kd_qty,
        to_char(a.kg_qty/1000) kg_qty,
        to_char(a.pz_qty/1000) pz_qty,
        to_char(a.net_qty/1000) net_qty,
        to_char(a.tick_qty/1000) tick_qty,
        cz_balance_no jq_balance_no,
        decode(getCarStatusInfo(a.record_no), '1','已采样已称重','2','已称重未回皮','3','已称重已回皮','4','未称重未回皮','未知状态') status,
        a.record_no,
        rownum rownumber
        from RLRECORDMSTQY a
        where 1 = 1

        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>
        order by record_dtm desc

        <include refid="paging_bottom_sql" />
    </select>

    <!--查询称重汇总报表数据，暂时固定查当天的-->
    <resultMap id="weightSummaryRptResultMap" type="org.gxz.znrl.entity.WeightRptEntity">
        <result column="total_entry_cnt" jdbcType="VARCHAR" property="totalEntryCnt" />
        <result column="total_cz_cnt" jdbcType="VARCHAR" property="totalCZCnt" />
        <result column="total_jq_cnt" jdbcType="VARCHAR" property="totalJQCnt" />
        <result column="total_sample_cnt" jdbcType="VARCHAR" property="totalSampleCnt" />
        <result column="total_deny_cnt" jdbcType="VARCHAR" property="totalDenyCnt" />
        <result column="total_checkin_cnt" jdbcType="VARCHAR" property="totalCheckInCnt" />
        <result column="total_checintun_cnt" jdbcType="VARCHAR" property="totalCheckInTunCnt" />
    </resultMap>

    <select id="qryEntryTotalCnt" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer">
        select count(1)
        from RLRECORDMSTQY a
        where 1 = 1

        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="leaveBeginTime != null" >
            <![CDATA[
             and a.leave_dtm >= to_date(#{leaveBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="leaveEndTime != null" >
            <![CDATA[
             and a.leave_dtm <= to_date(#{leaveEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="kdStatus != null" >
            and getCarKdSta(a.record_no) = #{kdStatus,jdbcType=VARCHAR}
        </if>

        <if test="mineCardType != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.mine_card_type = #{mineCardType,jdbcType=VARCHAR})
        </if>

        <if test="shipNo != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.ship_id = #{shipNo,jdbcType=VARCHAR})
        </if>
    </select>


    <select id="qryWeightTotalCnt" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from RLRECORDMSTQY a
        where  a.cz_dtm is not null
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="leaveBeginTime != null" >
            <![CDATA[
             and a.leave_dtm >= to_date(#{leaveBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="leaveEndTime != null" >
            <![CDATA[
             and a.leave_dtm <= to_date(#{leaveEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="kdStatus != null" >
            and getCarKdSta(a.record_no) = #{kdStatus,jdbcType=VARCHAR}
        </if>

        <if test="mineCardType != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.mine_card_type = #{mineCardType,jdbcType=VARCHAR})
        </if>

        <if test="shipNo != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.ship_id = #{shipNo,jdbcType=VARCHAR})
        </if>
    </select>

    <select id="qryLightTotalCnt" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from RLRECORDMSTQY a
        where a.jq_dtm is not null
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="leaveBeginTime != null" >
            <![CDATA[
             and a.leave_dtm >= to_date(#{leaveBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="leaveEndTime != null" >
            <![CDATA[
             and a.leave_dtm <= to_date(#{leaveEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="kdStatus != null" >
            and getCarKdSta(a.record_no) = #{kdStatus,jdbcType=VARCHAR}
        </if>

        <if test="mineCardType != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.mine_card_type = #{mineCardType,jdbcType=VARCHAR})
        </if>

        <if test="shipNo != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.ship_id = #{shipNo,jdbcType=VARCHAR})
        </if>
    </select>

    <select id="qryTotalMz" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select nvl(sum(a.mz_qty), 0)/1000
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="leaveBeginTime != null" >
            <![CDATA[
             and a.leave_dtm >= to_date(#{leaveBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="leaveEndTime != null" >
            <![CDATA[
             and a.leave_dtm <= to_date(#{leaveEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="kdStatus != null" >
            and getCarKdSta(a.record_no) = #{kdStatus,jdbcType=VARCHAR}
        </if>

        <if test="mineCardType != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.mine_card_type = #{mineCardType,jdbcType=VARCHAR})
        </if>

        <if test="shipNo != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.ship_id = #{shipNo,jdbcType=VARCHAR})
        </if>
    </select>

    <select id="qryTotalPz" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select nvl(sum(a.pz_qty), 0)/1000
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="leaveBeginTime != null" >
            <![CDATA[
             and a.leave_dtm >= to_date(#{leaveBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="leaveEndTime != null" >
            <![CDATA[
             and a.leave_dtm <= to_date(#{leaveEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="kdStatus != null" >
            and getCarKdSta(a.record_no) = #{kdStatus,jdbcType=VARCHAR}
        </if>

        <if test="mineCardType != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.mine_card_type = #{mineCardType,jdbcType=VARCHAR})
        </if>

        <if test="shipNo != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.ship_id = #{shipNo,jdbcType=VARCHAR})
        </if>
    </select>

    <select id="qryTotalNet" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select nvl(sum(a.net_qty), 0)/1000
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="leaveBeginTime != null" >
            <![CDATA[
             and a.leave_dtm >= to_date(#{leaveBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="leaveEndTime != null" >
            <![CDATA[
             and a.leave_dtm <= to_date(#{leaveEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="kdStatus != null" >
            and getCarKdSta(a.record_no) = #{kdStatus,jdbcType=VARCHAR}
        </if>

        <if test="mineCardType != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.mine_card_type = #{mineCardType,jdbcType=VARCHAR})
        </if>

        <if test="shipNo != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.ship_id = #{shipNo,jdbcType=VARCHAR})
        </if>
    </select>

    <select id="qryTotalTick" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select nvl(sum(a.tick_qty), 0)/1000
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="leaveBeginTime != null" >
            <![CDATA[
             and a.leave_dtm >= to_date(#{leaveBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="leaveEndTime != null" >
            <![CDATA[
             and a.leave_dtm <= to_date(#{leaveEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="kdStatus != null" >
            and getCarKdSta(a.record_no) = #{kdStatus,jdbcType=VARCHAR}
        </if>

        <if test="mineCardType != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.mine_card_type = #{mineCardType,jdbcType=VARCHAR})
        </if>

        <if test="shipNo != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.ship_id = #{shipNo,jdbcType=VARCHAR})
        </if>
    </select>

    <select id="qryTotalKd" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select nvl(sum(a.kd_qty), 0)/1000
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="leaveBeginTime != null" >
            <![CDATA[
             and a.leave_dtm >= to_date(#{leaveBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="leaveEndTime != null" >
            <![CDATA[
             and a.leave_dtm <= to_date(#{leaveEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="kdStatus != null" >
            and getCarKdSta(a.record_no) = #{kdStatus,jdbcType=VARCHAR}
        </if>

        <if test="mineCardType != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.mine_card_type = #{mineCardType,jdbcType=VARCHAR})
        </if>

        <if test="shipNo != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.ship_id = #{shipNo,jdbcType=VARCHAR})
        </if>
    </select>


    <select id="qryTotalKd4ZJ" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select nvl(sum(nvl(a.kd_qty, 0)+nvl(a.kg_qty, 0)), 0)/1000
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="leaveBeginTime != null" >
            <![CDATA[
             and a.leave_dtm >= to_date(#{leaveBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="leaveEndTime != null" >
            <![CDATA[
             and a.leave_dtm <= to_date(#{leaveEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="kdStatus != null" >
            and getCarKdSta(a.record_no) = #{kdStatus,jdbcType=VARCHAR}
        </if>

        <if test="mineCardType != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.mine_card_type = #{mineCardType,jdbcType=VARCHAR})
        </if>

        <if test="shipNo != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.ship_id = #{shipNo,jdbcType=VARCHAR})
        </if>
    </select>

    <select id="qryTrainEntryTotalCnt" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer">
        select count(1)
        from RLRECORDMSTHY a
        where 1 = 1

        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id = #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.train_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="startPlace != null" >
            and a.start_place = #{startPlace,jdbcType=VARCHAR}
        </if>

        <if test="czBeginTime != null" >
            <![CDATA[
            and a.cz_dtm >= to_date(#{czBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
            ]]>
        </if>

        <if test="czEndTime != null" >
            <![CDATA[
            and a.cz_dtm <= to_date(#{czEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
            ]]>
        </if>
    </select>


    <select id="qryTrainWeightTotalCnt" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from RLRECORDMSTHY a
        where 1 = 1
        and a.mz_qty is not null
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id = #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.train_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="startPlace != null" >
            and a.start_place = #{startPlace,jdbcType=VARCHAR}
        </if>

        <if test="czBeginTime != null" >
            <![CDATA[
            and a.cz_dtm >= to_date(#{czBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
            ]]>
        </if>

        <if test="czEndTime != null" >
            <![CDATA[
            and a.cz_dtm <= to_date(#{czEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
            ]]>
        </if>
    </select>

    <select id="qryTrainTotalMz" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select round(nvl(sum(a.mz_qty), 0)/1000, 3)
        from RLRECORDMSTHY a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id = #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.train_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="startPlace != null" >
            and a.start_place = #{startPlace,jdbcType=VARCHAR}
        </if>

        <if test="czBeginTime != null" >
            <![CDATA[
            and a.cz_dtm >= to_date(#{czBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
            ]]>
        </if>

        <if test="czEndTime != null" >
            <![CDATA[
            and a.cz_dtm <= to_date(#{czEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
            ]]>
        </if>
    </select>

    <select id="qryTrainTotalPz" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select round(nvl(sum(a.pz_qty), 0)/1000, 3)
        from RLRECORDMSTHY a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id = #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.train_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="startPlace != null" >
            and a.start_place = #{startPlace,jdbcType=VARCHAR}
        </if>

        <if test="czBeginTime != null" >
            <![CDATA[
            and a.cz_dtm >= to_date(#{czBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
            ]]>
        </if>

        <if test="czEndTime != null" >
            <![CDATA[
            and a.cz_dtm <= to_date(#{czEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
            ]]>
        </if>
    </select>

    <select id="qryTrainTotalNet" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select round(nvl(sum(a.net_qty), 0)/1000, 3)
        from RLRECORDMSTHY a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id = #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.train_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="startPlace != null" >
            and a.start_place = #{startPlace,jdbcType=VARCHAR}
        </if>

        <if test="czBeginTime != null" >
            <![CDATA[
            and a.cz_dtm >= to_date(#{czBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
            ]]>
        </if>

        <if test="czEndTime != null" >
            <![CDATA[
            and a.cz_dtm <= to_date(#{czEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
            ]]>
        </if>
    </select>

    <resultMap id="sampleRptResultMap" type="org.gxz.znrl.entity.SampleRptEntity">
        <result column="sample_code" jdbcType="VARCHAR" property="sampleCode" />
        <result column="sampling_code" jdbcType="VARCHAR" property="samplingCode" />
        <result column="batch_type_name" jdbcType="VARCHAR" property="batchTypeName" />
        <result column="start_time" jdbcType="VARCHAR" property="startTime" />
        <result column="end_time" jdbcType="VARCHAR" property="endTime" />
        <result column="coal_name" jdbcType="VARCHAR" property="coalName" />
        <result column="ven_name" jdbcType="VARCHAR" property="venName" />
        <result column="mine_name" jdbcType="VARCHAR" property="mineName" />
        <result column="sample_type" jdbcType="VARCHAR" property="sampleType" />
        <result column="sample_cnt" jdbcType="VARCHAR" property="sampleCnt" />
        <result column="car_id" jdbcType="VARCHAR" property="carId" />
        <result column="car_cnt" jdbcType="VARCHAR" property="carCnt" />
        <result column="total_net_qty" jdbcType="VARCHAR" property="totalNetQty"/>
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="batch_no_type" jdbcType="VARCHAR" property="batchNoType" />
        <result column="machine_code" jdbcType="VARCHAR" property="machineCode" />
        <result column="sample_typ" jdbcType="VARCHAR" property="sampleTyp" />
        <result column="sample_qty" jdbcType="VARCHAR" property="sampleQty" />
        <result column="sample_rat" jdbcType="VARCHAR" property="suofenCnt" />
        <result column="sample_cnt_new" jdbcType="VARCHAR" property="sampleCntNew" />
        <result column="user_code" jdbcType="VARCHAR" property="userCode" />
        <result column="sample_usage_rate" jdbcType="VARCHAR" property="usageRate" />
        <result column="sample_freq" jdbcType="VARCHAR" property="sampleFrequence" />
        <result column="sample_gap" jdbcType="VARCHAR" property="sampleGape" />
        <result column="barrel_code" jdbcType="VARCHAR" property="barrelCode" />
        <result column="barrel_cnt" jdbcType="VARCHAR" property="barrelCnt" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />

        <result column="autoSampleBatchCnt" jdbcType="VARCHAR" property="autoSampleBatchCnt" />
        <result column="manualSampleBatchCnt" jdbcType="VARCHAR" property="manualSampleBatchCnt" />
        <result column="autoSampleRate" jdbcType="VARCHAR" property="autoSampleRate" />
        <result column="autoSamplingBatchCnt" jdbcType="VARCHAR" property="autoSamplingBatchCnt" />
        <result column="manualSamplingBatchCnt" jdbcType="VARCHAR" property="manualSamplingBatchCnt" />
        <result column="autoSamplingRate" jdbcType="VARCHAR" property="autoSamplingRate" />
        <result column="batch_time" jdbcType="VARCHAR" property="batchTime" />
        <result column="batchCnt" jdbcType="VARCHAR" property="batchCnt" />

        <result column="coordinateX1" jdbcType="VARCHAR" property="coordinateX1" />
        <result column="coordinateY1" jdbcType="VARCHAR" property="coordinateY1" />
        <result column="coordinateX2" jdbcType="VARCHAR" property="coordinateX2" />
        <result column="coordinateY2" jdbcType="VARCHAR" property="coordinateY2" />
        <result column="coordinateX3" jdbcType="VARCHAR" property="coordinateX3" />
        <result column="coordinateY3" jdbcType="VARCHAR" property="coordinateY3" />
        <result column="suofenInterval" jdbcType="VARCHAR" property="suofenInterval" />
        <result column="boiler_no" jdbcType="VARCHAR" property="boilerNo" />
        <result column="goods_receiver" jdbcType="VARCHAR" property="goodsReceiver" />
        <result column="sample_size" jdbcType="VARCHAR" property="sampleSize" />
        <result column="bc" jdbcType="VARCHAR" property="bc" />

        <result column="weight_time" jdbcType="VARCHAR" property="weightTime" />
        <result column="balance_no" jdbcType="VARCHAR" property="balanceNo" />
        <result column="weight" jdbcType="VARCHAR" property="weight" />
        <result column="barrel_id" jdbcType="VARCHAR" property="barrelId" />
        <result column="sample_team_no" jdbcType="VARCHAR" property="teamNo" />
        <result column="sample_class_no" jdbcType="VARCHAR" property="classNo" />
    </resultMap>

    <select id="qryAutoRateRptCnt" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultType="java.lang.Integer" >
        select count(*)
        from
        (
        select trunc(a.insert_time) batch_time ,count(1) batchCnt
        from batch_no_info a
        where a.batch_no_type = '0'
        <if test="startTime != null" >
            and a.insert_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="endTime != null" >
            and a.insert_time <![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD') + 1 - 0.00004
        </if>

        <if test="coalType != null" >
            and a.coal_no  in (${coalType})
        </if>

        group by trunc(a.insert_time)
        ) t
        order by t.batch_time
    </select>

    <select id="qryAutoRateRptList" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultMap="sampleRptResultMap" >
        <include refid="paging_top_sql"/>
        select s.*, rownum rownumber
        from (
                select
                    to_char(t.batch_time,'YYYY-MM-DD') batch_time ,
                    t.batchCnt,
                    getSampleRateResult(t.batch_time, #{coalType,jdbcType=VARCHAR},'autoSample') autoSampleBatchCnt,
                    getSampleRateResult(t.batch_time,  #{coalType,jdbcType=VARCHAR},'manualSample') manualSampleBatchCnt,
                    trunc(to_number(getSampleRateResult(t.batch_time, #{coalType,jdbcType=VARCHAR} ,'autoSample'))/t.batchCnt,2) *100 || '%'  autoSampleRate,
                    getSampleRateResult(t.batch_time,  #{coalType,jdbcType=VARCHAR} ,'autoSampling') autoSamplingBatchCnt,
                    getSampleRateResult(t.batch_time,  #{coalType,jdbcType=VARCHAR} ,'manualSampling') manualSamplingBatchCnt,
                    trunc(to_number(getSampleRateResult(t.batch_time,  #{coalType,jdbcType=VARCHAR} ,'autoSampling'))/t.batchCnt,2) *100 || '%' autoSamplingRate
                from
                (
                select trunc(a.insert_time) batch_time ,count(1) batchCnt
                from batch_no_info a
                where a.batch_no_type = '0'
                <if test="startTime != null" >
                and a.insert_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                </if>

                <if test="endTime != null" >
                and a.insert_time<![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD') + 1 - 0.00004
                </if>

                <if test="coalType != null" >
                    and a.coal_no  in (${coalType})
                </if>
                group by trunc(a.insert_time)
                ) t
                order by t.batch_time
        ) s
        <include refid="paging_bottom_sql"/>
    </select>

    <select id="qryAutoRateRptListFoot" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultMap="sampleRptResultMap" >
        select
            '合计' batch_time,
            sum(s.batchCnt) batchCnt,
            sum(s.autoSampleBatchCnt) autoSampleBatchCnt,
            sum(s.manualSampleBatchCnt) manualSampleBatchCnt,
            round(sum(s.autoSampleBatchCnt)/sum(batchCnt),2)*100 || '%' autoSampleRate,
            sum(s.autoSamplingBatchCnt) autoSamplingBatchCnt,
            sum(s.manualSamplingBatchCnt) manualSamplingBatchCnt,
            round(sum(s.autoSamplingBatchCnt)/sum(batchCnt),2)*100 || '%' autoSamplingRate
            from
            (
            select
            t.batch_time,
            t.batchCnt batchCnt,
            getSampleRateResult(t.batch_time, #{coalType,jdbcType=VARCHAR} ,'autoSample') autoSampleBatchCnt,
            getSampleRateResult(t.batch_time, #{coalType,jdbcType=VARCHAR} ,'manualSample') manualSampleBatchCnt,
            round(to_number(getSampleRateResult(t.batch_time, #{coalType,jdbcType=VARCHAR} ,'autoSample'))/t.batchCnt,2) *100 || '%'  autoSampleRate,
            getSampleRateResult(t.batch_time, #{coalType,jdbcType=VARCHAR},'autoSampling') autoSamplingBatchCnt,
            getSampleRateResult(t.batch_time,  #{coalType,jdbcType=VARCHAR},'manualSampling') manualSamplingBatchCnt,
            round(to_number(getSampleRateResult(t.batch_time,  #{coalType,jdbcType=VARCHAR},'autoSampling'))/t.batchCnt,2) *100 || '%' autoSamplingRate
            from
            (
            select trunc(a.insert_time) batch_time ,count(1) batchCnt
            from batch_no_info a
            where a.batch_no_type = '0'
            <if test="startTime != null" >
                and a.insert_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
            </if>
            <if test="endTime != null" >
                and a.insert_time<![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD') + 1 - 0.00004
            </if>

        <if test="coalType != null" >
            and a.coal_no  in (${coalType})
        </if>
            group by trunc(a.insert_time)
            ) t
        )s
    </select>


    <select id="qrySampleRptCnt" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from batch_no_info c
        where 1 = 1

        <if test="batchNo != null">
            and c.batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null" >
            and c.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null" >
            and c.insert_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="endTime != null" >
            and c.insert_time <![CDATA[ < ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="batchNoType != null" >
            and c.batch_no_type = #{batchNoType,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="qrySampleRptList" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultMap="sampleRptResultMap" >
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
        from (select c.batch_no,
        decode(c.batch_no_type, '0','汽车煤批次','1','火车煤批次','2','轮船煤批次','3','场地煤批次','5','系统外批次','6','船煤抽检批次','7','火车抽检批次','8','汽车抽检批次','9','入炉煤批次','系统外批次') batch_type_name,
        c.sample_code,
        c.sampling_code,
        (select decode(sample_typ,
        '0',
        '皮带采样',
        '1',
        '皮带大水分旁路',
        '2',
        '人工采样',
        '3',
        '车厢采样',
        '4',
        '车厢大水分旁路')
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) sample_type,
        (select sample_typ
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) sample_typ,

        (select sample_qty
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) sample_qty,

        (select op_code
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) user_code,

        (select nvl(sum(sample_cnt),0) from take_sample_rec where sample_code = c.sample_code) sample_cnt,
        (select nvl(sum(sample_freq),0) from take_sample_rec where sample_code = c.sample_code) sample_freq,
        (select nvl(sum(sample_gap),0) from take_sample_rec where sample_code = c.sample_code) sample_gap,

        (select getSampleCount(c.sample_code) from dual) sample_cnt_new,

        (select getSampleRatio(c.sample_code) from dual) sample_rat,

        (select machine_code from take_sample_rec where sample_code = c.sample_code and rownum <![CDATA[ < ]]>  2) machine_code,

        case
        when c.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_cnt,

        case
        when c.batch_no_type = '0' then
        (select min(bb.start_time)
        from take_sample_rec bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type in ('1', '9', '2','3') then
        (select bb.start_time
        from take_sample_rec bb
        where bb.sample_code = c.sample_code
        and rownum = 1)
        end start_time,

        case
        when c.batch_no_type = '0' then
        (select max(bb.end_time)
        from take_sample_rec bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type in ('1', '9', '2','3') then
        (select bb.end_time
        from take_sample_rec bb
        where bb.sample_code = c.sample_code
        and rownum = 1)
        end end_time,


        (select bb.coal_name
        from coal_type bb
        where bb.coal_no = c.coal_no) as coal_name,

        (select bb.ven_name
        from vendor_info bb
        where bb.ven_no = c.ven_no) as ven_name,

        (select bb.mine_name
        from coal_mine bb
        where bb.mine_no = c.mine_no) as mine_name,

        <if test='blNeed =="Y"'>
        (select get_sample_usageRate(c.sample_code) from dual) as sample_usage_rate,
        </if>

        (select getBatchCarIds(c.batch_no,c.batch_no_type) from dual) as  car_id,

        case
        when c.batch_no_type = '0' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.sample_code = c.sample_code) / 1000)
        when c.batch_no_type = '1' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.sample_code = c.sample_code) / 1000)
        when c.batch_no_type = '7' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.attach_batch_no = c.batch_no) / 1000)
        when c.batch_no_type = '8' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.attach_batch_no = c.batch_no) / 1000)
        when c.batch_no_type = '9' then
        ((select sum(bb.all_net_qty)
        from batch_no_info bb
        where bb.sample_code = c.sample_code)/1000)
        when c.batch_no_type = '2' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type = '3' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = c.sample_code)
        end total_net_qty,
        c.batch_no_type,
        <if test='barrelCnt =="Y"'>
            (select count(1) from sample_record_t1020 s where s.sample_id = c.sample_code) barrel_cnt,
            (select getBarrelCodeList(c.sample_code) from dual) as  barrel_code,
        </if>
				(select user_name from take_sample_rec s where s.sample_code = c.sample_code and rownum = 1) user_name
        from batch_no_info c
        where 1 = 1
        <if test="batchNo != null">
            and c.batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null" >
            and c.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null" >
            and c.sampling_code = #{samplingCode,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null" >
            and c.insert_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="endTime != null" >
            and c.insert_time <![CDATA[ < ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1-0.00001
        </if>

        <if test="batchNoType != null" >
            and c.batch_no_type = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and  c.coal_no IN ${coalNo}

        </if>
        order by c.insert_time desc) t
        <include refid="paging_bottom_sql"/>
    </select>


    <select id="qryCarWeightLocalCnt" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultType="java.lang.Integer" >
        select count(*)
          from car_weight_local a
         where 1 = 1

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="balanceNo != null" >
            and a.balance_no = #{balanceNo, jdbcType=VARCHAR}
        </if>

        <if test="startTime != null" >
            and a.weight_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="endTime != null" >
            and a.weight_time <![CDATA[ < ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1-0.00001
        </if>
    </select>



    <select id="qryCarWeightLocal" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultMap="sampleRptResultMap" >
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
        from
        (select id,
                card_id,
                car_id,
                weight,
                to_char(weight_time, 'yyyy-mm-dd hh24:mi:ss') as weight_time,
                balance_no,
                remark
                from car_weight_local a
                where 1 = 1

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="balanceNo != null" >
            and a.balance_no = #{balanceNo, jdbcType=VARCHAR}
        </if>

        <if test="startTime != null" >
            and a.weight_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="endTime != null" >
            and a.weight_time <![CDATA[ < ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1-0.00001
        </if>

        order by a.id desc) t
        <include refid="paging_bottom_sql"/>
    </select>
    
    
    <select id="qrySampleRptCnt4BB" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from batch_no_info c
        where 1 = 1
          and c.batch_no_type in ('0','1','2','9')

        <if test="batchNo != null">
            and c.batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null" >
            and c.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null" >
            and c.insert_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="endTime != null" >
            and c.insert_time <![CDATA[ < ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="batchNoType != null" >
            and c.batch_no_type = #{batchNoType,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="qrySampleRptList4BB" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultMap="sampleRptResultMap" >
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
        from (select c.batch_no,
        decode(c.batch_no_type, '0','汽车煤批次','1','火车煤批次','2','轮船煤批次','3','场地煤批次','5','系统外批次','6','船煤抽检批次','7','火车抽检批次','8','汽车抽检批次','9','入炉煤批次','系统外批次') batch_type_name,
        c.sample_code,
        c.sampling_code,
        (select decode(sample_typ,
        '0',
        '皮带采样',
        '1',
        '皮带大水分旁路',
        '2',
        '人工采样',
        '3',
        '车厢采样',
        '4',
        '车厢大水分旁路')
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) sample_type,
        (select sample_typ
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) sample_typ,

        (select sample_qty
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) sample_qty,

        (select op_code
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) user_code,

        (select nvl(sum(sample_cnt),0) from take_sample_rec where sample_code = c.sample_code) sample_cnt,
        (select nvl(sum(sample_freq),0) from take_sample_rec where sample_code = c.sample_code) sample_freq,
        (select nvl(sum(sample_gap),0) from take_sample_rec where sample_code = c.sample_code) sample_gap,

        (select getSampleCount(c.sample_code) from dual) sample_cnt_new,

        (select getSampleRatio(c.sample_code) from dual) sample_rat,

        (select machine_code from take_sample_rec where sample_code = c.sample_code and rownum <![CDATA[ < ]]>  2) machine_code,

        case
        when c.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_cnt,

        case
        when c.batch_no_type = '0' then
        (select min(bb.start_time)
        from take_sample_rec bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type in ('1', '9', '2','3') then
        (select bb.start_time
        from take_sample_rec bb
        where bb.sample_code = c.sample_code
        and rownum = 1)
        end start_time,

        case
        when c.batch_no_type = '0' then
        (select max(bb.end_time)
        from take_sample_rec bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type in ('1', '9', '2','3') then
        (select bb.end_time
        from take_sample_rec bb
        where bb.sample_code = c.sample_code
        and rownum = 1)
        end end_time,


        (select bb.coal_name
        from coal_type bb
        where bb.coal_no = c.coal_no) as coal_name,

        (select bb.ven_name
        from vendor_info bb
        where bb.ven_no = c.ven_no) as ven_name,

        (select bb.mine_name
        from coal_mine bb
        where bb.mine_no = c.mine_no) as mine_name,

        <if test='blNeed =="Y"'>
            (select get_sample_usageRate(c.sample_code) from dual) as sample_usage_rate,
        </if>

        (select getBatchCarIds(c.batch_no,c.batch_no_type) from dual) as  car_id,

        case
        when c.batch_no_type = '0' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.sample_code = c.sample_code) / 1000)
        when c.batch_no_type = '1' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.sample_code = c.sample_code) / 1000)
        when c.batch_no_type = '7' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.attach_batch_no = c.batch_no) / 1000)
        when c.batch_no_type = '8' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.attach_batch_no = c.batch_no) / 1000)
        when c.batch_no_type = '9' then
        ((select sum(bb.all_net_qty)
        from batch_no_info bb
        where bb.sample_code = c.sample_code)/1000)
        when c.batch_no_type = '2' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type = '3' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = c.sample_code)
        end total_net_qty,
        c.batch_no_type,
        <if test='barrelCnt =="Y"'>
            (select count(1) from sample_record_t1020 s where s.sample_id = c.sample_code) barrel_cnt,
            (select getBarrelCodeList(c.sample_code) from dual) as  barrel_code,
        </if>
        (select user_name from take_sample_rec s where s.sample_code = c.sample_code and rownum = 1) user_name
        from batch_no_info c
        where 1 = 1
          and c.batch_no_type in ('0','1','2','9')
        <if test="batchNo != null">
            and c.batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null" >
            and c.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null" >
            and c.insert_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="endTime != null" >
            and c.insert_time <![CDATA[ < ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1-0.00001
        </if>

        <if test="batchNoType != null" >
            and c.batch_no_type = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and  c.coal_no IN ${coalNo}

        </if>
        order by c.insert_time desc) t
        <include refid="paging_bottom_sql"/>
    </select>



    <select id="qrySampleRptCnt4Hf" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from (select batch_no,
              sample_code ,
        case
        when c.batch_no_type = '1' then
        (select GOODS_RECEIVER
        from rlrecordmsthy r
        where r.sample_code = c.sample_code
        and rownum =1)
        when c.batch_no_type ='9' then
        ''
        end goods_receiver,
        (select sample_typ from take_sample_rec a where c.sample_code = c.sample_code and rownum = 1) sample_typ
        from batch_no_info c
        where 1=1
          and c.batch_no_type in ('0','1','2','9')
        <if test="batchNo != null">
            and c.batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null" >
            and c.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null" >
            and c.insert_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="endTime != null" >
            and c.insert_time <![CDATA[ < ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="batchNoType != null" >
            and c.batch_no_type = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="boilerNo != null and boilerNo != ''" >
            and  c.boiler_no = #{boilerNo,jdbcType=VARCHAR}
        </if> ) t
        where 1 = 1

        <if test="sampleType != null and sampleType != ''" >
            and  t.sample_typ = #{sampleType,jdbcType=VARCHAR}
        </if>

        <if test="goodsReceiver != null and goodsReceiver != ''" >
            and  t.goods_receiver = #{goodsReceiver,jdbcType=VARCHAR}
        </if>

    </select>

    <select id="qrySampleRptList4Hf" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultMap="sampleRptResultMap" >
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
        from (select c.batch_no,
        decode(c.batch_no_type, '0','汽车煤批次','1','火车煤批次','2','轮船煤批次','3','场地煤批次','5','系统外批次','6','船煤抽检批次','7','火车抽检批次','8','汽车抽检批次','9','入炉煤批次','系统外批次') batch_type_name,
        c.sample_code,
        c.sampling_code,
        (select decode(sample_typ,
        '0',
        '皮带采样',
        '1',
        '皮带大水分旁路',
        '2',
        '人工采样',
        '3',
        '车厢采样',
        '4',
        '车厢大水分旁路')
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) sample_type,
        (select sample_typ
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) sample_typ,

        (select sample_qty
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) sample_qty,

        (select op_code
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) user_code,

        (select nvl(sum(sample_cnt),0) from take_sample_rec where sample_code = c.sample_code) sample_cnt,
        (select nvl(sum(sample_freq),0) from take_sample_rec where sample_code = c.sample_code) sample_freq,
        (select nvl(sum(sample_gap),0) from take_sample_rec where sample_code = c.sample_code) sample_gap,

        (select getSampleCount(c.sample_code) from dual) sample_cnt_new,

        (select getSampleRatio(c.sample_code) from dual) sample_rat,

        (select machine_code from take_sample_rec where sample_code = c.sample_code and rownum <![CDATA[ < ]]>  2) machine_code,
        (select sample_team_no from take_sample_rec where sample_code = c.sample_code and rownum <![CDATA[ < ]]>  2) sample_team_no,
        (select sample_class_no from take_sample_rec where sample_code = c.sample_code and rownum <![CDATA[ < ]]>  2) sample_class_no,
        case
        when c.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_cnt,

        case
        when c.batch_no_type = '0' then
        (select min(bb.start_time)
        from take_sample_rec bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type in ('1', '9', '2','3') then
        (select bb.start_time
        from take_sample_rec bb
        where bb.sample_code = c.sample_code
        and rownum = 1)
        end start_time,

        case
        when c.batch_no_type = '0' then
        (select max(bb.end_time)
        from take_sample_rec bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type in ('1', '9', '2','3') then
        (select bb.end_time
        from take_sample_rec bb
        where bb.sample_code = c.sample_code
        and rownum = 1)
        end end_time,


        (select bb.coal_name
        from coal_type bb
        where bb.coal_no = c.coal_no) as coal_name,

        (select bb.ven_name
        from vendor_info bb
        where bb.ven_no = c.ven_no) as ven_name,

        (select bb.mine_name
        from coal_mine bb
        where bb.mine_no = c.mine_no) as mine_name,

        <if test='blNeed =="Y"'>
            (select get_sample_usageRate(c.sample_code) from dual) as sample_usage_rate,
        </if>

        (select getBatchCarIds(c.batch_no,c.batch_no_type) from dual) as  car_id,

        case
        when c.batch_no_type = '0' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.sample_code = c.sample_code) / 1000)
        when c.batch_no_type = '1' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.sample_code = c.sample_code) / 1000)
        when c.batch_no_type = '7' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.attach_batch_no = c.batch_no) / 1000)
        when c.batch_no_type = '8' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.attach_batch_no = c.batch_no) / 1000)
        when c.batch_no_type = '9' then
        ((select sum(bb.all_net_qty)
        from batch_no_info bb
        where bb.sample_code = c.sample_code))
        when c.batch_no_type = '2' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type = '3' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = c.sample_code)
        end total_net_qty,
        c.batch_no_type,
        c.boiler_no,
        <if test='barrelCnt =="Y"'>
            (select count(1) from sample_record_t1020 s where s.sample_id = c.sample_code) barrel_cnt,
            (select getBarrelCodeList(c.sample_code) from dual) as  barrel_code,
        </if>
        (select user_name from take_sample_rec s where s.sample_code = c.sample_code and rownum = 1) user_name,
        case
        when c.batch_no_type = '1' then
        (select GOODS_RECEIVER
        from rlrecordmsthy r
        where r.sample_code = c.sample_code
        and rownum =1)
        when c.batch_no_type ='9' then
        ''
        end  goods_receiver
        from batch_no_info c
        where 1 = 1
        <if test="batchNo != null">
            and c.batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null" >
            and c.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null" >
            and c.insert_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="endTime != null" >
            and c.insert_time <![CDATA[ < ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1-0.00001
        </if>

        <if test="batchNoType != null" >
            and c.batch_no_type = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and  c.coal_no IN ${coalNo}
        </if>

        <if test="boilerNo != null and boilerNo != ''" >
            and  c.boiler_no = #{boilerNo,jdbcType=VARCHAR}
        </if>
        order by c.insert_time desc) t
        where 1=1
        <if test="sampleType != null and sampleType != ''" >
            and  t.sample_typ = #{sampleType,jdbcType=VARCHAR}
        </if>
        <if test="goodsReceiver != null and goodsReceiver != ''" >
            and  t.goods_receiver = #{goodsReceiver,jdbcType=VARCHAR}
        </if>

        <include refid="paging_bottom_sql"/>
    </select>

    <select id="qrySampleRptFooter" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultMap="sampleRptResultMap" >
        select '汇总' batch_no, sum(s.total_net_qty) total_net_qty, sum(s.sample_qty) sample_qty, sum(sample_cnt) sample_cnt,sum(car_cnt) car_cnt
          from (select (select sample_qty
                  from take_sample_rec
                  where sample_code = c.sample_code
                  and rownum = 1) sample_qty,
                  case
                  when c.batch_no_type = '1' then
                  (select GOODS_RECEIVER
                  from rlrecordmsthy r
                  where r.sample_code = c.sample_code
                  and rownum =1)
                  when c.batch_no_type ='9' then
                  ''
                  end  goods_receiver,
                 (select nvl(sum(sample_cnt),0)
                  from take_sample_rec
                  where sample_code = c.sample_code) sample_cnt,
                 (select sample_typ
                  from take_sample_rec
                  where sample_code = c.sample_code
                  and rownum = 1) sample_typ,
                  case
                  when c.batch_no_type = '0' then
                  (select to_char(count(1))
                  from rlrecordmstqy bb
                  where bb.sample_code = c.sample_code)
                  when c.batch_no_type = '1' then
                  (select to_char(count(1))
                  from rlrecordmsthy bb
                  where bb.sample_code = c.sample_code)
                  when c.batch_no_type in ('9', '2', '3') then
                  (select '0' from dual)
                  end car_cnt,
                  case
                  when c.batch_no_type = '0' then
                  ((select sum(bb.net_qty)
                  from rlrecordmstqy bb
                  where bb.sample_code = c.sample_code) / 1000)
                  when c.batch_no_type = '1' then
                  ((select sum(bb.net_qty)
                  from rlrecordmsthy bb
                  where bb.sample_code = c.sample_code) / 1000)
                  when c.batch_no_type = '7' then
                  ((select sum(bb.net_qty)
                  from rlrecordmsthy bb
                  where bb.attach_batch_no = c.batch_no) / 1000)
                  when c.batch_no_type = '8' then
                  ((select sum(bb.net_qty)
                  from rlrecordmstqy bb
                  where bb.attach_batch_no = c.batch_no) / 1000)
                  when c.batch_no_type = '9' then
                  (select bb.all_net_qty
                  from batch_no_info bb
                  where bb.sample_code = c.sample_code)
                  when c.batch_no_type = '2' then
                  (select bb.all_net_qty
                  from batch_no_info bb
                  where bb.sample_code = c.sample_code)
                  when c.batch_no_type = '3' then
                  (select bb.all_net_qty
                  from batch_no_info bb
                  where bb.sample_code = c.sample_code)
                  end total_net_qty
                  from batch_no_info c
                  where 1 = 1
                  <if test="batchNo != null">
                      and c.batch_no = #{batchNo,jdbcType=VARCHAR}
                  </if>

                  <if test="sampleCode != null">
                      and c.sample_code = #{sampleCode,jdbcType=VARCHAR}
                  </if>

                  <if test="startTime != null">
                      and c.insert_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                  </if>

                  <if test="endTime != null">
                      and c.insert_time <![CDATA[ < ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1-0.00001
                  </if>

                  <if test="batchNoType != null">
                      and c.batch_no_type = #{batchNoType,jdbcType=VARCHAR}
                  </if>

                  <if test="coalNo != null">
                      and c.coal_no IN ${coalNo}
                  </if>

                  <if test="boilerNo != null and boilerNo != ''">
                      and c.boiler_no = #{boilerNo,jdbcType=VARCHAR}
                  </if>) s
        where 1=1
        <if test="sampleType != null and sampleType != ''" >
            and  s.sample_typ = #{sampleType,jdbcType=VARCHAR}
        </if>
        <if test="goodsReceiver != null and goodsReceiver != ''" >
            and  s.goods_receiver = #{goodsReceiver,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="qrySampleBarrelRptCnt" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from sample_barrel_rec c
        where 1 = 1

        <if test="barrelCode != null">
            and c.barrel_code = #{barrelCode,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null" >
            and c.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null" >
            and c.start_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="endTime != null" >
            and c.start_time <![CDATA[ < ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1-0.00001
        </if>
    </select>

    <select id="qrySampleBarrelRptList" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultMap="sampleRptResultMap" >
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
          from (select c.sample_code,
                        c.machine_code ,
                        c.barrel_code,
                        c.sam_number sample_cnt,
                        c.sam_weight sample_qty,
                        c.start_time,
                        c.end_time,
                        c.barrel_id
                  from sample_barrel_rec c
                 where 1 = 1
        <if test="machineCode != null">
            and c.machine_code = #{machineCode,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null" >
            and c.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null" >
            and c.end_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="endTime != null" >
            and c.end_time <![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1-0.00001
        </if>

        order by c.end_time desc) t
        <include refid="paging_bottom_sql"/>
    </select>

    <resultMap id="mergeCarBatchResultMap" type="org.gxz.znrl.entity.BatchNoInfoEntity">
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="sample_code" jdbcType="VARCHAR" property="sampleCode" />
        <result column="batch_time" jdbcType="VARCHAR" property="batchTime" />
        <result column="start_time" jdbcType="VARCHAR" property="startTime" />
        <result column="end_time" jdbcType="VARCHAR" property="endTime" />
        <result column="coal_name" jdbcType="VARCHAR" property="coalName" />
        <result column="ven_name" jdbcType="VARCHAR" property="venName" />
        <result column="mine_name" jdbcType="VARCHAR" property="mineName" />
        <result column="car_ids" jdbcType="VARCHAR" property="carIds" />
        <result column="batch_qty" jdbcType="VARCHAR" property="thisBatchQty"/>
        <result column="batch_state" jdbcType="VARCHAR" property="batchState"/>

    </resultMap>

    <select id="qryMergeCarBatchCnt" parameterType="org.gxz.znrl.entity.BatchNoInfoEntity" resultType="java.lang.Integer" >
        SELECT COUNT(1)  FROM (
        SELECT *
        FROM BATCH_NO_INFO C
        WHERE batch_no_type in ('0','9')
        <if test="startTime != null" >
            <![CDATA[
                             and C.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                             ]]>
        </if>
        <if test="endTime != null" >
            <![CDATA[
                             and C.INSERT_TIME <= to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                             ]]>
        </if>
        <if test="isValid != null">
            AND C.IS_VALID = #{isValid,jdbcType=VARCHAR}
        </if>
        ) t
    </select>

    <select id="qryMergeCarBatchList" parameterType="org.gxz.znrl.entity.BatchNoInfoEntity" resultMap="mergeCarBatchResultMap" >
        <include refid="paging_top_sql"/>
        select t.*
        from (SELECT C.BATCH_NO,
        C.SAMPLE_CODE,
        C.INSERT_TIME BATCH_TIME,
        (SELECT MIN(BB.START_TIME)
        FROM TAKE_SAMPLE_REC BB
        WHERE BB.SAMPLE_CODE = C.SAMPLE_CODE) AS START_TIME,
        (SELECT MAX(BB.END_TIME)
        FROM TAKE_SAMPLE_REC BB
        WHERE BB.SAMPLE_CODE = C.SAMPLE_CODE) AS END_TIME,
        (SELECT BB.COAL_NAME
        FROM COAL_TYPE BB
        WHERE BB.COAL_NO = C.COAL_NO) AS COAL_NAME,
        (SELECT BB.VEN_NAME
        FROM VENDOR_INFO BB
        WHERE BB.VEN_NO = C.VEN_NO) AS VEN_NAME,
        (SELECT BB.MINE_NAME
        FROM COAL_MINE BB
        WHERE BB.MINE_NO = C.MINE_NO) AS MINE_NAME,
        getBatchCarIds(C.BATCH_NO,C.batch_no_type) CAR_IDS,
        (SELECT SUM(BB.NET_QTY)
        FROM RLRECORDMSTQY BB
        WHERE BB.SAMPLE_CODE = C.SAMPLE_CODE) / 1000 AS BATCH_QTY,
        DECODE(C.IS_VALID,'0','批次未结束','1','批次结束','2','批次已合并') BATCH_STATE,
        ROWNUM ROWNUMBER
        FROM BATCH_NO_INFO C
        WHERE batch_no_type in ('0','9')
        <if test="startTime != null" >
            <![CDATA[
                         and C.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                         ]]>
        </if>
        <if test="endTime != null" >
            <![CDATA[
                         and C.INSERT_TIME <= to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                         ]]>
        </if>
        <if test="isValid != null">
            AND C.IS_VALID = #{isValid,jdbcType=VARCHAR}
        </if>
        ) t
        order by BATCH_TIME desc
        <include refid="paging_bottom_sql"/>
    </select>

    <resultMap id="samplingRptResultMap" type="org.gxz.znrl.entity.SamplingRptEntity">
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="batch_type_name" jdbcType="VARCHAR" property="batchTypeName" />
        <result column="batch_no_type" jdbcType="VARCHAR" property="batchNoType" />
        <result column="sample_code" jdbcType="VARCHAR" property="sampleCode" />
        <result column="sampling_code" jdbcType="VARCHAR" property="samplingCode" />
        <result column="labor_code" jdbcType="VARCHAR" property="laborCode" />
        <result column="car_ids" jdbcType="VARCHAR" property="carIds" />
        <result column="coal_name" jdbcType="VARCHAR" property="coalName" />
        <result column="mine_name" jdbcType="VARCHAR" property="mineName" />
        <result column="ven_name" jdbcType="VARCHAR" property="venName" />
        <result column="coal_no" jdbcType="VARCHAR" property="coalNo" />
        <result column="mine_no" jdbcType="VARCHAR" property="mineNo" />
        <result column="ven_no" jdbcType="VARCHAR" property="venNo" />
        <result column="carrier_no" jdbcType="VARCHAR" property="carrierNo" />
        <result column="zy_type" jdbcType="VARCHAR" property="zyType" />
        <result column="zy_type_name" jdbcType="VARCHAR" property="zyTypeName" />
        <result column="zy_weight" jdbcType="VARCHAR" property="zyWeight" />
        <result column="pack_code6" jdbcType="VARCHAR" property="packCode6" />
        <result column="pack_code3" jdbcType="VARCHAR" property="packCode3" />
        <result column="pack_code62" jdbcType="VARCHAR" property="packCode62" />
        <result column="pack_code63" jdbcType="VARCHAR" property="packCode63" />
        <result column="pack_code31" jdbcType="VARCHAR" property="packCode31" />
        <result column="pack_code22" jdbcType="VARCHAR" property="packCode22" />
        <result column="pack_code21" jdbcType="VARCHAR" property="packCode21" />
        <result column="pack_code33" jdbcType="VARCHAR" property="packCode33" />
        <result column="pack_code34" jdbcType="VARCHAR" property="packCode34" />
        <result column="pack_code35" jdbcType="VARCHAR" property="packCode35" />
	    <result column="pack_code71" jdbcType="VARCHAR" property="packCode71" />
        <result column="sample_weight" jdbcType="VARCHAR" property="sampleWeight" />
        <result column="sample_remark" jdbcType="VARCHAR" property="sampleRemark" />
        <result column="sample_weight61" jdbcType="VARCHAR" property="sampleWeight61" />
        <result column="sample_weight62" jdbcType="VARCHAR" property="sampleWeight62" />
        <result column="sample_weight63" jdbcType="VARCHAR" property="sampleWeight63" />
        <result column="sample_weight31" jdbcType="VARCHAR" property="sampleWeight31" />
        <result column="sample_weight32" jdbcType="VARCHAR" property="sampleWeight32" />
        <result column="sample_weight21" jdbcType="VARCHAR" property="sampleWeight21" />
        <result column="sample_weight22" jdbcType="VARCHAR" property="sampleWeight22" />
        <result column="sample_weight33" jdbcType="VARCHAR" property="sampleWeight33" />
        <result column="sample_weight34" jdbcType="VARCHAR" property="sampleWeight34" />
        <result column="sample_weight35" jdbcType="VARCHAR" property="sampleWeight35" />
	    <result column="sample_weight71" jdbcType="VARCHAR" property="sampleWeight71" />
        <result column="start_time61" jdbcType="VARCHAR" property="startTime61" />
        <result column="end_time61" jdbcType="VARCHAR" property="endTime61" />
        <result column="start_time62" jdbcType="VARCHAR" property="startTime62" />
        <result column="end_time62" jdbcType="VARCHAR" property="endTime62" />
        <result column="start_time32" jdbcType="VARCHAR" property="startTime32" />
        <result column="end_time32" jdbcType="VARCHAR" property="endTime32" />
        <result column="start_time33" jdbcType="VARCHAR" property="startTime33" />
        <result column="end_time33" jdbcType="VARCHAR" property="endTime33" />
        <result column="start_time34" jdbcType="VARCHAR" property="startTime34" />
        <result column="end_time34" jdbcType="VARCHAR" property="endTime34" />
        <result column="start_time35" jdbcType="VARCHAR" property="startTime35" />
        <result column="end_time35" jdbcType="VARCHAR" property="endTime35" />
        <result column="start_time21" jdbcType="VARCHAR" property="startTime21" />
        <result column="end_time21" jdbcType="VARCHAR" property="endTime21" />
        <result column="start_time22" jdbcType="VARCHAR" property="startTime22" />
        <result column="end_time22" jdbcType="VARCHAR" property="endTime22" />
        <result column="start_time" jdbcType="VARCHAR" property="startTime" />
        <result column="end_time" jdbcType="VARCHAR" property="endTime" />
        <result column="user_code" jdbcType="VARCHAR" property="userCode" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="sample_type" jdbcType="VARCHAR" property="sampleType" />
        <result column="ven_no" jdbcType="VARCHAR" property="venNo" />
        <result column="all_net_qty" jdbcType="VARCHAR" property="allNetQty" />
        <result column="sample_team_no" jdbcType="VARCHAR" property="sampleTeamNo" />
        <result column="machine_code" jdbcType="VARCHAR" property="machineCode" />
        <result column="start_place_name" jdbcType="VARCHAR" property="startPlaceName" />
        <result column="all_net_qty" jdbcType="VARCHAR" property="allNetQty" />
        <result column="car_cnt" jdbcType="VARCHAR" property="carCnt" />
        <result column="car_jq_cnt" jdbcType="VARCHAR" property="carJqCnt" />
        <result column="ship_name" jdbcType="VARCHAR" property="shipName" />
        <result column="ship_trans_no" jdbcType="VARCHAR" property="shipTransNo" />
        <result column="arguementFlag" jdbcType="VARCHAR" property="arguementFlag" />
        <result column="insert_time" jdbcType="VARCHAR" property="insertTime" />
        <result column="batch_rela_id" jdbcType="VARCHAR" property="batchRelaId" />
        <result column="sampling_status" jdbcType="VARCHAR" property="samplingStatus" />
        <result column="labor_status" jdbcType="VARCHAR" property="laborStatus" />
        <result column="labor_code_4_check" jdbcType="VARCHAR" property="laborCode4Check" />
        <result column="sample_code_4_check" jdbcType="VARCHAR" property="sampleCode4Check" />
        <result column="sampling_code_4_check" jdbcType="VARCHAR" property="samplingCode4Check" />
        <result column="goods_receiver" jdbcType="VARCHAR" property="goodsReceiver" />
        <result column="barrel_cnt" jdbcType="VARCHAR" property="barrelCnt" />
    </resultMap>

    <select id="qrySamplingRptCnt" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from batch_no_info a
        where 1 = 1

        <if test="sampleCode != null">
            AND A.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null">
            AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>

        <if test="laborCode != null">
            AND A.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>
        
        <if test="batchNoType != null">
            AND A.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null">
            <![CDATA[
                 and A.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>

        <if test="endTime != null">
            <![CDATA[
                 and A.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>
        <if test="mineNo != null">
            AND A.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>


        <if test="sampleBelongDt != null">
            and A.sample_belong_dt = to_date(#{sampleBelongDt, jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
    </select>


    <select id="qrySamplingRptList4ZJ" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultMap="samplingRptResultMap" >
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
        from (select a.batch_no,
        a.sampling_code,
        a.sample_code,
        a.labor_code,
        a.batch_no_type,
        decode(a.batch_no_type, '0','汽车煤批次','1','火车煤批次','2','轮船煤批次','3','场地煤批次','5','系统外批次','6','船煤抽检批次','7','火车抽检批次','8','汽车抽检批次','9','入炉煤批次','15','抽查样批次','系统外批次') batch_type_name,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
        (select mine_name from coal_mine where mine_no = a.mine_no) mine_name,
        (select ven_name from vendor_info where ven_no = a.ven_no) ven_name,
        getSamplingRemark(a.sample_code) sample_remark,
        (select nvl(sum(t.sam_weight), 0) from sample_barrel_rec t where t.sample_code = a.sample_code) sample_weight,
        (select count(*) from sample_barrel_rec t where t.sample_code = a.sample_code) barrel_cnt,
        a.coal_no,
        a.mine_no,
        a.ven_no,
        a.carrier_no,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '2') zy_weight,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '3') zy_type,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '4') zy_type_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '1') pack_code6,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '1') pack_code3,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '1') pack_code62,
        get_samplingres_by_samplingcd(a.sampling_code, '63', '1') pack_code63,
        get_samplingres_by_samplingcd(a.sampling_code, '31', '1') pack_code31,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '1') pack_code21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '1') pack_code22,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '1') pack_code33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '1') pack_code34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '1') pack_code35,
        get_samplingres_by_samplingcd(a.sampling_code, '71', '1') pack_code71,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '9') sample_weight61,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '9') sample_weight62,
        get_samplingres_by_samplingcd(a.sampling_code, '63', '9') sample_weight63,
        get_samplingres_by_samplingcd(a.sampling_code, '31', '9') sample_weight31,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '9') sample_weight32,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '9') sample_weight21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '9') sample_weight22,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '9') sample_weight33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '9') sample_weight34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '9') sample_weight35,
        get_samplingres_by_samplingcd(a.sampling_code, '71', '9') sample_weight71,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '5') start_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '6') user_code,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '7') user_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '8') end_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '10') start_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '11') end_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '10') start_time62,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '11') end_time62,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '10') start_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '11') end_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '10') start_time33,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '11') end_time33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '10') start_time34,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '11') end_time34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '10') start_time35,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '11') end_time35,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '10') start_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '11') end_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '10') start_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '11') end_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '', '14') machine_code,
        (select getBatchCarIds(a.batch_no,a.batch_no_type) from dual) as  car_ids,
        case
        when a.batch_no_type = '0' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '1' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '7' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '8' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '9' then
        ((select sum(bb.all_net_qty)
        from batch_no_info bb
        where bb.sample_code = a.sample_code)/1000)
        when a.batch_no_type = '2' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '3' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '5' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        end all_net_qty,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_cnt,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code
        and bb.jq_dtm is not null)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_jq_cnt,
        <![CDATA[
           (select b.sample_team_no from  TAKE_SAMPLE_REC b where b.sample_code = a.sample_code and rownum < 2 ) as sample_team_no
        ]]>

        from batch_no_info a
        where 1 = 1

        <if test="batchNoType != null">
            AND A.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null">
            AND A.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null">
            AND A.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null">
            AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>
        <if test="laborCode != null">
            AND A.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null">
            AND A.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null">
            <![CDATA[
                 and A.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>
        <if test="endTime != null">
            <![CDATA[
                 and A.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>

        <if test="sampleBelongDt != null">
            and A.sample_belong_dt = to_date(#{sampleBelongDt, jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        order by a.batch_no_type, a.day_batch_num
        )t
        WHERE 1=1
        <if test="zyType != null">
            AND t.zy_type = #{zyType,jdbcType=VARCHAR}
        </if>

        <include refid="paging_bottom_sql"/>
    </select>


    <select id="qrySamplingRptList" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultMap="samplingRptResultMap" >
    <include refid="paging_top_sql"/>
    select t.*, rownum rownumber
    from (select a.batch_no,
    a.sampling_code,
    a.sample_code,
    a.labor_code,
    a.batch_no_type,
    decode(a.batch_no_type, '0','汽车煤批次','1','火车煤批次','2','轮船煤批次','3','场地煤批次','5','系统外批次','6','船煤抽检批次','7','火车抽检批次','8','汽车抽检批次','9','入炉煤批次','15','抽查样批次','系统外批次') batch_type_name,
    (select dt.name
    from dictionary_table dt
    where dt.type = 'START_RAIL_STATION'
    and exists (select b.start_place
    from rlrecordmsthy b
    where dt.id = b.start_place
    and b.train_batch_no = a.batch_no)
    and rownum <![CDATA[< 2 ]]>) start_place_name,
    (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
    (select mine_name from coal_mine where mine_no = a.mine_no) mine_name,
    (select ven_name from vendor_info where ven_no = a.ven_no) ven_name,
    a.coal_no,
    a.mine_no,
    a.ven_no,
    a.carrier_no,
    get_samplingres_by_samplingcd(a.sampling_code, '61', '2') zy_weight,
    get_samplingres_by_samplingcd(a.sampling_code, '61', '3') zy_type,
    get_samplingres_by_samplingcd(a.sampling_code, '61', '4') zy_type_name,
    get_samplingres_by_samplingcd(a.sampling_code, '61', '1') pack_code6,
    get_samplingres_by_samplingcd(a.sampling_code, '32', '1') pack_code3,
    get_samplingres_by_samplingcd(a.sampling_code, '62', '1') pack_code62,
    get_samplingres_by_samplingcd(a.sampling_code, '63', '1') pack_code63,
    get_samplingres_by_samplingcd(a.sampling_code, '31', '1') pack_code31,
    get_samplingres_by_samplingcd(a.sampling_code, '21', '1') pack_code21,
    get_samplingres_by_samplingcd(a.sampling_code, '22', '1') pack_code22,
    get_samplingres_by_samplingcd(a.sampling_code, '33', '1') pack_code33,
    get_samplingres_by_samplingcd(a.sampling_code, '34', '1') pack_code34,
    get_samplingres_by_samplingcd(a.sampling_code, '35', '1') pack_code35,
    get_samplingres_by_samplingcd(a.sampling_code, '71', '1') pack_code71,
    get_samplingres_by_samplingcd(a.sampling_code, '61', '9') sample_weight61,
    get_samplingres_by_samplingcd(a.sampling_code, '62', '9') sample_weight62,
    get_samplingres_by_samplingcd(a.sampling_code, '63', '9') sample_weight63,
    get_samplingres_by_samplingcd(a.sampling_code, '31', '9') sample_weight31,
    get_samplingres_by_samplingcd(a.sampling_code, '32', '9') sample_weight32,
    get_samplingres_by_samplingcd(a.sampling_code, '21', '9') sample_weight21,
    get_samplingres_by_samplingcd(a.sampling_code, '22', '9') sample_weight22,
    get_samplingres_by_samplingcd(a.sampling_code, '33', '9') sample_weight33,
    get_samplingres_by_samplingcd(a.sampling_code, '34', '9') sample_weight34,
    get_samplingres_by_samplingcd(a.sampling_code, '35', '9') sample_weight35,
    get_samplingres_by_samplingcd(a.sampling_code, '71', '9') sample_weight71,
    get_samplingres_by_samplingcd(a.sampling_code, '61', '5') start_time,
    get_samplingres_by_samplingcd(a.sampling_code, '61', '6') user_code,
    get_samplingres_by_samplingcd(a.sampling_code, '61', '7') user_name,
    get_samplingres_by_samplingcd(a.sampling_code, '61', '8') end_time,
    get_samplingres_by_samplingcd(a.sampling_code, '61', '10') start_time61,
    get_samplingres_by_samplingcd(a.sampling_code, '61', '11') end_time61,
    get_samplingres_by_samplingcd(a.sampling_code, '62', '10') start_time62,
    get_samplingres_by_samplingcd(a.sampling_code, '62', '11') end_time62,
    get_samplingres_by_samplingcd(a.sampling_code, '32', '10') start_time32,
    get_samplingres_by_samplingcd(a.sampling_code, '32', '11') end_time32,
    get_samplingres_by_samplingcd(a.sampling_code, '33', '10') start_time33,
    get_samplingres_by_samplingcd(a.sampling_code, '33', '11') end_time33,
    get_samplingres_by_samplingcd(a.sampling_code, '34', '10') start_time34,
    get_samplingres_by_samplingcd(a.sampling_code, '34', '11') end_time34,
    get_samplingres_by_samplingcd(a.sampling_code, '35', '10') start_time35,
    get_samplingres_by_samplingcd(a.sampling_code, '35', '11') end_time35,
    get_samplingres_by_samplingcd(a.sampling_code, '21', '10') start_time21,
    get_samplingres_by_samplingcd(a.sampling_code, '21', '11') end_time21,
    get_samplingres_by_samplingcd(a.sampling_code, '22', '10') start_time22,
    get_samplingres_by_samplingcd(a.sampling_code, '22', '11') end_time22,
    get_samplingres_by_samplingcd(a.sampling_code, '', '14') machine_code,
    (select getBatchCarIds(a.batch_no,a.batch_no_type) from dual) as  car_ids,
    case
    when a.batch_no_type = '0' then
    ((select sum(bb.net_qty)
    from rlrecordmstqy bb
    where bb.sample_code = a.sample_code) / 1000)
    when a.batch_no_type = '1' then
    ((select sum(bb.net_qty)
    from rlrecordmsthy bb
    where bb.sample_code = a.sample_code) / 1000)
    when a.batch_no_type = '7' then
    ((select sum(bb.net_qty)
    from rlrecordmsthy bb
    where bb.attach_batch_no = a.batch_no) / 1000)
    when a.batch_no_type = '8' then
    ((select sum(bb.net_qty)
    from rlrecordmstqy bb
    where bb.attach_batch_no = a.batch_no) / 1000)
    when a.batch_no_type = '9' then
    ((select sum(bb.all_net_qty)
    from batch_no_info bb
    where bb.sample_code = a.sample_code)/1000)
    when a.batch_no_type = '2' then
    (select bb.all_net_qty
    from batch_no_info bb
    where bb.sample_code = a.sample_code)
    when a.batch_no_type = '3' then
    (select bb.all_net_qty
    from batch_no_info bb
    where bb.sample_code = a.sample_code)
    when a.batch_no_type = '5' then
    (select bb.all_net_qty
    from batch_no_info bb
    where bb.sample_code = a.sample_code)
    end all_net_qty,

    case
    when a.batch_no_type = '0' then
    (select to_char(count(1))
    from rlrecordmstqy bb
    where bb.sample_code = a.sample_code)
    when a.batch_no_type = '1' then
    (select to_char(count(1))
    from rlrecordmsthy bb
    where bb.sample_code = a.sample_code)
    when a.batch_no_type in ('9', '2', '3') then
    (select '0' from dual)
    end car_cnt,

    case
    when a.batch_no_type = '0' then
    (select to_char(count(1))
    from rlrecordmstqy bb
    where bb.sample_code = a.sample_code
    and bb.jq_dtm is not null)
    when a.batch_no_type = '1' then
    (select to_char(count(1))
    from rlrecordmsthy bb
    where bb.sample_code = a.sample_code)
    when a.batch_no_type in ('9', '2', '3') then
    (select '0' from dual)
    end car_jq_cnt,
    <![CDATA[
           (select b.sample_team_no from  TAKE_SAMPLE_REC b where b.sample_code = a.sample_code and rownum < 2 ) as sample_team_no
        ]]>

    from batch_no_info a
    where 1 = 1

    <if test="batchNoType != null">
        AND A.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
    </if>

    <if test="batchNo != null">
        AND A.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
    </if>

    <if test="sampleCode != null">
        AND A.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
    </if>

    <if test="samplingCode != null">
        AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
    </if>
    <if test="laborCode != null">
        AND A.labor_code = #{laborCode,jdbcType=VARCHAR}
    </if>

    <if test="mineNo != null">
        AND A.MINE_NO = #{mineNo,jdbcType=VARCHAR}
    </if>
    <if test="startTime != null">
        <![CDATA[
                 and A.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
    </if>
    <if test="endTime != null">
        <![CDATA[
                 and A.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
    </if>
    order by A.insert_time desc
    )t
    WHERE 1=1
    <if test="zyType != null">
        AND t.zy_type = #{zyType,jdbcType=VARCHAR}
    </if>

    <include refid="paging_bottom_sql"/>
</select>

    <select id="qrySamplingRptFooter" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultMap="samplingRptResultMap" >
        select '汇总' sampling_code, sum(t.zy_weight) zy_weight
            from (select get_samplingres_by_samplingcd(a.sampling_code, '61', '2') zy_weight,
                          get_samplingres_by_samplingcd(a.sampling_code, '61', '3') zy_type,
                          case
                          when a.batch_no_type = '1' then
                          (select GOODS_RECEIVER
                          from rlrecordmsthy r
                          where r.sample_code = a.sample_code
                          and rownum =1)
                          when a.batch_no_type ='9' then
                          ''
                          end  goods_receiver,
                          a.insert_time
                          from batch_no_info a
                          where 1 = 1
                          <if test="batchNoType != null">
                              AND A.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
                          </if>

                          <if test="batchNo != null">
                              AND A.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
                          </if>

                          <if test="sampleCode != null">
                              AND A.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
                          </if>

                          <if test="samplingCode != null">
                              AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
                          </if>
                          <if test="laborCode != null">
                              AND A.labor_code = #{laborCode,jdbcType=VARCHAR}
                          </if>

                          <if test="mineNo != null">
                              AND A.MINE_NO = #{mineNo,jdbcType=VARCHAR}
                          </if>
                          <if test="startTime != null">
                              <![CDATA[
                                   and A.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                                   ]]>
                          </if>
                          <if test="endTime != null">
                              <![CDATA[
                                   and A.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                                   ]]>
                          </if>
            order by A.insert_time desc) t
            WHERE 1 = 1

            <if test="zyType != null">
                AND t.zy_type = #{zyType,jdbcType=VARCHAR}
            </if>
            <if test="goodsReceiver != null and goodsReceiver != ''">
                AND t.goods_receiver = #{goodsReceiver,jdbcType=VARCHAR}
            </if>
    </select>
    
    
    <select id="qrySamplingRptCnt4BB" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from batch_no_info a
        where 1 = 1
          and a.batch_no_type in ('0','1','2','9')

        <if test="sampleCode != null">
            AND A.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null">
            AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>

        <if test="laborCode != null">
            AND A.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>

        <if test="batchNoType != null">
            AND A.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null">
            <![CDATA[
                 and A.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>

        <if test="endTime != null">
            <![CDATA[
                 and A.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>
        <if test="mineNo != null">
            AND A.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="qrySamplingRptList4BB" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultMap="samplingRptResultMap" >
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
        from (select a.batch_no,
        a.sampling_code,
        a.sample_code,
        a.labor_code,
        a.batch_no_type,
        decode(a.batch_no_type, '0','汽车煤批次','1','火车煤批次','2','轮船煤批次','3','场地煤批次','5','系统外批次','6','船煤抽检批次','7','火车抽检批次','8','汽车抽检批次','9','入炉煤批次','15','抽查样批次','系统外批次') batch_type_name,
        (select dt.name
        from dictionary_table dt
        where dt.type = 'START_RAIL_STATION'
        and exists (select b.start_place
        from rlrecordmsthy b
        where dt.id = b.start_place
        and b.train_batch_no = a.batch_no)
        and rownum <![CDATA[< 2 ]]>) start_place_name,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
        (select mine_name from coal_mine where mine_no = a.mine_no) mine_name,
        (select ven_name from vendor_info where ven_no = a.ven_no) ven_name,
        a.coal_no,
        a.mine_no,
        a.ven_no,
        a.carrier_no,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '2') zy_weight,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '3') zy_type,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '4') zy_type_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '1') pack_code6,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '1') pack_code3,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '1') pack_code62,
        get_samplingres_by_samplingcd(a.sampling_code, '63', '1') pack_code63,
        get_samplingres_by_samplingcd(a.sampling_code, '31', '1') pack_code31,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '1') pack_code21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '1') pack_code22,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '1') pack_code33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '1') pack_code34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '1') pack_code35,
        get_samplingres_by_samplingcd(a.sampling_code, '71', '1') pack_code71,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '9') sample_weight61,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '9') sample_weight62,
        get_samplingres_by_samplingcd(a.sampling_code, '63', '9') sample_weight63,
        get_samplingres_by_samplingcd(a.sampling_code, '31', '9') sample_weight31,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '9') sample_weight32,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '9') sample_weight21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '9') sample_weight22,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '9') sample_weight33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '9') sample_weight34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '9') sample_weight35,
        get_samplingres_by_samplingcd(a.sampling_code, '71', '9') sample_weight71,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '5') start_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '6') user_code,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '7') user_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '8') end_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '10') start_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '11') end_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '10') start_time62,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '11') end_time62,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '10') start_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '11') end_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '10') start_time33,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '11') end_time33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '10') start_time34,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '11') end_time34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '10') start_time35,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '11') end_time35,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '10') start_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '11') end_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '10') start_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '11') end_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '', '14') machine_code,
        (select getBatchCarIds(a.batch_no,a.batch_no_type) from dual) as  car_ids,
        case
        when a.batch_no_type = '0' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '1' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '7' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '8' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '9' then
        ((select sum(bb.all_net_qty)
        from batch_no_info bb
        where bb.sample_code = a.sample_code)/1000)
        when a.batch_no_type = '2' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '3' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '5' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        end all_net_qty,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_cnt,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code
        and bb.jq_dtm is not null)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_jq_cnt,
        <![CDATA[
           (select b.sample_team_no from  TAKE_SAMPLE_REC b where b.sample_code = a.sample_code and rownum < 2 ) as sample_team_no
        ]]>

        from batch_no_info a
        where 1 = 1
          and a.batch_no_type in ('0','1','2','9')

        <if test="batchNoType != null">
            AND A.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null">
            AND A.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null">
            AND A.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null">
            AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>
        <if test="laborCode != null">
            AND A.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null">
            AND A.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null">
            <![CDATA[
                 and A.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>
        <if test="endTime != null">
            <![CDATA[
                 and A.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>
        order by A.insert_time desc
        )t
        WHERE 1=1
        <if test="zyType != null">
            AND t.zy_type = #{zyType,jdbcType=VARCHAR}
        </if>

        <include refid="paging_bottom_sql"/>
    </select>

    <select id="qrySamplingRptCnt4CCY" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from batch_no_info a
        where 1 = 1
        and a.batch_no_type not in ('0','1','2','9')

        <if test="sampleCode != null">
            AND A.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null">
            AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>

        <if test="laborCode != null">
            AND A.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null">
            <![CDATA[
                 and A.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>

        <if test="endTime != null">
            <![CDATA[
                 and A.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>
        <if test="mineNo != null">
            AND A.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="qrySamplingRptList4CCY" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultMap="samplingRptResultMap" >
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
        from (select a.batch_no,
        a.sampling_code,
        a.sample_code,
        a.labor_code,
        a.batch_no_type,
        decode(a.batch_no_type, '0','汽车煤批次','1','火车煤批次','2','轮船煤批次','3','场地煤批次','5','系统外批次','6','船煤抽检批次','7','火车抽检批次','8','汽车抽检批次','9','入炉煤批次','15','抽查样批次','系统外批次') batch_type_name,
        (select dt.name
        from dictionary_table dt
        where dt.type = 'START_RAIL_STATION'
        and exists (select b.start_place
        from rlrecordmsthy b
        where dt.id = b.start_place
        and b.train_batch_no = a.batch_no)
        and rownum <![CDATA[< 2 ]]>) start_place_name,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
        (select mine_name from coal_mine where mine_no = a.mine_no) mine_name,
        (select ven_name from vendor_info where ven_no = a.ven_no) ven_name,
        a.coal_no,
        a.mine_no,
        a.ven_no,
        a.carrier_no,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '2') zy_weight,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '3') zy_type,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '4') zy_type_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '1') pack_code6,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '1') pack_code3,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '1') pack_code62,
        get_samplingres_by_samplingcd(a.sampling_code, '63', '1') pack_code63,
        get_samplingres_by_samplingcd(a.sampling_code, '31', '1') pack_code31,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '1') pack_code21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '1') pack_code22,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '1') pack_code33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '1') pack_code34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '1') pack_code35,
        get_samplingres_by_samplingcd(a.sampling_code, '71', '1') pack_code71,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '9') sample_weight61,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '9') sample_weight62,
        get_samplingres_by_samplingcd(a.sampling_code, '63', '9') sample_weight63,
        get_samplingres_by_samplingcd(a.sampling_code, '31', '9') sample_weight31,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '9') sample_weight32,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '9') sample_weight21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '9') sample_weight22,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '9') sample_weight33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '9') sample_weight34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '9') sample_weight35,
        get_samplingres_by_samplingcd(a.sampling_code, '71', '9') sample_weight71,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '5') start_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '6') user_code,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '7') user_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '8') end_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '10') start_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '11') end_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '10') start_time62,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '11') end_time62,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '10') start_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '11') end_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '10') start_time33,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '11') end_time33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '10') start_time34,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '11') end_time34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '10') start_time35,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '11') end_time35,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '10') start_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '11') end_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '10') start_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '11') end_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '', '14') machine_code,
        (select getBatchCarIds(a.batch_no,a.batch_no_type) from dual) as  car_ids,
        case
        when a.batch_no_type = '0' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '1' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '7' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '8' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '9' then
        ((select sum(bb.all_net_qty)
        from batch_no_info bb
        where bb.sample_code = a.sample_code)/1000)
        when a.batch_no_type = '2' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '3' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '5' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        end all_net_qty,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_cnt,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code
        and bb.jq_dtm is not null)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_jq_cnt,
        <![CDATA[
           (select b.sample_team_no from  TAKE_SAMPLE_REC b where b.sample_code = a.sample_code and rownum < 2 ) as sample_team_no
        ]]>

        from batch_no_info a
        where 1 = 1
        and a.batch_no_type not in ('0','1','2','9')

        <if test="batchNo != null">
            AND A.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null">
            AND A.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null">
            AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>
        <if test="laborCode != null">
            AND A.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null">
            AND A.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null">
            <![CDATA[
                 and A.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>
        <if test="endTime != null">
            <![CDATA[
                 and A.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>
        order by A.insert_time desc
        )t
        WHERE 1=1
        <if test="zyType != null">
            AND t.zy_type = #{zyType,jdbcType=VARCHAR}
        </if>

        <include refid="paging_bottom_sql"/>
    </select>


    <select id="qrySamplingRptList4JJ" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultMap="samplingRptResultMap" >
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
        from (select a.batch_no,
        a.sampling_code,
        a.sample_code,
        a.labor_code,
        a.batch_no_type,
        decode(a.batch_no_type, '0','汽车煤批次','1','火车煤批次','2','轮船煤批次','3','场地煤批次','5','系统外批次','6','船煤抽检批次','7','火车抽检批次','8','汽车抽检批次','9','入炉煤批次','15','抽查样批次','系统外批次') batch_type_name,
        (select dt.name
        from dictionary_table dt
        where dt.type = 'START_RAIL_STATION'
        and exists (select b.start_place
        from rlrecordmsthy b
        where dt.id = b.start_place
        and b.train_batch_no = a.batch_no)
        and rownum <![CDATA[< 2 ]]>) start_place_name,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
        (select mine_name from coal_mine where mine_no = a.mine_no) mine_name,
        (select ven_name from vendor_info where ven_no = a.ven_no) ven_name,
        a.coal_no,
        a.mine_no,
        a.ven_no,
        a.carrier_no,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '2') zy_weight,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '3') zy_type,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '4') zy_type_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '1') pack_code6,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '1') pack_code3,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '1') pack_code62,
        get_samplingres_by_samplingcd(a.sampling_code, '63', '1') pack_code63,
        get_samplingres_by_samplingcd(a.sampling_code, '31', '1') pack_code31,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '1') pack_code21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '1') pack_code22,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '1') pack_code33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '1') pack_code34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '1') pack_code35,
        get_samplingres_by_samplingcd(a.sampling_code, '71', '1') pack_code71,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '9') sample_weight61,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '9') sample_weight62,
        get_samplingres_by_samplingcd(a.sampling_code, '63', '9') sample_weight63,
        get_samplingres_by_samplingcd(a.sampling_code, '31', '9') sample_weight31,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '9') sample_weight32,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '9') sample_weight21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '9') sample_weight22,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '9') sample_weight33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '9') sample_weight34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '9') sample_weight35,
        get_samplingres_by_samplingcd(a.sampling_code, '71', '9') sample_weight71,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '5') start_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '6') user_code,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '7') user_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '8') end_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '10') start_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '11') end_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '10') start_time62,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '11') end_time62,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '10') start_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '11') end_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '10') start_time33,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '11') end_time33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '10') start_time34,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '11') end_time34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '10') start_time35,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '11') end_time35,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '10') start_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '11') end_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '10') start_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '11') end_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '', '14') machine_code,
        (select getBatchCarIds(a.batch_no,a.batch_no_type) from dual) as  car_ids,
        case
        when a.batch_no_type = '0' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '1' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '7' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '8' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '9' then
        ((select sum(bb.all_net_qty)
        from batch_no_info bb
        where bb.sample_code = a.sample_code)/1000)
        when a.batch_no_type = '2' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '3' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '5' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        end all_net_qty,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_cnt,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code
        and bb.jq_dtm is not null)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_jq_cnt,

        case
        when a.batch_no_type = '0' then
        (select cf.ship_name
        from mine_card_info cd, ship_info cf
        where cd.ship_id = cf.ship_id
        and lower(cd.mine_card_id) in
        (select s.mine_card_id
        from rlrecordmstqy s
        where s.car_batch_no = a.batch_no
          and rownum = 1 ))
        when a.batch_no_type in ('1', '2', '6', '7', '8', '9', '10') then
        (select '-' from dual)
        end ship_name,
        <![CDATA[
           (select b.sample_team_no from  TAKE_SAMPLE_REC b where b.sample_code = a.sample_code and rownum < 2 ) as sample_team_no
        ]]>

        from batch_no_info a
        where 1 = 1

        <if test="batchNoType != null">
            AND A.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null">
            AND A.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null">
            AND A.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null">
            AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>
        <if test="laborCode != null">
            AND A.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null">
            AND A.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null">
            <![CDATA[
                 and A.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>
        <if test="endTime != null">
            <![CDATA[
                 and A.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>
        order by A.insert_time desc
        )t
        WHERE 1=1
        <if test="zyType != null">
            AND t.zy_type = #{zyType,jdbcType=VARCHAR}
        </if>

        <include refid="paging_bottom_sql"/>
    </select>

    <select id="qrySamplingRptList4Hpn" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultMap="samplingRptResultMap" >
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
        from (select a.batch_no,
        a.sampling_code,
        a.sample_code,
        a.labor_code,
        decode(a.batch_no_type, '0','汽车煤批次','1','火车煤批次','2','轮船煤批次','3','场地煤批次','5','系统外批次','6','船煤抽检批次','7','火车抽检批次','8','汽车抽检批次','9','入炉煤批次','系统外批次') batch_type_name,
        (select dt.name
        from dictionary_table dt
        where dt.type = 'START_RAIL_STATION'
        and exists (select b.start_place
        from rlrecordmsthy b
        where dt.id = b.start_place
        and b.train_batch_no = a.batch_no)
        and rownum <![CDATA[< 2 ]]>) start_place_name,
        (select coal_name from coal_type_rl where coal_no = a.coal_no) coal_name,
        (select mine_name from coal_mine where mine_no = a.mine_no) mine_name,
        (select ven_name from vendor_info where ven_no = a.ven_no) ven_name,
        a.coal_no,
        a.mine_no,
        a.ven_no,
        a.carrier_no,
        a.insert_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '2') zy_weight,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '3') zy_type,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '4') zy_type_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '1') pack_code6,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '1') pack_code3,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '1') pack_code62,
        get_samplingres_by_samplingcd(a.sampling_code, '63', '1') pack_code63,
        get_samplingres_by_samplingcd(a.sampling_code, '31', '1') pack_code31,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '1') pack_code21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '1') pack_code22,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '1') pack_code33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '1') pack_code34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '1') pack_code35,
        get_samplingres_by_samplingcd(a.sampling_code, '71', '1') pack_code71,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '9') sample_weight61,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '9') sample_weight62,
        get_samplingres_by_samplingcd(a.sampling_code, '63', '9') sample_weight63,
        get_samplingres_by_samplingcd(a.sampling_code, '31', '9') sample_weight31,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '9') sample_weight32,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '9') sample_weight21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '9') sample_weight22,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '9') sample_weight33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '9') sample_weight34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '9') sample_weight35,
        get_samplingres_by_samplingcd(a.sampling_code, '71', '9') sample_weight71,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '5') start_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '6') user_code,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '7') user_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '8') end_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '10') start_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '11') end_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '10') start_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '11') end_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '10') start_time33,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '11') end_time33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '10') start_time34,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '11') end_time34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '10') start_time35,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '11') end_time35,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '10') start_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '11') end_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '10') start_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '11') end_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '', '14') machine_code,
        (select getBatchCarIds(a.batch_no,a.batch_no_type) from dual) as  car_ids,
        case
        when a.batch_no_type = '0' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '1' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '7' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '8' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '9' then
        ((select sum(bb.all_net_qty)
        from batch_no_info bb
        where bb.sample_code = a.sample_code)/1000)
        when a.batch_no_type = '2' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '3' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        end all_net_qty,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_cnt,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code
        and bb.jq_dtm is not null)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_jq_cnt,
        <![CDATA[
           (select b.sample_team_no from  TAKE_SAMPLE_REC b where b.sample_code = a.sample_code and rownum < 2 ) as sample_team_no
        ]]>

        from batch_no_info a
        where 1 = 1

        <if test="batchNoType != null">
            AND A.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null">
            AND A.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null">
            AND A.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null">
            AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>
        <if test="laborCode != null">
            AND A.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null">
            AND A.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null">
            <![CDATA[
                 and A.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>
        <if test="endTime != null">
            <![CDATA[
                 and A.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>
        order by A.insert_time desc
        )t
        WHERE 1=1
        <if test="zyType != null">
            AND t.zy_type = #{zyType,jdbcType=VARCHAR}
        </if>

        <include refid="paging_bottom_sql"/>
    </select>
    
    <select id="qryKpiValue"  resultType="java.lang.String" >
        select PK_GET_DATA_FUNCTIONS.get_KPI_Value from dual
    </select>

    <resultMap id="samplingRptListResultMap" type="org.gxz.znrl.entity.SamplingRptEntity">
        <result column="sample_type" jdbcType="VARCHAR" property="sampleType" />
        <result column="coal_water" jdbcType="VARCHAR" property="coalWater" />
        <result column="coal_size" jdbcType="VARCHAR" property="coalSize" />
        <result column="pack_code" jdbcType="VARCHAR" property="packCode" />
        <result column="sample_weight" jdbcType="VARCHAR" property="sampleWeight" />
    </resultMap>

    <select id="qrySamplingRptListView" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultMap="samplingRptListResultMap" >
        SELECT DECODE(A.SAMPLE_TYPE,'71','13mm全水样',
                                    '61','6mm全水样',
                                    '62','6mm存查样',
                                    '31','3mm化验样',
                                    '32','3mm存查样',
                                    '21','0.2mm化验样',
                                    '22','0.2mm存查样',
                                    '33','3mm一次抽查样',
                                    '34','3mm二次抽查样',
                                    '35','3mm三次抽查样', '') SAMPLE_TYPE,
                   DECODE(A.COAL_WATER,'1','湿煤','2','一般湿煤','3','干煤','4','一般干煤','未知') COAL_WATER,
                   DECODE(A.COAL_SIZE,'1','13mm≤粒度＜50mm','2','50mm≤粒度＜100mm','未知') COAL_SIZE,
                   A.PACK_CODE,
                   A.SAMPLE_WEIGHT
              FROM PREPAR_SAMPLING_REC A
             WHERE 1 = 1
             AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
             order by  A.SAMPLE_TYPE desc
    </select>

    <select id="modifyMeasureData" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.MeasureDataEntity">
        {call MEASURE_DATA_MOD(#{recordNo,mode=IN,jdbcType=VARCHAR},
                                #{kdQty,mode=IN,jdbcType=VARCHAR},
                                #{mzQty,mode=IN,jdbcType=VARCHAR},
                                #{pzQty,mode=IN,jdbcType=VARCHAR},
                                #{tickQty,mode=IN,jdbcType=VARCHAR},
                                #{opCode,mode=IN,jdbcType=VARCHAR},
                                #{kdBak,mode=IN,jdbcType=VARCHAR},
                                #{result,mode=OUT,jdbcType=VARCHAR},
                                #{resultInfo,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="kdOperate" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.MeasureDataEntity">
        {call kd_operate(#{jsonStr,mode=IN,jdbcType=VARCHAR},
                         #{opCode,mode=IN,jdbcType=VARCHAR},
                         #{resCode,mode=OUT,jdbcType=VARCHAR},
                         #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>


    <resultMap id="truckFuelUnloadResultMap" type="org.gxz.znrl.entity.TruckFuelUnloadEntity">
        <result column="record_no" jdbcType="VARCHAR" property="recordNo" />
        <result column="card_id" jdbcType="VARCHAR" property="cardId" />
        <result column="car_id" jdbcType="VARCHAR" property="carId" />
        <result column="xm_dtm" jdbcType="VARCHAR" property="xmDtm" />
        <result column="ks_qty" jdbcType="VARCHAR" property="ksQty" />
        <result column="kg_qty" jdbcType="VARCHAR" property="kgQty" />
        <result column="insert_time" jdbcType="VARCHAR" property="insertTime" />
        <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
        <result column="op_code" jdbcType="VARCHAR" property="opCode" />
        <result column="update_code" jdbcType="VARCHAR" property="updateCode" />
        <result column="kd_qty" jdbcType="VARCHAR" property="kdQty" />
        <result column="remark" jdbcType="VARCHAR" property="kdBak" />
    </resultMap>

    <select id="qryTruckFuelUnload" parameterType="org.gxz.znrl.entity.TruckFuelUnloadEntity" resultMap="truckFuelUnloadResultMap" >
        SELECT t.RECORD_NO,
               t.CARD_ID,
               t.CAR_ID,
               t.XM_DTM,
               t.KS_QTY/1000 KS_QTY,
               t.KG_QTY/1000 KG_QTY,
               t.INSERT_TIME,
               t.UPDATE_TIME,
               t.OP_CODE,
               t.UPDATE_CODE,
               t.KD_QTY/1000 KD_QTY,
               t.remark
          FROM RLCARXMMST T
         WHERE  T.RECORD_NO = #{recordNo, jdbcType = VARCHAR}
    </select>

    <resultMap id="truckFuelEntranceRecordResultMap" type="org.gxz.znrl.entity.TruckFuelEntranceRecordEntity">
        <result column="record_no" jdbcType="VARCHAR" property="recordNo" />
        <result column="mz_qty" jdbcType="VARCHAR" property="mzQty" />
        <result column="pz_qty" jdbcType="VARCHAR" property="pzQty" />
        <result column="tick_qty" jdbcType="VARCHAR" property="tickQty" />
        <result column="kd_qty" jdbcType="VARCHAR" property="kdQty" />
        <result column="car_id" jdbcType="VARCHAR" property="carId" />
        <result column="kd_bak" jdbcType="VARCHAR" property="kdBak" />
    </resultMap>

    <select id="qryTruckFuelEntranceRecord" parameterType="org.gxz.znrl.entity.TruckFuelEntranceRecordEntity" resultMap="truckFuelEntranceRecordResultMap" >
        SELECT T.CAR_ID, T.RECORD_NO, T.MZ_QTY/1000 MZ_QTY, T.PZ_QTY/1000 PZ_QTY, T.TICK_QTY/1000 TICK_QTY, T.KD_QTY/1000 KD_QTY, REMARK KD_BAK FROM RLRECORDMSTQY T WHERE T.RECORD_NO = #{recordNo,jdbcType=VARCHAR}
    </select>
	
	<select id="qrySampleResultData" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultType="java.lang.String" >
         select get_takeSampleReport(#{sampleCode,jdbcType=VARCHAR}) from dual
    </select>

    <select id="qrySamplingResultData" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultType="java.lang.String" >
          select get_SamplingReport(#{samplingCode,jdbcType=VARCHAR}) from dual
    </select>

    <select id="qrySamplingRptList4JB" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultMap="samplingRptResultMap" >
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
        from (select a.batch_no,
        a.sampling_code,
        a.sample_code,
        a.labor_code,
        decode(a.batch_no_type, '0','汽车煤批次','1','火车煤批次','2','轮船煤批次','3','场地煤批次','5','系统外批次','6','船煤抽检批次','7','火车抽检批次','8','汽车抽检批次','9','入炉煤批次','系统外批次') batch_type_name,
        (select dt.name
        from dictionary_table dt
        where dt.type = 'START_RAIL_STATION'
        and exists (select b.start_place
        from rlrecordmsthy b
        where dt.id = b.start_place
        and b.train_batch_no = a.batch_no)
        and rownum <![CDATA[< 2 ]]>) start_place_name,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
        (select mine_name from coal_mine where mine_no = a.mine_no) mine_name,
        (select ven_name from vendor_info where ven_no = a.ven_no) ven_name,
        a.coal_no,
        a.mine_no,
        a.ven_no,
        a.carrier_no,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '2') zy_weight,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '3') zy_type,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '4') zy_type_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '1') pack_code6,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '1') pack_code3,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '1') pack_code62,
        get_samplingres_by_samplingcd(a.sampling_code, '63', '1') pack_code63,
        get_samplingres_by_samplingcd(a.sampling_code, '31', '1') pack_code31,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '1') pack_code21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '1') pack_code22,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '1') pack_code33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '1') pack_code34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '1') pack_code35,
        get_samplingres_by_samplingcd(a.sampling_code, '71', '1') pack_code71,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '9') sample_weight61,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '9') sample_weight62,
        get_samplingres_by_samplingcd(a.sampling_code, '63', '9') sample_weight63,
        get_samplingres_by_samplingcd(a.sampling_code, '31', '9') sample_weight31,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '9') sample_weight32,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '9') sample_weight21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '9') sample_weight22,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '9') sample_weight33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '9') sample_weight34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '9') sample_weight35,
        get_samplingres_by_samplingcd(a.sampling_code, '71', '9') sample_weight71,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '5') start_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '6') user_code,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '7') user_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '8') end_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '10') start_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '11') end_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '10') start_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '11') end_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '10') start_time33,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '11') end_time33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '10') start_time34,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '11') end_time34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '10') start_time35,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '11') end_time35,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '10') start_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '11') end_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '10') start_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '11') end_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '', '14') machine_code,
        (select getBatchCarIds(a.batch_no,a.batch_no_type) from dual) as  car_ids,
         get_ship_info_by_batchno(a.batch_no,'1')                  ship_name,
         get_ship_info_by_batchno (a.batch_no,'2')              ship_trans_no,

        case
        when a.batch_no_type = '0' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '1' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '7' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '8' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '9' then
        ((select sum(bb.all_net_qty)
        from batch_no_info bb
        where bb.sample_code = a.sample_code)/1000)
        when a.batch_no_type = '2' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '3' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        end all_net_qty,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_cnt,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code
        and bb.jq_dtm is not null)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_jq_cnt,

        <![CDATA[
        (select start_time from prepar_sampling_rec b where a.sampling_code  = b.sampling_code and rownum < 2 ) insert_time,
          ]]>

        <![CDATA[
           (select b.sample_team_no from  TAKE_SAMPLE_REC b where b.sample_code = a.sample_code and rownum < 2 ) as sample_team_no
        ]]>

        from batch_no_info a

        where 1 = 1

        <if test="batchNoType != null">
            AND A.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null">
            AND A.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null">
            AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>
        <if test="laborCode != null">
            AND A.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null">
            AND A.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>
        order by  insert_time desc
        )t
        WHERE 1=1

        <if test="startTime != null">
            <![CDATA[
                 and t.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>

        <if test="endTime != null">
            <![CDATA[
                 and t.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>

        <if test="zyType != null">
            AND t.zy_type = #{zyType,jdbcType=VARCHAR}
        </if>



        <include refid="paging_bottom_sql"/>
    </select>


    <select id="qrySamplingRptList4LC" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultMap="samplingRptResultMap" >
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
        from (select a.batch_no,
        a.sampling_code,
        a.sample_code,
        a.labor_code,
        a.batch_no_type,
        decode(a.arguementFlag,'0','无','1','有','无')arguementFlag,
        decode(a.batch_no_type, '0','汽车煤批次','1','火车煤批次','2','轮船煤批次','3','场地煤批次','5','系统外批次','6','船煤抽检批次','7','火车抽检批次','8','汽车抽检批次','9','入炉煤批次','系统外批次') batch_type_name,
        (select dt.name
        from dictionary_table dt
        where dt.type = 'START_RAIL_STATION'
        and exists (select b.start_place
        from rlrecordmsthy b
        where dt.id = b.start_place
        and b.train_batch_no = a.batch_no)
        and rownum <![CDATA[< 2 ]]>) start_place_name,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
        (select mine_name from coal_mine where mine_no = a.mine_no) mine_name,
        (select ven_name from vendor_info where ven_no = a.ven_no) ven_name,
        a.coal_no,
        a.mine_no,
        a.ven_no,
        a.carrier_no,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '2') zy_weight,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '3') zy_type,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '4') zy_type_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '1') pack_code6,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '1') pack_code3,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '1') pack_code62,
        get_samplingres_by_samplingcd(a.sampling_code, '63', '1') pack_code63,
        get_samplingres_by_samplingcd(a.sampling_code, '31', '1') pack_code31,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '1') pack_code21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '1') pack_code22,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '1') pack_code33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '1') pack_code34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '1') pack_code35,
        get_samplingres_by_samplingcd(a.sampling_code, '71', '1') pack_code71,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '9') sample_weight61,
        get_samplingres_by_samplingcd(a.sampling_code, '62', '9') sample_weight62,
        get_samplingres_by_samplingcd(a.sampling_code, '63', '9') sample_weight63,
        get_samplingres_by_samplingcd(a.sampling_code, '31', '9') sample_weight31,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '9') sample_weight32,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '9') sample_weight21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '9') sample_weight22,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '9') sample_weight33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '9') sample_weight34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '9') sample_weight35,
        get_samplingres_by_samplingcd(a.sampling_code, '71', '9') sample_weight71,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '5') start_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '6') user_code,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '7') user_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '8') end_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '10') start_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '11') end_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '10') start_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '11') end_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '10') start_time33,
        get_samplingres_by_samplingcd(a.sampling_code, '33', '11') end_time33,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '10') start_time34,
        get_samplingres_by_samplingcd(a.sampling_code, '34', '11') end_time34,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '10') start_time35,
        get_samplingres_by_samplingcd(a.sampling_code, '35', '11') end_time35,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '10') start_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '11') end_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '10') start_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '11') end_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '', '14') machine_code,
        (select getBatchCarIds(a.batch_no,a.batch_no_type) from dual) as  car_ids,
        case
        when a.batch_no_type = '0' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '1' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '7' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '8' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '9' then
        ((select sum(bb.all_net_qty)
        from batch_no_info bb
        where bb.sample_code = a.sample_code)/1000)
        when a.batch_no_type = '2' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '3' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        end all_net_qty,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_cnt,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code
        and bb.jq_dtm is not null)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_jq_cnt,
        <![CDATA[
           (select b.sample_team_no from  TAKE_SAMPLE_REC b where b.sample_code = a.sample_code and rownum < 2 ) as sample_team_no
        ]]>

        from batch_no_info a
        where 1 = 1

        <if test="batchNoType != null">
            AND A.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null">
            AND A.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null">
            AND A.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null">
            AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>
        <if test="laborCode != null">
            AND A.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null">
            AND A.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null">
            <![CDATA[
                 and A.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>
        <if test="endTime != null">
            <![CDATA[
                 and A.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>
        order by A.insert_time desc
        )t
        WHERE 1=1
        <if test="zyType != null">
            AND t.zy_type = #{zyType,jdbcType=VARCHAR}
        </if>

        <include refid="paging_bottom_sql"/>
    </select>

    <select id="setArguementBatch" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.SamplingRptEntity">
        {call pk_register.setArguementBatch(#{batchNo,mode=IN,jdbcType=VARCHAR},
                                            #{arguementFlag,mode=IN,jdbcType=VARCHAR},
                                            #{opCode,mode=IN,jdbcType=VARCHAR},
                                            #{resCode,mode=OUT,jdbcType=VARCHAR},
                                            #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <!--人工制样记录 查询 xxs 20180106-->
    <select id="qryManualSamplingCnt" parameterType="org.gxz.znrl.entity.ManualSamplingRecordEntity" resultType="java.lang.Integer" >
        select count(1)
        from manual_sampling_record a
        where 1 = 1

        <if test="startTime != null" >
            and a.sampling_date  <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endTime != null" >
            and a.sampling_date  <![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>

        <if test="id != null" >
            and a.id  <![CDATA[ = ]]> to_number(#{id,jdbcType=VARCHAR})
        </if>

    </select>

    <!--人工制样记录 查询 xxs 20180106-->
    <select id="qryManualSamplingList"  parameterType="org.gxz.znrl.entity.ManualSamplingRecordEntity" resultMap="ManualSamplingResultMap">
        SELECT
        id manual_sampling_id,
        to_char(sampling_date,'yyyy-mm-dd') sampling_date,
        sampling_code,
        sample_weight,
        sample6_weight,
        sample3_weight,
        sample2_weight,
        sample_size,
        begin_dt,
        end_dt,
        lianhe_device,
        posui_device,
        guoshai3mm_rate,
        twofenqi_device,
        dry_begin_dt,
        dry_end_dt,
        twofensui_device,
        guoshai2_rate,
        makecode,
        takecode,
        (select cd.realname from security_user cd where cd.id = makecode) makename,
        (select cg.realname from security_user cg where cg.id = takecode) takename,
        remark,
        sample_type,
        coal_size,
        decode(a.sample_type,'0','在线制样','1','离线制样','未知') sample_type_name
        FROM manual_sampling_record a
        WHERE 1 = 1

        <if test="startTime != null" >
            and a.sampling_date  <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endTime != null" >
            and a.sampling_date  <![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>

        <if test="samplingCode != null" >
            and a.sampling_code  <![CDATA[ = ]]> to_number(#{samplingCode,jdbcType=VARCHAR})
        </if>
        order by a.id desc
    </select>

    <!--人工制样记录  xxs 20180106-->
    <resultMap id="ManualSamplingResultMap" type="org.gxz.znrl.entity.ManualSamplingRecordEntity">
        <result column="manual_sampling_id" jdbcType="VARCHAR" property="manualSamplingId" />
        <result column="id" jdbcType="VARCHAR" property="id" />
        <result column="sampling_date" jdbcType="VARCHAR" property="samplingDate" />
        <result column="sampling_code" jdbcType="VARCHAR" property="samplingCode" />
        <result column="sample_weight" jdbcType="VARCHAR" property="sampleWeight" />
        <result column="sample6_weight" jdbcType="VARCHAR" property="sample6Weight" />
        <result column="sample3_weight" jdbcType="VARCHAR" property="sample3Weight" />
        <result column="sample2_weight" jdbcType="VARCHAR" property="sample2Weight" />
        <result column="sample_size" jdbcType="VARCHAR" property="sampleSize" />
        <result column="begin_dt" jdbcType="VARCHAR" property="beginDt" />
        <result column="end_dt" jdbcType="VARCHAR" property="endDt" />
        <result column="lianhe_device" jdbcType="VARCHAR" property="lianheDevice" />
        <result column="posui_device" jdbcType="VARCHAR" property="posuiDevice" />
        <result column="guoshai3mm_rate" jdbcType="VARCHAR" property="guoshai3mmRate" />
        <result column="twofenqi_device" jdbcType="VARCHAR" property="twofenqiDevice" />
        <result column="dry_begin_dt" jdbcType="VARCHAR" property="dryBeginDt" />
        <result column="dry_end_dt" jdbcType="VARCHAR" property="dryEndDt" />
        <result column="twofensui_device" jdbcType="VARCHAR" property="twofensuiDevice" />
        <result column="guoshai2_rate" jdbcType="VARCHAR" property="guoshai2Rate" />
        <result column="makecode" jdbcType="VARCHAR" property="makeCode" />
        <result column="takecode" jdbcType="VARCHAR" property="takeCode" />
        <result column="makename" jdbcType="VARCHAR" property="makeName" />
        <result column="takename" jdbcType="VARCHAR" property="takeName" />
        <result column="fremark" jdbcType="VARCHAR" property="remark" />
        <result column="sample_type" jdbcType="VARCHAR" property="sampleType" />
        <result column="sample_type_name" jdbcType="VARCHAR" property="sampleTypeName" />
        <result column="opCode" jdbcType="VARCHAR" property="opCode" />
        <result column="updateCode" jdbcType="VARCHAR" property="updateCode" />
        <result column="coal_size" jdbcType="VARCHAR" property="size" />

    </resultMap>

    <!--人工制样记录 编辑 xxs 20180106-->
    <select id="addManualSamplingRecInfo" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.ManualSamplingRecordEntity">
      {call manual_sampling_result_record(#{jsonString,mode=IN,jdbcType=VARCHAR},
                                          #{resCode,mode=OUT,jdbcType=VARCHAR},
                                          #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>



    <select id="qrySamplingRptCnt4JB" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from (select a.batch_no,
        a.sampling_code,
        a.sample_code,
        a.labor_code,
        a.mine_no,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '3') zy_type,

        <![CDATA[
        (select  start_time from prepar_sampling_rec b where a.sampling_code  = b.sampling_code and rownum < 2 ) insert_time
          ]]>

        from batch_no_info a

        where 1 = 1

        <if test="batchNoType != null">
            AND a.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
        </if>
        )t
        WHERE 1=1

        <if test="sampleCode != null">
            AND t.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null">
            AND t.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>

        <if test="laborCode != null">
            AND t.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null">
            <![CDATA[
                 and t.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>

        <if test="endTime != null">
            <![CDATA[
                 and t.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>

        <if test="mineNo != null">
            AND t.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>

        <if test="zyType != null">
            AND t.zy_type = #{zyType,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="qrySamplingRptCnt4HF" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from (select
        get_samplingres_by_samplingcd(a.sampling_code, '61', '3') zy_type,
        case
        when a.batch_no_type = '1' then
        (select GOODS_RECEIVER
        from rlrecordmsthy r
        where r.sample_code = a.sample_code
        and rownum =1)
        when a.batch_no_type ='9' then
        ''
        end  goods_receiver,
        a.insert_time

        from batch_no_info a

        where 1 = 1

        <if test="batchNoType != null">
            AND a.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
        </if>
        <if test="batchNo != null">
            AND a.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
        </if>
        <if test="sampleCode != null">
            AND a.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null">
            AND a.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>

        <if test="laborCode != null">
            AND a.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null">
            <![CDATA[
                 and a.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>

        <if test="endTime != null">
            <![CDATA[
                 and a.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>

        <if test="mineNo != null">
            AND a.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>
        )t
        WHERE 1=1

        <if test="zyType != null">
            AND t.zy_type = #{zyType,jdbcType=VARCHAR}
        </if>
        <if test="goodsReceiver != null and goodsReceiver != ''">
            AND t.goods_receiver = #{goodsReceiver,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="qrySamplingRptList4HF" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultMap="samplingRptResultMap" >
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
        from (select a.batch_no,
        a.sampling_code,
        a.sample_code,
        a.labor_code,
        a.batch_no_type,
        decode(a.batch_no_type, '0','汽车煤批次','1','火车煤批次','2','轮船煤批次','3','场地煤批次','5','系统外批次','6','船煤抽检批次','7','火车抽检批次','8','汽车抽检批次','9','入炉煤批次','15','抽查样批次','系统外批次') batch_type_name,
        case when batch_no_type ='1' then
        (select dt.name
        from rlrecordmsthy rl, dictionary_table dt
        where rl.train_batch_no = a.batch_no
        and rl.start_place = dt.id
        and dt.type = 'START_RAIL_STATION'
        and rownum = 1 ) end start_place_name,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
        (select mine_name from coal_mine where mine_no = a.mine_no) mine_name,
        (select ven_name from vendor_info where ven_no = a.ven_no) ven_name,
        a.coal_no,
        a.mine_no,
        a.ven_no,
        a.carrier_no,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '2') zy_weight,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '3') zy_type,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '4') zy_type_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '1') pack_code6,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '1') pack_code3,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '1') pack_code21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '1') pack_code22,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '9') sample_weight61,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '9') sample_weight32,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '9') sample_weight21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '9') sample_weight22,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '5') start_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '6') user_code,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '7') user_name,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '8') end_time,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '10') start_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '61', '11') end_time61,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '10') start_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '32', '11') end_time32,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '10') start_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '21', '11') end_time21,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '10') start_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '22', '11') end_time22,
        get_samplingres_by_samplingcd(a.sampling_code, '', '14') machine_code,
        (select getBatchCarIds(a.batch_no,a.batch_no_type) from dual) as  car_ids,
        case
        when a.batch_no_type = '0' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '1' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code) / 1000)
        when a.batch_no_type = '7' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '8' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.attach_batch_no = a.batch_no) / 1000)
        when a.batch_no_type = '9' then
        ((select sum(bb.all_net_qty)
        from batch_no_info bb
        where bb.sample_code = a.sample_code))
        when a.batch_no_type = '2' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '3' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '5' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = a.sample_code)
        end all_net_qty,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_cnt,

        case
        when a.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = a.sample_code
        and bb.jq_dtm is not null)
        when a.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = a.sample_code)
        when a.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_jq_cnt,
        case
        when a.batch_no_type = '1' then
        (select GOODS_RECEIVER
           from rlrecordmsthy r
          where r.sample_code = a.sample_code
            and rownum =1)
        when a.batch_no_type ='9' then
        ''
        end  goods_receiver,
        <![CDATA[
           (select b.sample_team_no from  TAKE_SAMPLE_REC b where b.sample_code = a.sample_code and rownum < 2 ) as sample_team_no
        ]]>

        from batch_no_info a
        where 1 = 1

        <if test="batchNoType != null">
            AND A.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null">
            AND A.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null">
            AND A.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null">
            AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>
        <if test="laborCode != null">
            AND A.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null">
            AND A.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null">
            <![CDATA[
                 and A.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>
        <if test="endTime != null">
            <![CDATA[
                 and A.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>
        order by A.insert_time desc
        )t
        WHERE 1=1
        <if test="zyType != null">
            AND t.zy_type = #{zyType,jdbcType=VARCHAR}
        </if>
        <if test="goodsReceiver != null and goodsReceiver != ''">
            AND t.goods_receiver = #{goodsReceiver,jdbcType=VARCHAR}
        </if>

        <include refid="paging_bottom_sql"/>
    </select>


<!--人工采样记录 查询 xxs 20180301-->
    <select id="qryManualSampleCnt" parameterType="org.gxz.znrl.entity.ManualSampleRecordEntity" resultType="java.lang.Integer" >
        select count(1)
        from manual_sample_record a
        where 1 = 1

        <if test="startTime != null" >
            and a.sample_date  <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endTime != null" >
            and a.sample_date  <![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>

        <if test="id != null" >
            and a.id  <![CDATA[ = ]]> to_number(#{id,jdbcType=VARCHAR})
        </if>

       <if test="sampleCode != null" >
            and a.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null" >
            and a.mine_no  =  #{mineNo,jdbcType=VARCHAR}
        </if>
    </select>

    <!--人工采样记录 查询 xxs 20180301-->
    <select id="qryManualSampleList"  parameterType="org.gxz.znrl.entity.ManualSampleRecordEntity" resultMap="ManualSampleResultMap">
        <include refid="paging_top_sql"/>
        select q.*,rownum rownumber FROM (
        SELECT
        id manual_sample_id,
        batch_no,
        sample_code,
        mine_no,
        (select cd.mine_name from coal_mine cd where cd.mine_no = a.mine_no) mine_name,
        car_cnt,
        all_net_qty,
        nominal_max_size,
        sample_area,
        sample_cnt,
        sample_weight,
        all_sample_weight,
        sample_mjcode,
        sample_opcode,
        (select ct.realname from security_user ct where ct.id = sample_mjcode) sample_mjname,
        (select cg.realname from security_user cg where cg.id = sample_opcode) sample_opname,
        to_char(sample_date,'yyyy-mm-dd') sample_date,
        sample_place,
        opcode,
        (select cs.realname from security_user cs where cs.id = opcode) opName,
        remark
        FROM manual_sample_record a
        WHERE 1 = 1

        <if test="startTime != null" >
            and a.sample_date  <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endTime != null" >
            and a.sample_date  <![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>

        <if test="sampleCode != null" >
            and a.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null" >
            and a.mine_no =  #{mineNo,jdbcType=VARCHAR}
        </if>
        order by a.id desc) q
        <include refid="paging_bottom_sql"/>
    </select>

    <select id="qryManualSampleListFoot"  parameterType="org.gxz.znrl.entity.ManualSampleRecordEntity" resultMap="ManualSampleResultMap">
        select z.sample_code,sum(z.car_cnt) car_cnt,sum(z.all_net_qty) all_net_qty,sum(z.sample_cnt) sample_cnt,sum(z.sample_weight) sample_weight,sum(z.all_sample_weight) all_sample_weight
        from(
        SELECT
        '汇总' sample_code,
        car_cnt,
        all_net_qty,
        sample_cnt,
        sample_weight,
        all_sample_weight
        FROM manual_sample_record a
        WHERE 1 = 1
        <if test="startTime != null">
            and a.sample_date  <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')
        </if>

        <if test="endTime != null">
            and a.sample_date  <![CDATA[ <= ]]> to_date(#{endTime,jdbcType=VARCHAR}, 'yyyy-mm-dd')+1-0.00001
        </if>

        <if test="sampleCode != null">
            and a.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="mineNo != null">
            and a.mine_no = #{mineNo,jdbcType=VARCHAR}
        </if>
        )z
        group by z.sample_code
    </select>

    <!--人工采样记录  xxs 20180301-->
    <resultMap id="ManualSampleResultMap" type="org.gxz.znrl.entity.ManualSampleRecordEntity">
        <result column="manual_sample_id" jdbcType="VARCHAR" property="manualSampleId" />
        <result column="id" jdbcType="VARCHAR" property="id" />
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="sample_code" jdbcType="VARCHAR" property="sampleCode" />
        <result column="ven_no" jdbcType="VARCHAR" property="venNo" />
        <result column="mine_no" jdbcType="VARCHAR" property="mineNo" />
        <result column="mine_name" jdbcType="VARCHAR" property="mineName" />
        <result column="coal_no" jdbcType="VARCHAR" property="coalNo" />
        <result column="car_cnt" jdbcType="VARCHAR" property="carCnt" />
        <result column="all_net_qty" jdbcType="VARCHAR" property="allNetQty" />
        <result column="nominal_max_size" jdbcType="VARCHAR" property="nominalMaxSize" />
        <result column="sample_area" jdbcType="VARCHAR" property="sampleArea" />
        <result column="sample_cnt" jdbcType="VARCHAR" property="sampleCnt" />
        <result column="sample_weight" jdbcType="VARCHAR" property="sampleWeight" />
        <result column="all_sample_weight" jdbcType="VARCHAR" property="allSampleWeight" />
        <result column="sample_mjcode" jdbcType="VARCHAR" property="sampleMjcode" />
        <result column="sample_mjname" jdbcType="VARCHAR" property="sampleMjname" />
        <result column="sample_opcode" jdbcType="VARCHAR" property="sampleOpcode" />
        <result column="sample_opname" jdbcType="VARCHAR" property="sampleOpname" />
        <result column="sample_date" jdbcType="VARCHAR" property="sampleDate" />
        <result column="sample_place" jdbcType="VARCHAR" property="samplePlace" />
        <result column="opCode" jdbcType="VARCHAR" property="opCode" />
        <result column="opName" jdbcType="VARCHAR" property="opName" />
        <result column="updateCode" jdbcType="VARCHAR" property="updateCode" />
        <result column="updateName" jdbcType="VARCHAR" property="updateName" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />

    </resultMap>

    <!--人工采样记录 编辑 xxs 20180301-->
    <select id="addManualSampleRecInfo" statementType="CALLABLE" parameterType="org.gxz.znrl.entity.ManualSampleRecordEntity">
      {call manual_sample_result_record(#{jsonString,mode=IN,jdbcType=VARCHAR},
                                        #{resCode,mode=OUT,jdbcType=VARCHAR},
                                        #{resMsg,mode=OUT,jdbcType=VARCHAR})}
    </select>

    <select id="qryTotalHpQty" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select nvl(sum(a.net_qty), 0)/1000
        from RLRECORDMSTQY a
        where 1 = 1
        and a.jq_dtm is not NULL
        <if test="beginTime != null" >
            <![CDATA[
             and a.jq_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.jq_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="kdStatus != null" >
            and getCarKdSta(a.record_no) = #{kdStatus,jdbcType=VARCHAR}
        </if>

        <if test="mineCardType != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.mine_card_type = #{mineCardType,jdbcType=VARCHAR})
        </if>

        <if test="shipNo != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.ship_id = #{shipNo,jdbcType=VARCHAR})
        </if>
    </select>

    <select id="qryTotalDiffQty" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select sum(nvl(a.tick_qty,0) - (nvl(a.mz_qty,0)-nvl(a.pz_qty,0)))/1000
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="leaveBeginTime != null" >
            <![CDATA[
             and a.leave_dtm >= to_date(#{leaveBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="leaveEndTime != null" >
            <![CDATA[
             and a.leave_dtm <= to_date(#{leaveEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="kdStatus != null" >
            and getCarKdSta(a.record_no) = #{kdStatus,jdbcType=VARCHAR}
        </if>

        <if test="mineCardType != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.mine_card_type = #{mineCardType,jdbcType=VARCHAR})
        </if>

        <if test="shipNo != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.ship_id = #{shipNo,jdbcType=VARCHAR})
        </if>
    </select>

    <select id="qryTotalNoKdNetQty" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select nvl(sum(a.mz_qty-a.pz_qty), 0)/1000
        from RLRECORDMSTQY a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="leaveBeginTime != null" >
            <![CDATA[
             and a.leave_dtm >= to_date(#{leaveBeginTime,jdbcType=VARCHAR},'yyyy-mm-dd')
             ]]>
        </if>

        <if test="leaveEndTime != null" >
            <![CDATA[
             and a.leave_dtm <= to_date(#{leaveEndTime,jdbcType=VARCHAR},'yyyy-mm-dd')+1-0.00001
             ]]>
        </if>

        <if test="venNo != null" >
            and a.ven_no = #{venNo,jdbcType=VARCHAR}
        </if>

        <if test="carrierNo != null" >
            and a.carrier_no = #{carrierNo,jdbcType=VARCHAR}
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and a.coal_no = #{coalNo,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null" >
            and a.car_batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="status != null" >
            and getCarStatusInfo(a.record_no) = #{status,jdbcType=VARCHAR}
        </if>

        <if test="coalMine != null" >
            and a.colry_no = #{coalMine,jdbcType=VARCHAR}
        </if>

        <if test="kdStatus != null" >
            and getCarKdSta(a.record_no) = #{kdStatus,jdbcType=VARCHAR}
        </if>

        <if test="mineCardType != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.mine_card_type = #{mineCardType,jdbcType=VARCHAR})
        </if>

        <if test="shipNo != null" >
            and exists (select a.mine_card_id from mine_card_info cd where lower(a.mine_card_id)=lower(cd.mine_card_id) and cd.ship_id = #{shipNo,jdbcType=VARCHAR})
        </if>
    </select>


    <!--宣威 要增加按批次统计的页面 xxs20180329-->
    <select id="qryWeightRptListCnt4CarBatch" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from batch_no_info a
        where 1 = 1
        <if test="batchNoType != null" >
            and a.batch_no_type = #{batchNoType}
        </if>
        <if test="batchNoType == null" >
            and a.batch_no_type in ('0','1')
        </if>

        <if test="beginTime != null" >
            <![CDATA[
             and a.insert_time >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.insert_time <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

    </select>

    <!--宣威 要增加按批次统计的页面 xxs20180329-->
    <select id="qryWeightRptList4CarBatch" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultMap="weightRptResultMap" >
        <include refid="paging_top_sql" />
        select m.*, rownum rownumber
        from (

        <if test="batchNoType ==0" >
            select a.batch_no car_batch_no,
            to_char(a.insert_time, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
            (select vi.ven_name from vendor_info vi where vi.ven_no = a.ven_no) ven_nam,
            (select cm.mine_name from coal_mine cm where cm.mine_no = a.mine_no) coal_mine,
            (select ct.coal_name from COAL_TYPE ct where ct.coal_no = a.coal_no) coal_nam,
            (select count(1) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) car_count,
            (select to_char(sum(ai.mz_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) mz_qty,
            (select to_char(sum(ai.pz_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) pz_qty,
            (select to_char(sum(ai.net_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) net_qty,
            (select to_char(sum(ai.tick_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) tick_qty,
            (select to_char(sum(ai.kd_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) kd_qty
            from batch_no_info a
            where 1 = 1
            and a.batch_no_type = '0'
            <if test="beginTime != null" >
                <![CDATA[
             and a.insert_time >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.insert_time <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
            </if>
        </if>

        <if test="batchNoType ==1" >
            select a.batch_no car_batch_no,
            to_char(a.insert_time, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
            (select vi.ven_name from vendor_info vi where vi.ven_no = a.ven_no) ven_nam,
            (select cm.mine_name from coal_mine cm where cm.mine_no = a.mine_no) coal_mine,
            (select ct.coal_name from COAL_TYPE ct where ct.coal_no = a.coal_no) coal_nam,
            (select count(1) from rlrecordmsthy ai where ai.train_no=a.train_no) car_count,
            (select to_char(sum(ai.mz_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) mz_qty,
            (select to_char(sum(ai.pz_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) pz_qty,
            (select to_char(sum(ai.net_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) net_qty,
            (select to_char(sum(ai.tick_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) tick_qty,
            (select to_char(sum(nvl(ai.kd_qty,0))/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) kd_qty
            from batch_no_info a
            where 1 = 1
            and a.batch_no_type = '1'
            <if test="beginTime != null" >
                <![CDATA[
             and a.insert_time >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
            </if>

            <if test="endTime != null" >
                <![CDATA[
             and a.insert_time <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
            </if>
        </if>

        <if test="batchNoType == null" >
            select a.batch_no car_batch_no,
            to_char(a.insert_time, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
            (select vi.ven_name from vendor_info vi where vi.ven_no = a.ven_no) ven_nam,
            (select cm.mine_name from coal_mine cm where cm.mine_no = a.mine_no) coal_mine,
            (select ct.coal_name from COAL_TYPE ct where ct.coal_no = a.coal_no) coal_nam,
            (select count(1) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) car_count,
            (select to_char(sum(ai.mz_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) mz_qty,
            (select to_char(sum(ai.pz_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) pz_qty,
            (select to_char(sum(ai.net_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) net_qty,
            (select to_char(sum(ai.tick_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) tick_qty,
            (select to_char(sum(ai.kd_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) kd_qty
            from batch_no_info a
            where 1 = 1
            and a.batch_no_type = '0'
            <if test="beginTime != null" >
                <![CDATA[
             and a.insert_time >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
            </if>

            <if test="endTime != null" >
                <![CDATA[
             and a.insert_time <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
            </if>
            UNION
            select a.batch_no car_batch_no,
            to_char(a.insert_time, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
            (select vi.ven_name from vendor_info vi where vi.ven_no = a.ven_no) ven_nam,
            (select cm.mine_name from coal_mine cm where cm.mine_no = a.mine_no) coal_mine,
            (select ct.coal_name from COAL_TYPE ct where ct.coal_no = a.coal_no) coal_nam,
            (select count(1) from rlrecordmsthy ai where ai.train_no=a.train_no) car_count,
            (select to_char(sum(ai.mz_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) mz_qty,
            (select to_char(sum(ai.pz_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) pz_qty,
            (select to_char(sum(ai.net_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) net_qty,
            (select to_char(sum(ai.tick_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) tick_qty,
            (select to_char(sum(nvl(ai.kd_qty,0))/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) kd_qty
            from batch_no_info a
            where 1 = 1
            and a.batch_no_type = '1'
            <if test="beginTime != null" >
                <![CDATA[
             and a.insert_time >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
            </if>

            <if test="endTime != null" >
                <![CDATA[
             and a.insert_time <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
            </if>
        </if>
        ) m

        <include refid="paging_bottom_sql" />
    </select>


    <!--宣威 要增加按批次统计的页面 zl20180710-->
    <select id="qryWeightRptList4CarBatchFoot" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultMap="weightRptResultMap" >
        select
        sum(m.car_count) car_count,
        sum(m.mz_qty) mz_qty,
        sum(m.pz_qty) pz_qty,
        sum(m.net_qty) net_qty,
        sum(m.tick_qty) tick_qty,
        sum(m.kd_qty) kd_qty
        from (
        <if test="batchNoType ==null" >
        select
        (select count(1) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) car_count,
        (select to_char(sum(ai.mz_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) mz_qty,
        (select to_char(sum(ai.pz_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) pz_qty,
        (select to_char(sum(ai.net_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) net_qty,
        (select to_char(sum(ai.tick_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) tick_qty,
        (select to_char(sum(ai.kd_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) kd_qty
        from batch_no_info a
        where 1 = 1
        and a.batch_no_type = '0'
        <if test="beginTime != null" >
            <![CDATA[
             and a.insert_time >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.insert_time <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>
        union
        select
        (select count(1) from rlrecordmsthy ai where ai.train_no=a.train_no) car_count,
        (select to_char(sum(ai.mz_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) mz_qty,
        (select to_char(sum(ai.pz_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) pz_qty,
        (select to_char(sum(ai.net_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) net_qty,
        (select to_char(sum(ai.tick_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) tick_qty,
        (select to_char(sum(nvl(ai.kd_qty,0))/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) kd_qty
        from batch_no_info a
        where 1 = 1
        and a.batch_no_type = '1'
        <if test="beginTime != null" >
            <![CDATA[
             and a.insert_time >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.insert_time <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>
        </if>
        <if test="batchNoType ==0" >
            select
            (select count(1) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) car_count,
            (select to_char(sum(ai.mz_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) mz_qty,
            (select to_char(sum(ai.pz_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) pz_qty,
            (select to_char(sum(ai.net_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) net_qty,
            (select to_char(sum(ai.tick_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) tick_qty,
            (select to_char(sum(ai.kd_qty)/1000) from rlrecordmstqy ai where ai.car_batch_no=a.batch_no) kd_qty
            from batch_no_info a
            where 1 = 1
            and a.batch_no_type = '0'
            <if test="beginTime != null" >
                <![CDATA[
             and a.insert_time >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
            </if>

            <if test="endTime != null" >
                <![CDATA[
             and a.insert_time <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
            </if>

        </if>
        <if test="batchNoType ==1" >
            select
            (select count(1) from rlrecordmsthy ai where ai.train_no=a.train_no) car_count,
            (select to_char(sum(ai.mz_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) mz_qty,
            (select to_char(sum(ai.pz_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) pz_qty,
            (select to_char(sum(ai.net_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) net_qty,
            (select to_char(sum(ai.tick_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) tick_qty,
            (select to_char(sum(nvl(ai.kd_qty,0))/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) kd_qty
            from batch_no_info a
            where 1 = 1
            and a.batch_no_type = '1'
            <if test="beginTime != null" >
                <![CDATA[
             and a.insert_time >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
            </if>

            <if test="endTime != null" >
                <![CDATA[
             and a.insert_time <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
            </if>
        </if>
        ) m

    </select>



	 <resultMap id="compareBatchResultMap" type="org.gxz.znrl.entity.CompareBatchInfoEntity">
        <result column="rela_id" jdbcType="VARCHAR" property="relaId" />
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="sample_code" jdbcType="VARCHAR" property="sampleCode" />
        <result column="sampling_code" jdbcType="VARCHAR" property="samplingCode" />
        <result column="labor_code" jdbcType="VARCHAR" property="laborCode" />
        <result column="rela_batch_no" jdbcType="VARCHAR" property="relaBatchNo" />
        <result column="rela_sample_code" jdbcType="VARCHAR" property="relaSampleCode" />
        <result column="rela_sampling_code" jdbcType="VARCHAR" property="relaSamplingCode" />
        <result column="rela_labor_code" jdbcType="VARCHAR" property="relaLaborCode" />
        <result column="insert_time" jdbcType="VARCHAR" property="insertTime" />
        <result column="rela_seq" jdbcType="VARCHAR" property="relaSeq" />
        <result column="rela_type" jdbcType="VARCHAR" property="relaType" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="op_code" jdbcType="VARCHAR" property="opCode" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
    </resultMap>


    <select id="qryCompareBatchInfoList" parameterType="org.gxz.znrl.entity.CompareBatchInfoEntity" resultMap="compareBatchResultMap" >
        <include refid="paging_top_sql" />
        select m.*, rownum rownumber
        from (
        select
        a.rela_id,
        a.batch_no ,
        a.sample_code,
        a.sampling_code,
        a.labor_code,
        a.rela_batch_no,
        a.rela_sample_code,
        a.rela_sampling_code,
        a.rela_labor_code,
        decode(a.rela_type,'1','存查样抽检','2','入厂抽检') rela_type,
        a.rela_seq,
        to_char(a.insert_time,'yyyy-mm-dd hh24:mi:ss') insert_time,
        (select t.realname from security_user t where t.id = a.op_code) op_code,
        remark
        from batch_no_compare_rela a
        where 1 = 1
        and a.status = '0'
        <if test="relaBatchNo != null" >
            <![CDATA[
                 and a.rela_batch_no like '%'||#{relaBatchNo, jdbcType=VARCHAR}||'%'
                 ]]>
        </if>
        <if test="startTime != null" >
            <![CDATA[
                 and a.insert_time >= to_date(#{startTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
                 ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
                 and a.insert_time <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
                 ]]>
        </if>
        ) m

        <include refid="paging_bottom_sql" />
    </select>


    <select id="qryBatchInfoListCnt" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from batch_no_info a
        where 1 = 1

        <if test="batchNo != null" >
            and a.batch_no like '%'||#{batchNo, jdbcType=VARCHAR}||'%'
        </if>
        <if test="startTime != null" >
            and a.insert_time >= to_date(#{startTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
        </if>

        <if test="endTime != null" >
            <![CDATA[
                 and a.insert_time <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
                 ]]>
        </if>

        <if test="batchNoType != null" >
            and a.batch_no_type in (${batchNoType})
        </if>
    </select>

    <select id="qryBatchInfoList" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultMap="samplingRptResultMap" >
        <include refid="paging_top_sql" />
        select m.*, rownum rownumber
        from (
        select
        a.batch_no ,
        a.sample_code,
        a.sampling_code,
        a.labor_code,
        a.batch_no_type
        from batch_no_info a
        where 1 = 1

        <if test="batchNo != null" >
            <![CDATA[
                 and a.batch_no like '%'||#{batchNo, jdbcType=VARCHAR}||'%'
                 ]]>
        </if>
        <if test="startTime != null" >
            <![CDATA[
                 and a.insert_time >= to_date(#{startTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
                 ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
                 and a.insert_time <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
                 ]]>
        </if>

        <if test="batchNoType != null" >
            and a.batch_no_type in (${batchNoType})
        </if>
        ) m

        <include refid="paging_bottom_sql" />
    </select>

    <!--大武口先提的 厂内倒运的车辆只过重磅 不分批 单独做个统计报表 xxs20180609-->
    <select id="qryWeightRptList4CN" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultMap="weightRptResultMap" >
        <include refid="paging_top_sql" />
        select m.*, rownum rownumber
        from (
        select
        a.record_no,
        a.car_id,
        getCarInfo(a.car_id, 'CAR_TYPE') car_type_name,
        getCarInfo(a.car_id, 'TRANS_TYPE') trans_type_name,
        a.car_batch_no,
        to_char(a.record_dtm, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.cz_dtm, 'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        to_char(a.jq_dtm, 'yyyy-mm-dd hh24:mi:ss') jq_dtm,
        to_char(a.mz_qty/1000) mz_qty,
        to_char(a.kd_qty/1000) kd_qty,
        to_char(a.pz_qty/1000) pz_qty,
        to_char(a.net_qty/1000) net_qty,
        to_char(a.tick_qty/1000) tick_qty,
        to_char(a.net_qty/1000-nvl((getUnloadInfo(a.record_no, 'KD_QTY')/1000),0)) ys_qty,
        a.jq_balance_no,
        a.cz_balance_no
        from RLRECORDMSTQY_EXBATCH a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="order == null" >
            order by record_dtm desc
        </if>

        <if test='order != null and sort == "mzQty"' >
            order by  mz_qty  ${order}
        </if>

        <if test='order != null and sort == "kdQty"' >
            order by  kd_qty  ${order}
        </if>

        <if test='order != null and sort == "czDtm"' >
            order by  cz_dtm  ${order}
        </if>

        <if test='order != null and sort == "jqDtm"' >
            order by  jq_dtm  ${order}
        </if>

        ) m

        <include refid="paging_bottom_sql" />
    </select>


    <!--大武口先提的 厂内倒运的车辆只过重磅 不分批 单独做个统计报表 xxs20180609-->
    <select id="qryWeightRptList4CNOther" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultMap="weightRptResultMap" >
        <include refid="paging_top_sql" />
        select m.*, rownum rownumber
        from (
        select
        a.record_no,
        a.car_id,
        getCarInfo(a.car_id, 'CAR_TYPE') car_type_name,
        getCarInfo(a.car_id, 'TRANS_TYPE') trans_type_name,
        a.car_batch_no,
        to_char(a.record_dtm, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
        to_char(a.cz_dtm, 'yyyy-mm-dd hh24:mi:ss') cz_dtm,
        to_char(a.jq_dtm, 'yyyy-mm-dd hh24:mi:ss') jq_dtm,
        to_char(a.mz_qty/1000) mz_qty,
        to_char(a.kd_qty/1000) kd_qty,
        to_char(a.pz_qty/1000) pz_qty,
        to_char(a.net_qty/1000) net_qty,
        to_char(a.tick_qty/1000) tick_qty,
        to_char(a.net_qty/1000-nvl((getUnloadInfo(a.record_no, 'KD_QTY')/1000),0)) ys_qty,
        a.jq_balance_no,
        a.cz_balance_no
        from RLRECORDMSTQY_OTHER a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

        <if test="order == null" >
            order by record_dtm desc
        </if>

        <if test='order != null and sort == "mzQty"' >
            order by  mz_qty  ${order}
        </if>

        <if test='order != null and sort == "kdQty"' >
            order by  kd_qty  ${order}
        </if>

        <if test='order != null and sort == "czDtm"' >
            order by  cz_dtm  ${order}
        </if>

        <if test='order != null and sort == "jqDtm"' >
            order by  jq_dtm  ${order}
        </if>

        ) m

        <include refid="paging_bottom_sql" />
    </select>


    <select id="qryWeightRptListCnt4CN" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from RLRECORDMSTQY_EXBATCH a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

    </select>

    <select id="qryWeightRptListCnt4CNOther" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from RLRECORDMSTQY_OTHER a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

    </select>


    <select id="qryEntryTotalCnt4CN" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer">
        select count(1)
        from RLRECORDMSTQY_EXBATCH a
        where 1 = 1

        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

    </select>

    <select id="qryWeightTotalCnt4CN" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer">
        select count(1)
        from RLRECORDMSTQY_EXBATCH a
        where a.cz_dtm is not null
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

    </select>

    <select id="qryLightTotalCnt4CN" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer">
        select count(1)
        from RLRECORDMSTQY_EXBATCH a
        where a.jq_dtm is not null
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

    </select>

    <select id="qryTotalMz4CN" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select nvl(sum(a.mz_qty), 0)/1000
        from RLRECORDMSTQY_EXBATCH a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

    </select>

    <select id="qryTotalPz4CN" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select nvl(sum(a.pz_qty), 0)/1000
        from RLRECORDMSTQY_EXBATCH a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

    </select>

    <select id="qryTotalNet4CN" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select nvl(sum(a.net_qty), 0)/1000
        from RLRECORDMSTQY_EXBATCH a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

    </select>

    <select id="qryTotalKd4CN" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select nvl(sum(a.kd_qty), 0)/1000
        from RLRECORDMSTQY_EXBATCH a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

    </select>

    <select id="qryTotalTick4CN" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.String" >
        select nvl(sum(a.tick_qty), 0)/1000
        from RLRECORDMSTQY_EXBATCH a
        where 1 = 1
        <if test="beginTime != null" >
            <![CDATA[
             and a.record_dtm >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.record_dtm <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

        <if test="carId != null" >
            and a.car_id like #{carId,jdbcType=VARCHAR}
        </if>

    </select>

    <!--宣威 要增加火车按批次统计的页面 zl20180710-->
    <select id="qryWeightRptListCnt4TrainBatch" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from batch_no_info a
        where 1 = 1
        and a.batch_no_type = '1'
        <if test="beginTime != null" >
            <![CDATA[
             and a.insert_time >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.insert_time <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>

    </select>

    <!--宣威 要增加火车按批次统计的页面 zl20180710-->
    <select id="qryWeightRptList4TrainBatch" parameterType="org.gxz.znrl.entity.WeightRptEntity" resultMap="weightRptResultMap" >
        <include refid="paging_top_sql" />
        select m.*, rownum rownumber
        from (
        select a.batch_no car_batch_no,
        to_char(a.insert_time, 'yyyy-mm-dd hh24:mi:ss') record_dtm,
        (select vi.ven_name from vendor_info vi where vi.ven_no = a.ven_no) ven_nam,
        (select cm.mine_name from coal_mine cm where cm.mine_no = a.mine_no) coal_mine,
        (select ct.coal_name from COAL_TYPE ct where ct.coal_no = a.coal_no) coal_nam,
        (select count(1) from rlrecordmsthy ai where ai.train_no=a.train_no) car_count,
        (select to_char(sum(ai.mz_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) mz_qty,
        (select to_char(sum(ai.pz_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) pz_qty,
        (select to_char(sum(ai.net_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) net_qty,
        (select to_char(sum(ai.tick_qty)/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) tick_qty,
        (select to_char(sum(nvl(ai.kd_qty,0))/1000) from rlrecordmsthy ai where ai.train_no=a.train_no) kd_qty
        from batch_no_info a
        where 1 = 1
        and a.batch_no_type = '1'
        <if test="beginTime != null" >
            <![CDATA[
             and a.insert_time >= to_date(#{beginTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
             ]]>
        </if>

        <if test="endTime != null" >
            <![CDATA[
             and a.insert_time <= to_date(#{endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')+1-0.00001
             ]]>
        </if>
        ) m

        <include refid="paging_bottom_sql" />
    </select>


    <select id="qryCheckBatchRptCnt" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from batch_no_info a
        where 1 = 1

        <if test="sampleCode != null">
            AND A.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null">
            AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>

        <if test="laborCode != null">
            AND A.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>

        <if test="batchNoType != null">
            AND A.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null">
            <![CDATA[
                 and A.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>

        <if test="endTime != null">
            <![CDATA[
                 and A.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>
        <if test="mineNo != null">
            AND A.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="qryCheckBatchRptList" parameterType="org.gxz.znrl.entity.SamplingRptEntity" resultMap="samplingRptResultMap" >
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
        from (select a.batch_no,
        a.batch_rela_id,
        a.sampling_code sampling_code_4_check,
        a.sample_code sample_code_4_check,
        a.labor_code labor_code_4_check,
        (select b.labor_code from batch_no_info b where b.batch_no=a.batch_rela_id) labor_code,
        decode(get_status_4_checkbatch(a.sampling_code, '2'), '0','未制样','1','已制样','-') sampling_status,
        decode(get_status_4_checkbatch(a.sampling_code, '3'), '0','未化验','1','已化验','-') labor_status,
        a.batch_no_type,
        (select coal_name from coal_type where coal_no = a.coal_no) coal_name,
        (select mine_name from coal_mine where mine_no = a.mine_no) mine_name,
        (select ven_name from vendor_info where ven_no = a.ven_no) ven_name,
        a.coal_no,
        a.mine_no,
        a.ven_no
        from batch_no_info a
        where 1 = 1

        <if test="batchNoType != null">
            AND A.BATCH_NO_TYPE = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="batchNo != null">
            AND A.BATCH_NO = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null">
            AND A.SAMPLE_CODE = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="samplingCode != null">
            AND A.SAMPLING_CODE = #{samplingCode,jdbcType=VARCHAR}
        </if>
        <if test="laborCode != null">
            AND A.labor_code = #{laborCode,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null">
            <![CDATA[
                 and A.INSERT_TIME >= to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
                 ]]>
        </if>
        <if test="endTime != null">
            <![CDATA[
                 and A.INSERT_TIME < to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1
                 ]]>
        </if>
        <if test="mineNo != null">
            AND A.MINE_NO = #{mineNo,jdbcType=VARCHAR}
        </if>
        order by A.insert_time desc
        )t

        <include refid="paging_bottom_sql"/>
    </select>


<resultMap id="beltWeightDataMap" type="org.gxz.znrl.entity.BeltWeightEntity">
        <result column="insert_time" jdbcType="VARCHAR" property="insertTime" />
        <result column="beltWeight_A_old" jdbcType="VARCHAR" property="beltWeight_A_old" />
        <result column="beltWeight_A_new" jdbcType="VARCHAR" property="beltWeight_A_new" />
        <result column="beltWeight_B_old" jdbcType="VARCHAR" property="beltWeight_B_old" />
        <result column="beltWeight_B_new" jdbcType="VARCHAR" property="beltWeight_B_new" />
        <result column="team_name" jdbcType="VARCHAR" property="teamName" />
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
    </resultMap>

    <select id="qryBeltWeightRptList" parameterType="org.gxz.znrl.entity.BeltWeightEntity" resultMap="beltWeightDataMap" >
        select
            to_char(a.insert_time,'yyyy-mm-dd') insert_time,
            a.batch_no,
            getBeltWeightTotalQty('01', a.batch_no) beltWeight_B_old,
            getBeltWeightTotalQty('02', a.batch_no) beltWeight_A_old,
            getBeltWeightTotalQty('03', a.batch_no) beltWeight_B_new,
            getBeltWeightTotalQty('04', a.batch_no) beltWeight_A_new,
            decode(substr(a.batch_no,14,1),'1','早班','2','下午','3','前夜','4','后夜','-') team_name
        from batch_no_info a
        where  a.batch_no_type = '9'
            <if test="beginTime != null" >
            and a.insert_time  <![CDATA[  >=   ]]> to_date(#{beginTime,jdbcType=VARCHAR},'YYYY-MM-DD')
            </if>

            <if test="endTime != null" >
            and a.insert_time  <![CDATA[ <=   ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD') + 1 - 0.00001
            </if>
        order by a.batch_no
    </select>

    <select id="qryBeltWeightFooter" parameterType="org.gxz.znrl.entity.BeltWeightEntity" resultMap="beltWeightDataMap" >
        select
        '汇总' insert_time,
        sum(w.beltWeight_B_old) beltWeight_B_old,
        sum(w.beltWeight_A_old) beltWeight_A_old,
        sum(w.beltWeight_B_new) beltWeight_B_new,
        sum(w.beltWeight_A_new) beltWeight_A_new
        from
        ( select
            a.insert_time,
            getBeltWeightTotalQty('01', a.batch_no) beltWeight_B_old,
            getBeltWeightTotalQty('02', a.batch_no) beltWeight_A_old,
            getBeltWeightTotalQty('03', a.batch_no) beltWeight_B_new,
            getBeltWeightTotalQty('04', a.batch_no) beltWeight_A_new
          from batch_no_info a
          where  a.batch_no_type='9'
            <if test="beginTime != null" >
                and a.insert_time  <![CDATA[  >=   ]]> to_date(#{beginTime,jdbcType=VARCHAR},'YYYY-MM-DD')
            </if>

            <if test="endTime != null" >
                and a.insert_time  <![CDATA[ <=   ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD') + 1 - 0.00001
            </if>
        ) w
        group by '汇总'
    </select>

    <select id="qrySampleDetailCnt" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultType="java.lang.Integer" >
        select count(*)
             from take_sample_rec  a,sample_car_status b
            where a.record_no = b.record_no
        <if test="startTime != null" >
            and a.insert_time <![CDATA[ >=   ]]>  to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="endTime != null" >
            and a.insert_time <![CDATA[ <=   ]]>  to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD') + 1 - 0.00001
        </if>
        <if test="carId != null" >
            and a.car_id = #{carId,jdbcType=VARCHAR}
        </if>
        <if test="sampleCode != null" >
            and a.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>
            order by a.insert_time desc
    </select>

    <select id="qrySampleDetailRptList" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultMap="sampleRptResultMap" >
        <include refid="paging_top_sql"/>
        select s.*, rownum rownumber
        from (
            select a.car_id  carId,
                    a.sample_code sampleCode,
                    a.start_time,
                    a.end_time,
                    b.samplepoints sample_cnt,
                    b.machinecode machine_code,
                    getcoordinatexy(b.coordinate1,1) coordinateX1,
                    getcoordinatexy(b.coordinate1,2) coordinateY1,
                    getcoordinatexy(b.coordinate2,1) coordinateX2,
                    getcoordinatexy(b.coordinate2,2) coordinateY2,
                    getcoordinatexy(b.coordinate3,1) coordinateX3,
                    getcoordinatexy(b.coordinate3,2) coordinateY3,
                    b.suofenInterval
             from take_sample_rec  a,sample_car_status b
            where a.record_no = b.record_no
        <if test="startTime != null" >
              and a.insert_time <![CDATA[ >=   ]]>  to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="endTime != null" >
              and a.insert_time <![CDATA[ <=   ]]>  to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD') + 1 - 0.00001
        </if>
        <if test="carId != null" >
             and a.car_id = #{carId,jdbcType=VARCHAR}
        </if>
        <if test="sampleCode != null" >
             and a.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>
            order by a.insert_time desc
        ) s
        <include refid="paging_bottom_sql"/>
    </select>

    <select id="qrySampleEvaluation"  parameterType="java.util.Map" resultType="java.util.Map">
       SELECT a.evaluate_id,
               a.train_no,
               a.batch_no,
               a.sample_code,
               a.batch_no_type,
               a.net_qty,
               a.batch_num_standard,
               a.batch_num_real,
               a.batch_num_result,
               a.sample_gap_standard,
               a.sample_gap_real,
               a.sample_gap_result,
               a.sample_cnt_standard,
               a.sample_cnt_real,
               a.sample_cnt_result,
               a.sample_qty_standard,
               a.sample_qty_real,
               a.sample_qty_result,
               a.sample_avgqty_standard,
               a.sample_avgqty_real,
               a.sample_avgqty_result,
               a.suofen_avgqty_standard,
               a.suofen_avgqty_real,
               a.suofen_avgqty_result,
               a.suofen_gap,
               a.suofen_cnt,
               a.remark,
               a.insert_time,
               a.update_time,
               a.status,
               to_char(a.start_time,'yyyy-mm-dd hh24:mi:ss') start_time,
               to_char(a.end_time,'yyyy-mm-dd hh24:mi:ss') end_time,
               nvl(to_char(b.fact_time,'yyyy-mm-dd'),'') fact_time,
               (select nvl(max(s.ship_name),'') from ship_info s where s.ship_id = b.ship_id) ship_name
          FROM sample_evaluation a, ship_record b
         WHERE a.status ='1'
           and a.train_no = b.ship_trans_no(+)
            <if test="qryBeginDt != null and qryBeginDt!=''" >
                and a.insert_time  <![CDATA[ >= ]]> to_date(#{qryBeginDt},'yyyy-mm-dd')
            </if>
            <if test="qryEndDt != null and qryEndDt!=''" >
                and a.insert_time  <![CDATA[ <= ]]> to_date(#{qryEndDt},'yyyy-mm-dd')
            </if>
			<if test="qryBatchType != null and qryBatchType!=''" >
                and a.batch_no_type  = #{qryBatchType}
            </if>
         order by evaluate_id
    </select>


    <select id="qrySampleRptCnt4JB" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultType="java.lang.Integer" >
        select count(1)
        from batch_no_info c
        where 1 = 1

        <if test="batchNo != null">
            and c.batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null" >
            and c.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null" >
            and c.insert_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="endTime != null" >
            and c.insert_time <![CDATA[ < ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="batchNoType != null" >
            and c.batch_no_type = #{batchNoType,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="qrySampleRptList4JB" parameterType="org.gxz.znrl.entity.SampleRptEntity" resultMap="sampleRptResultMap" >
        <include refid="paging_top_sql"/>
        select t.*, rownum rownumber
        from (select c.batch_no,
        decode(c.batch_no_type, '0','汽车煤批次','1','火车煤批次','2','轮船煤批次','3','场地煤批次','5','系统外批次','6','船煤抽检批次','7','火车抽检批次','8','汽车抽检批次','9','入炉煤批次','系统外批次') batch_type_name,
        c.sample_code,
        c.sampling_code,
        (select decode(sample_typ,
        '0',
        '皮带采样',
        '1',
        '皮带大水分旁路',
        '2',
        '人工采样',
        '3',
        '车厢采样',
        '4',
        '车厢大水分旁路')
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) sample_type,
        (select sample_typ
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) sample_typ,

        (select sample_qty
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) sample_qty,

        (select op_code
        from take_sample_rec
        where sample_code = c.sample_code
        and rownum = 1) user_code,

        (select getSampleCnt(c.sample_code) from dual) sample_cnt,
        (select getSampleSize(c.sample_code) from dual) sample_size,
        (select getSampleGap(c.sample_code) from dual) sample_gap,
        (select getSampleCount(c.sample_code) from dual) sample_cnt_new,
        (select getSampleRatio(c.sample_code) from dual) sample_rat,
        (select nvl(sum(sample_freq),0) from take_sample_rec where sample_code = c.sample_code) sample_freq,

        decode((select machine_code from take_sample_rec where sample_code = c.sample_code and rownum  <![CDATA[ < ]]>   2),'PC01','C26AB','PC02','C26AB','PC03','9甲乙','PC04','9甲乙','LC04','4期','LC06','6期','LC07','7期') machine_code,

        case
        when c.batch_no_type = '9' then
        (select decode(substr(batch_no,15,2),'01','夜班','02','早班','03','中班','未知班次')
        from batch_no_info bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type in ('0', '1', '2') then
        (select '--' from dual)
        end bc,

        case
        when c.batch_no_type = '0' then
        (select to_char(count(1))
        from rlrecordmstqy bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type = '1' then
        (select to_char(count(1))
        from rlrecordmsthy bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type in ('9', '2', '3') then
        (select '0' from dual)
        end car_cnt,

        case
        when c.batch_no_type = '0' then
        (select min(bb.start_time)
        from take_sample_rec bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type in ('1', '9', '2','3') then
        (select bb.start_time
        from take_sample_rec bb
        where bb.sample_code = c.sample_code
        and rownum = 1)
        end start_time,

        case
        when c.batch_no_type = '0' then
        (select max(bb.end_time)
        from take_sample_rec bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type in ('1', '9', '2','3') then
        (select bb.end_time
        from take_sample_rec bb
        where bb.sample_code = c.sample_code
        and rownum = 1)
        end end_time,

        (select bb.coal_name
        from coal_type bb
        where bb.coal_no = c.coal_no) as coal_name,

        (select bb.ven_name
        from vendor_info bb
        where bb.ven_no = c.ven_no) as ven_name,

        (select bb.mine_name
        from coal_mine bb
        where bb.mine_no = c.mine_no) as mine_name,

        (select getBatchCarIds(c.batch_no,c.batch_no_type) from dual) as  car_id,

        case
        when c.batch_no_type = '0' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.sample_code = c.sample_code) / 1000)
        when c.batch_no_type = '1' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.sample_code = c.sample_code) / 1000)
        when c.batch_no_type = '7' then
        ((select sum(bb.net_qty)
        from rlrecordmsthy bb
        where bb.attach_batch_no = c.batch_no) / 1000)
        when c.batch_no_type = '8' then
        ((select sum(bb.net_qty)
        from rlrecordmstqy bb
        where bb.attach_batch_no = c.batch_no) / 1000)
        when c.batch_no_type = '9' then
        ((select sum(bb.all_net_qty)
        from batch_no_info bb
        where bb.sample_code = c.sample_code)/1000)
        when c.batch_no_type = '2' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = c.sample_code)
        when c.batch_no_type = '3' then
        (select bb.all_net_qty
        from batch_no_info bb
        where bb.sample_code = c.sample_code)
        end total_net_qty,
        c.batch_no_type,
        (select user_name from take_sample_rec s where s.sample_code = c.sample_code and rownum = 1) user_name
        from batch_no_info c
        where 1 = 1
        <if test="batchNo != null">
            and c.batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>

        <if test="sampleCode != null" >
            and c.sample_code = #{sampleCode,jdbcType=VARCHAR}
        </if>

        <if test="startTime != null" >
            and c.insert_time <![CDATA[ >= ]]> to_date(#{startTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>

        <if test="endTime != null" >
            and c.insert_time <![CDATA[ < ]]> to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD')+1-0.00001
        </if>

        <if test="batchNoType != null" >
            and c.batch_no_type = #{batchNoType,jdbcType=VARCHAR}
        </if>

        <if test="coalNo != null" >
            and  c.coal_no IN ${coalNo}

        </if>
        order by c.insert_time desc) t
        <include refid="paging_bottom_sql"/>
    </select>


    <resultMap id="UploadRateRptResultMap" type="org.gxz.znrl.entity.UploadRateEntity">
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="sample_type" jdbcType="VARCHAR" property="sampleType" />
        <result column="sample_type_name" jdbcType="VARCHAR" property="sampleTypeName" />
        <result column="zy_type" jdbcType="VARCHAR" property="zyType" />
        <result column="zy_type_name" jdbcType="VARCHAR" property="zyTypeName" />
        <result column="insert_time" jdbcType="VARCHAR" property="insertTime" />
        <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
    </resultMap>


    <select id="qryUploadRateRptListCnt" parameterType="org.gxz.znrl.entity.UploadRateEntity" resultType="java.lang.Integer" >
        select count(*)
        from upload_rate a
        where 1=1
        <if test="beginTime != null" >
            and a.batch_time <![CDATA[ >=   ]]>  to_date(#{beginTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="endTime != null" >
            and a.batch_time <![CDATA[ <=   ]]>  to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD') + 1 - 0.00001
        </if>
        <if test="batchNo != null" >
            and a.batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>
        order by a.batch_time desc
    </select>

    <select id="qryUploadRateRptList" parameterType="org.gxz.znrl.entity.UploadRateEntity" resultMap="UploadRateRptResultMap" >
        <include refid="paging_top_sql"/>
        select s.*, rownum rownumber
        from (
        select a.batch_no,
        a.sample_type,
        decode(a.sample_type,'1','皮带采样','人工采样') sample_type_name,
        a.zy_type,
        decode(a.zy_type,'1','在线制样','离线制样') zy_type_name,
        to_char(insert_time,'yyyy/mm/dd hh24:mi:ss') insert_time
        from upload_rate a
        where 1=1
        <if test="beginTime != null" >
            and a.batch_time <![CDATA[ >=   ]]>  to_date(#{beginTime,jdbcType=VARCHAR},'YYYY-MM-DD')
        </if>
        <if test="endTime != null" >
            and a.batch_time <![CDATA[ <=   ]]>  to_date(#{endTime,jdbcType=VARCHAR},'YYYY-MM-DD') + 1 - 0.00001
        </if>
        <if test="batchNo != null" >
            and a.batch_no = #{batchNo,jdbcType=VARCHAR}
        </if>
        order by a.batch_time desc
        ) s
        <include refid="paging_bottom_sql"/>
    </select>

    <update id="updateSampleCnt" parameterType="org.gxz.znrl.entity.SampleRptEntity">
        update take_sample_rec r
            set r.sample_cnt=#{sampleCnt},r.update_time=sysdate,r.op_code=#{opCode}
        where r.sample_code=#{sampleCode}
    </update>
</mapper>