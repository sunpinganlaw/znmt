<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.gxz.znrl.mapper.MsgMapper">
  <resultMap id="BaseResultMap" type="org.gxz.znrl.entity.Msg">
    <id column="msg_ID" jdbcType="BIGINT" property="msgId" />
    <result column="msg_TITLE" jdbcType="VARCHAR" property="msgTitle" />
    <result column="STATE" jdbcType="VARCHAR" property="state" />
    <result column="SEND_DATE" jdbcType="TIMESTAMP" property="sendDate" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="CREATE_user_ID" jdbcType="BIGINT" property="createUserId" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="org_id" jdbcType="VARCHAR" property="orgId" />
    <result column="msg_type" jdbcType="VARCHAR" property="msgType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.gxz.znrl.entity.Msg">
    <result column="msg_CONTENT" jdbcType="LONGVARBINARY" property="msgContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    msg_ID, msg_TITLE, STATE, SEND_DATE, CREATE_DATE, CREATE_user_ID, role_id, org_id, 
    msg_type
  </sql>
  <sql id="Blob_Column_List">
    msg_CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.gxz.znrl.entity.MsgCriteria" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from business_msg_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.gxz.znrl.entity.MsgCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from business_msg_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from business_msg_content
    where msg_ID = #{msgId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from business_msg_content
    where msg_ID = #{msgId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.gxz.znrl.entity.MsgCriteria">
    delete from business_msg_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.gxz.znrl.entity.Msg">
    insert into business_msg_content (msg_ID, msg_TITLE, STATE, 
      SEND_DATE, CREATE_DATE, CREATE_user_ID, 
      role_id, org_id, msg_type, 
      msg_CONTENT)
    values (#{msgId,jdbcType=BIGINT}, #{msgTitle,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{sendDate,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, 
      #{roleId,jdbcType=VARCHAR}, #{orgId,jdbcType=VARCHAR}, #{msgType,jdbcType=VARCHAR}, 
      #{msgContent,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="org.gxz.znrl.entity.Msg">
    insert into business_msg_content
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="msgId != null">
        msg_ID,
      </if>
      <if test="msgTitle != null">
        msg_TITLE,
      </if>
      <if test="state != null">
        STATE,
      </if>
      <if test="sendDate != null">
        SEND_DATE,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="createUserId != null">
        CREATE_user_ID,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="msgType != null">
        msg_type,
      </if>
      <if test="msgContent != null">
        msg_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="msgId != null">
        #{msgId,jdbcType=BIGINT},
      </if>
      <if test="msgTitle != null">
        #{msgTitle,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null">
        #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="msgType != null">
        #{msgType,jdbcType=VARCHAR},
      </if>
      <if test="msgContent != null">
        #{msgContent,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.gxz.znrl.entity.MsgCriteria" resultType="java.lang.Integer">
    select count(*) from business_msg_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update business_msg_content
    <set>
      <if test="record.msgId != null">
        msg_ID = #{record.msgId,jdbcType=BIGINT},
      </if>
      <if test="record.msgTitle != null">
        msg_TITLE = #{record.msgTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        STATE = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.sendDate != null">
        SEND_DATE = #{record.sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        CREATE_user_ID = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId,jdbcType=VARCHAR},
      </if>
      <if test="record.msgType != null">
        msg_type = #{record.msgType,jdbcType=VARCHAR},
      </if>
      <if test="record.msgContent != null">
        msg_CONTENT = #{record.msgContent,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update business_msg_content
    set msg_ID = #{record.msgId,jdbcType=BIGINT},
      msg_TITLE = #{record.msgTitle,jdbcType=VARCHAR},
      STATE = #{record.state,jdbcType=VARCHAR},
      SEND_DATE = #{record.sendDate,jdbcType=TIMESTAMP},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      CREATE_user_ID = #{record.createUserId,jdbcType=BIGINT},
      role_id = #{record.roleId,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=VARCHAR},
      msg_type = #{record.msgType,jdbcType=VARCHAR},
      msg_CONTENT = #{record.msgContent,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update business_msg_content
    set msg_ID = #{record.msgId,jdbcType=BIGINT},
      msg_TITLE = #{record.msgTitle,jdbcType=VARCHAR},
      STATE = #{record.state,jdbcType=VARCHAR},
      SEND_DATE = #{record.sendDate,jdbcType=TIMESTAMP},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      CREATE_user_ID = #{record.createUserId,jdbcType=BIGINT},
      role_id = #{record.roleId,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=VARCHAR},
      msg_type = #{record.msgType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.gxz.znrl.entity.Msg">
    update business_msg_content
    <set>
      <if test="msgTitle != null">
        msg_TITLE = #{msgTitle,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null">
        SEND_DATE = #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        CREATE_user_ID = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="msgType != null">
        msg_type = #{msgType,jdbcType=VARCHAR},
      </if>
      <if test="msgContent != null">
        msg_CONTENT = #{msgContent,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where msg_ID = #{msgId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.gxz.znrl.entity.Msg">
    update business_msg_content
    set msg_TITLE = #{msgTitle,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=VARCHAR},
      SEND_DATE = #{sendDate,jdbcType=TIMESTAMP},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CREATE_user_ID = #{createUserId,jdbcType=BIGINT},
      role_id = #{roleId,jdbcType=VARCHAR},
      org_id = #{orgId,jdbcType=VARCHAR},
      msg_type = #{msgType,jdbcType=VARCHAR},
      msg_CONTENT = #{msgContent,jdbcType=LONGVARBINARY}
    where msg_ID = #{msgId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.gxz.znrl.entity.Msg">
    update business_msg_content
    set msg_TITLE = #{msgTitle,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=VARCHAR},
      SEND_DATE = #{sendDate,jdbcType=TIMESTAMP},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CREATE_user_ID = #{createUserId,jdbcType=BIGINT},
      role_id = #{roleId,jdbcType=VARCHAR},
      org_id = #{orgId,jdbcType=VARCHAR},
      msg_type = #{msgType,jdbcType=VARCHAR}
    where msg_ID = #{msgId,jdbcType=BIGINT}
  </update>
</mapper>